<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="AppStore">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:AppStore">
      <apidata name="AppStore" group="namespace" />
      <elements>
        <element api="T:AppStore.App" />
        <element api="T:AppStore.AppDetailsPage" />
        <element api="T:AppStore.BlankPage1" />
        <element api="T:AppStore.CategoriesPage" />
        <element api="T:AppStore.CategoryPage" />
        <element api="T:AppStore.MainPage" />
        <element api="T:AppStore.MyAppsPage" />
        <element api="T:AppStore.SearchPage" />
        <element api="T:AppStore.Settings" />
        <element api="T:AppStore.Program" />
      </elements>
    </api>
    <api id="T:AppStore.App">
      <apidata name="App" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Windows.UI.Xaml.Application" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
        <type api="T:Windows.UI.Xaml.Markup.IXamlMetadataProvider" ref="true" />
      </implements>
      <elements>
        <element api="F:AppStore.App.transitions" />
        <element api="F:AppStore.App._contentLoaded" />
        <element api="F:AppStore.App._provider" />
        <element api="M:AppStore.App.#ctor" />
        <element api="M:AppStore.App.OnLaunched(Windows.ApplicationModel.Activation.LaunchActivatedEventArgs)" />
        <element api="M:AppStore.App.HasInternet" />
        <element api="M:AppStore.App.CommandInvokedHandler(Windows.UI.Popups.IUICommand)" />
        <element api="M:AppStore.App.ExtendSplashScreen" />
        <element api="M:AppStore.App.RootFrame_FirstNavigated(System.Object,Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.App.OnSuspending(System.Object,Windows.ApplicationModel.SuspendingEventArgs)" />
        <element api="M:AppStore.App.InitializeComponent" />
        <element api="M:AppStore.App.Connect(System.Int32,System.Object)" />
        <element api="M:AppStore.App.GetXamlType(System.Type)" />
        <element api="M:AppStore.App.GetXamlType(System.String)" />
        <element api="M:AppStore.App.GetXmlnsDefinitions" />
        <element api="M:Windows.UI.Xaml.Application.Exit">
          <apidata name="Exit" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IApplication.Exit">
              <type api="T:Windows.UI.Xaml.IApplication" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.Application" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Application.OnActivated(Windows.ApplicationModel.Activation.IActivatedEventArgs)">
          <apidata name="OnActivated" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="args" in="true">
              <type api="T:Windows.ApplicationModel.Activation.IActivatedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IApplicationOverrides.OnActivated(Windows.ApplicationModel.Activation.IActivatedEventArgs)">
              <type api="T:Windows.UI.Xaml.IApplicationOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.Application" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Application.OnFileActivated(Windows.ApplicationModel.Activation.FileActivatedEventArgs)">
          <apidata name="OnFileActivated" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="args" in="true">
              <type api="T:Windows.ApplicationModel.Activation.FileActivatedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IApplicationOverrides.OnFileActivated(Windows.ApplicationModel.Activation.FileActivatedEventArgs)">
              <type api="T:Windows.UI.Xaml.IApplicationOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.Application" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Application.OnSearchActivated(Windows.ApplicationModel.Activation.SearchActivatedEventArgs)">
          <apidata name="OnSearchActivated" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="args" in="true">
              <type api="T:Windows.ApplicationModel.Activation.SearchActivatedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IApplicationOverrides.OnSearchActivated(Windows.ApplicationModel.Activation.SearchActivatedEventArgs)">
              <type api="T:Windows.UI.Xaml.IApplicationOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.Application" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Application.OnShareTargetActivated(Windows.ApplicationModel.Activation.ShareTargetActivatedEventArgs)">
          <apidata name="OnShareTargetActivated" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="args" in="true">
              <type api="T:Windows.ApplicationModel.Activation.ShareTargetActivatedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IApplicationOverrides.OnShareTargetActivated(Windows.ApplicationModel.Activation.ShareTargetActivatedEventArgs)">
              <type api="T:Windows.UI.Xaml.IApplicationOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.Application" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Application.OnFileOpenPickerActivated(Windows.ApplicationModel.Activation.FileOpenPickerActivatedEventArgs)">
          <apidata name="OnFileOpenPickerActivated" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="args" in="true">
              <type api="T:Windows.ApplicationModel.Activation.FileOpenPickerActivatedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IApplicationOverrides.OnFileOpenPickerActivated(Windows.ApplicationModel.Activation.FileOpenPickerActivatedEventArgs)">
              <type api="T:Windows.UI.Xaml.IApplicationOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.Application" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Application.OnFileSavePickerActivated(Windows.ApplicationModel.Activation.FileSavePickerActivatedEventArgs)">
          <apidata name="OnFileSavePickerActivated" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="args" in="true">
              <type api="T:Windows.ApplicationModel.Activation.FileSavePickerActivatedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IApplicationOverrides.OnFileSavePickerActivated(Windows.ApplicationModel.Activation.FileSavePickerActivatedEventArgs)">
              <type api="T:Windows.UI.Xaml.IApplicationOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.Application" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Application.OnCachedFileUpdaterActivated(Windows.ApplicationModel.Activation.CachedFileUpdaterActivatedEventArgs)">
          <apidata name="OnCachedFileUpdaterActivated" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="args" in="true">
              <type api="T:Windows.ApplicationModel.Activation.CachedFileUpdaterActivatedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IApplicationOverrides.OnCachedFileUpdaterActivated(Windows.ApplicationModel.Activation.CachedFileUpdaterActivatedEventArgs)">
              <type api="T:Windows.UI.Xaml.IApplicationOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.Application" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Application.OnWindowCreated(Windows.UI.Xaml.WindowCreatedEventArgs)">
          <apidata name="OnWindowCreated" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="args" in="true">
              <type api="T:Windows.UI.Xaml.WindowCreatedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IApplicationOverrides.OnWindowCreated(Windows.UI.Xaml.WindowCreatedEventArgs)">
              <type api="T:Windows.UI.Xaml.IApplicationOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.Application" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Application.Resources">
          <apidata name="Resources" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Resources" />
          <setter name="set_Resources" />
          <returns>
            <type api="T:Windows.UI.Xaml.ResourceDictionary" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IApplication.Resources">
              <type api="T:Windows.UI.Xaml.IApplication" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.Application" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Application.RequestedTheme">
          <apidata name="RequestedTheme" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestedTheme" />
          <setter name="set_RequestedTheme" />
          <returns>
            <type api="T:Windows.UI.Xaml.ApplicationTheme" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IApplication.RequestedTheme">
              <type api="T:Windows.UI.Xaml.IApplication" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.Application" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Application.DebugSettings">
          <apidata name="DebugSettings" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DebugSettings" />
          <returns>
            <type api="T:Windows.UI.Xaml.DebugSettings" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IApplication.DebugSettings">
              <type api="T:Windows.UI.Xaml.IApplication" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.Application" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.Application.Resuming">
          <apidata name="Resuming" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Resuming" />
          <remover name="remove_Resuming" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Object" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IApplication.Resuming">
              <type api="T:Windows.UI.Xaml.IApplication" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.Application" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.Application.Suspending">
          <apidata name="Suspending" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Suspending" />
          <remover name="remove_Suspending" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.SuspendingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.ApplicationModel.SuspendingEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IApplication.Suspending">
              <type api="T:Windows.UI.Xaml.IApplication" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.Application" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.Application.UnhandledException">
          <apidata name="UnhandledException" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_UnhandledException" />
          <remover name="remove_UnhandledException" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.UnhandledExceptionEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.UnhandledExceptionEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IApplication.UnhandledException">
              <type api="T:Windows.UI.Xaml.IApplication" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.Application" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
      </containers>
    </api>
    <api id="M:AppStore.App.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.App" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.App._contentLoaded">
      <apidata name="_contentLoaded" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.App" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.App._provider">
      <apidata name="_provider" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.App" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.App.CommandInvokedHandler(Windows.UI.Popups.IUICommand)">
      <apidata name="CommandInvokedHandler" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="command">
          <type api="T:Windows.UI.Popups.IUICommand" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.App" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.App.Connect(System.Int32,System.Object)">
      <apidata name="Connect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="connectionId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
          <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.App" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.App.ExtendSplashScreen">
      <apidata name="ExtendSplashScreen" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.App" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.App.GetXamlType(System.String)">
      <apidata name="GetXamlType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="fullName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
      </returns>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IXamlMetadataProvider.GetXamlType(System.String)">
          <type api="T:Windows.UI.Xaml.Markup.IXamlMetadataProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.App" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.App.GetXamlType(System.Type)">
      <apidata name="GetXamlType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.App" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.App.GetXmlnsDefinitions">
      <apidata name="GetXmlnsDefinitions" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:Windows.UI.Xaml.Markup.XmlnsDefinition" ref="false" />
        </arrayOf>
      </returns>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IXamlMetadataProvider.GetXmlnsDefinitions">
          <type api="T:Windows.UI.Xaml.Markup.IXamlMetadataProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.App" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.App.HasInternet">
      <apidata name="HasInternet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.App" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.App.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.App" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.App.OnLaunched(Windows.ApplicationModel.Activation.LaunchActivatedEventArgs)">
      <apidata name="OnLaunched" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Application.OnLaunched(Windows.ApplicationModel.Activation.LaunchActivatedEventArgs)">
          <type api="T:Windows.UI.Xaml.Application" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.ApplicationModel.Activation.LaunchActivatedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.App" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.App.OnSuspending(System.Object,Windows.ApplicationModel.SuspendingEventArgs)">
      <apidata name="OnSuspending" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.ApplicationModel.SuspendingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.App" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.App.RootFrame_FirstNavigated(System.Object,Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="RootFrame_FirstNavigated" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.App" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.App.transitions">
      <apidata name="transitions" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Media.Animation.TransitionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.App" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.AppDetailsPage">
      <apidata name="AppDetailsPage" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="F:AppStore.AppDetailsPage.selectionGridScreenshots" />
        <element api="F:AppStore.AppDetailsPage.navigationHelper" />
        <element api="F:AppStore.AppDetailsPage.defaultViewModel" />
        <element api="F:AppStore.AppDetailsPage.app" />
        <element api="F:AppStore.AppDetailsPage.appInstalled" />
        <element api="F:AppStore.AppDetailsPage.txtShowMore" />
        <element api="F:AppStore.AppDetailsPage.LayoutRoot" />
        <element api="F:AppStore.AppDetailsPage.FullScreen" />
        <element api="F:AppStore.AppDetailsPage.FullScreenshots" />
        <element api="F:AppStore.AppDetailsPage.ContentRoot" />
        <element api="F:AppStore.AppDetailsPage.txtAppDetails" />
        <element api="F:AppStore.AppDetailsPage.detailsShowMore" />
        <element api="F:AppStore.AppDetailsPage.GridScreenshots" />
        <element api="F:AppStore.AppDetailsPage.txtAddInfo1" />
        <element api="F:AppStore.AppDetailsPage.txtAddInfo2" />
        <element api="F:AppStore.AppDetailsPage.imgAppIcon" />
        <element api="F:AppStore.AppDetailsPage.txtAppName" />
        <element api="F:AppStore.AppDetailsPage.txtAppAuthor" />
        <element api="F:AppStore.AppDetailsPage.btnAppInstall" />
        <element api="F:AppStore.AppDetailsPage.btnAppShare" />
        <element api="F:AppStore.AppDetailsPage.btnMyApps" />
        <element api="F:AppStore.AppDetailsPage.Home" />
        <element api="F:AppStore.AppDetailsPage._contentLoaded" />
        <element api="M:AppStore.AppDetailsPage.#ctor" />
        <element api="M:AppStore.AppDetailsPage.NavigationHelper_LoadState(System.Object,AppStore.Common.LoadStateEventArgs)" />
        <element api="M:AppStore.AppDetailsPage.NavigationHelper_SaveState(System.Object,AppStore.Common.SaveStateEventArgs)" />
        <element api="M:AppStore.AppDetailsPage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.AppDetailsPage.GridScreenshots_ContainerContentChanging(Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs)" />
        <element api="M:AppStore.AppDetailsPage.ShowImages(Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs)" />
        <element api="M:AppStore.AppDetailsPage.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.AppDetailsPage.detailsShowMore_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.AppDetailsPage.GridScreenshots_SelectionChanged(System.Object,Windows.UI.Xaml.Controls.SelectionChangedEventArgs)" />
        <element api="M:AppStore.AppDetailsPage.Button_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.AppDetailsPage.HardwareButtons_BackPressed(System.Object,Windows.Phone.UI.Input.BackPressedEventArgs)" />
        <element api="M:AppStore.AppDetailsPage.btnAppInstall_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.AppDetailsPage.btnAppShare_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.AppDetailsPage.Search_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.AppDetailsPage.Home_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.AppDetailsPage.Settings_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.AppDetailsPage.MyApps_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.AppDetailsPage.Categories_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.AppDetailsPage.About_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.AppDetailsPage.Feedback_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.AppDetailsPage.InitializeComponent" />
        <element api="M:AppStore.AppDetailsPage.Connect(System.Int32,System.Object)" />
        <element api="P:AppStore.AppDetailsPage.NavigationHelper" />
        <element api="P:AppStore.AppDetailsPage.DefaultViewModel" />
        <element api="M:Windows.UI.Xaml.Controls.Page.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
          <apidata name="OnNavigatingFrom" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IPageOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.TopAppBar">
          <apidata name="TopAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TopAppBar" />
          <setter name="set_TopAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.TopAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.NavigationCacheMode">
          <apidata name="NavigationCacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_NavigationCacheMode" />
          <setter name="set_NavigationCacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Navigation.NavigationCacheMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.NavigationCacheMode">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.BottomAppBar">
          <apidata name="BottomAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BottomAppBar" />
          <setter name="set_BottomAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.BottomAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.Frame">
          <apidata name="Frame" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Frame" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.Frame" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.Frame">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.UserControl.Content">
          <apidata name="Content" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Content" />
          <setter name="set_Content" />
          <returns>
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IUserControl.Content">
              <type api="T:Windows.UI.Xaml.Controls.IUserControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.ApplyTemplate">
          <apidata name="ApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.ApplyTemplate">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.Focus(Windows.UI.Xaml.FocusState)">
          <apidata name="Focus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.Focus(Windows.UI.Xaml.FocusState)">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerEntered" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerPressed" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerMoved" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerReleased" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerExited" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCaptureLost" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCanceled" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerWheelChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
          <apidata name="OnTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
          <apidata name="OnDoubleTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
          <apidata name="OnHolding" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
          <apidata name="OnRightTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
          <apidata name="OnManipulationStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
          <apidata name="OnManipulationInertiaStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
          <apidata name="OnManipulationStarted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
          <apidata name="OnManipulationDelta" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
          <apidata name="OnManipulationCompleted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnGotFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnLostFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDrop(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDrop(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.GetTemplateChild(System.String)">
          <apidata name="GetTemplateChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="childName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlProtected.GetTemplateChild(System.String)">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStyle">
          <apidata name="FontStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStyle" />
          <setter name="set_FontStyle" />
          <returns>
            <type api="T:Windows.UI.Text.FontStyle" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStyle">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStretch">
          <apidata name="FontStretch" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStretch" />
          <setter name="set_FontStretch" />
          <returns>
            <type api="T:Windows.UI.Text.FontStretch" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStretch">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontSize">
          <apidata name="FontSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontSize" />
          <setter name="set_FontSize" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontSize">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontFamily">
          <apidata name="FontFamily" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontFamily" />
          <setter name="set_FontFamily" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.FontFamily" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontFamily">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontWeight">
          <apidata name="FontWeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontWeight" />
          <setter name="set_FontWeight" />
          <returns>
            <type api="T:Windows.UI.Text.FontWeight" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontWeight">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.CharacterSpacing">
          <apidata name="CharacterSpacing" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CharacterSpacing" />
          <setter name="set_CharacterSpacing" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.CharacterSpacing">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderThickness">
          <apidata name="BorderThickness" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderThickness" />
          <setter name="set_BorderThickness" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderThickness">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderBrush">
          <apidata name="BorderBrush" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderBrush" />
          <setter name="set_BorderBrush" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderBrush">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Background">
          <apidata name="Background" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Background" />
          <setter name="set_Background" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Background">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Foreground">
          <apidata name="Foreground" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Foreground" />
          <setter name="set_Foreground" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Foreground">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.VerticalContentAlignment">
          <apidata name="VerticalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalContentAlignment" />
          <setter name="set_VerticalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.VerticalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Template">
          <apidata name="Template" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Template" />
          <setter name="set_Template" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.ControlTemplate" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Template">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabNavigation">
          <apidata name="TabNavigation" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabNavigation" />
          <setter name="set_TabNavigation" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.KeyboardNavigationMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabNavigation">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabIndex">
          <apidata name="TabIndex" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabIndex" />
          <setter name="set_TabIndex" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabIndex">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Padding">
          <apidata name="Padding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Padding" />
          <setter name="set_Padding" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Padding">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTabStop">
          <apidata name="IsTabStop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTabStop" />
          <setter name="set_IsTabStop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsTabStop">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsEnabled">
          <apidata name="IsEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsEnabled" />
          <setter name="set_IsEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.HorizontalContentAlignment">
          <apidata name="HorizontalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalContentAlignment" />
          <setter name="set_HorizontalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.HorizontalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FocusState">
          <apidata name="FocusState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_FocusState" />
          <returns>
            <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FocusState">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.DefaultStyleKey">
          <apidata name="DefaultStyleKey" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DefaultStyleKey" />
          <setter name="set_DefaultStyleKey" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControlProtected.DefaultStyleKey">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTextScaleFactorEnabled">
          <apidata name="IsTextScaleFactorEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTextScaleFactorEnabled" />
          <setter name="set_IsTextScaleFactorEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl2.IsTextScaleFactorEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.Controls.Control.IsEnabledChanged">
          <apidata name="IsEnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsEnabledChanged" />
          <remover name="remove_IsEnabledChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.Controls.IControl.IsEnabledChanged">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.FindName(System.String)">
          <apidata name="FindName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="name" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.FindName(System.String)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="binding" in="true">
              <type api="T:Windows.UI.Xaml.Data.BindingBase" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetBindingExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Data.BindingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement2.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.MeasureOverride(Windows.Foundation.Size)">
          <apidata name="MeasureOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.MeasureOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.ArrangeOverride(Windows.Foundation.Size)">
          <apidata name="ArrangeOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="finalSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.ArrangeOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.OnApplyTemplate">
          <apidata name="OnApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.OnApplyTemplate">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GoToElementStateCore(System.String,System.Boolean)">
          <apidata name="GoToElementStateCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="stateName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="useTransitions" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides2.GoToElementStateCore(System.String,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Margin">
          <apidata name="Margin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Margin" />
          <setter name="set_Margin" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Margin">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Language">
          <apidata name="Language" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Language" />
          <setter name="set_Language" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Language">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.HorizontalAlignment">
          <apidata name="HorizontalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalAlignment" />
          <setter name="set_HorizontalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.HorizontalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.FlowDirection">
          <apidata name="FlowDirection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FlowDirection" />
          <setter name="set_FlowDirection" />
          <returns>
            <type api="T:Windows.UI.Xaml.FlowDirection" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.FlowDirection">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.DataContext">
          <apidata name="DataContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DataContext" />
          <setter name="set_DataContext" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.DataContext">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.VerticalAlignment">
          <apidata name="VerticalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalAlignment" />
          <setter name="set_VerticalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.VerticalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxWidth">
          <apidata name="MaxWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxWidth" />
          <setter name="set_MaxWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxHeight">
          <apidata name="MaxHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxHeight" />
          <setter name="set_MaxHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Height">
          <apidata name="Height" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Height" />
          <setter name="set_Height" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Height">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinHeight">
          <apidata name="MinHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinHeight" />
          <setter name="set_MinHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Width">
          <apidata name="Width" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Width" />
          <setter name="set_Width" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Width">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Tag">
          <apidata name="Tag" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Tag" />
          <setter name="set_Tag" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Tag">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Style">
          <apidata name="Style" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Style" />
          <setter name="set_Style" />
          <returns>
            <type api="T:Windows.UI.Xaml.Style" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Style">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Resources">
          <apidata name="Resources" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Resources" />
          <setter name="set_Resources" />
          <returns>
            <type api="T:Windows.UI.Xaml.ResourceDictionary" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Resources">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Name">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinWidth">
          <apidata name="MinWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinWidth" />
          <setter name="set_MinWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualWidth">
          <apidata name="ActualWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.BaseUri">
          <apidata name="BaseUri" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_BaseUri" />
          <returns>
            <type api="T:System.Uri" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.BaseUri">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Parent">
          <apidata name="Parent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Parent" />
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Parent">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Triggers">
          <apidata name="Triggers" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Triggers" />
          <returns>
            <type api="T:Windows.UI.Xaml.TriggerCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Triggers">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualHeight">
          <apidata name="ActualHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.RequestedTheme">
          <apidata name="RequestedTheme" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestedTheme" />
          <setter name="set_RequestedTheme" />
          <returns>
            <type api="T:Windows.UI.Xaml.ElementTheme" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement2.RequestedTheme">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.LayoutUpdated">
          <apidata name="LayoutUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LayoutUpdated" />
          <remover name="remove_LayoutUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Object" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.LayoutUpdated">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Loaded">
          <apidata name="Loaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Loaded" />
          <remover name="remove_Loaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Loaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.SizeChanged">
          <apidata name="SizeChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_SizeChanged" />
          <remover name="remove_SizeChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.SizeChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.SizeChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.SizeChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Unloaded">
          <apidata name="Unloaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Unloaded" />
          <remover name="remove_Unloaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Unloaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.DataContextChanged">
          <apidata name="DataContextChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DataContextChanged" />
          <remover name="remove_DataContextChanged" />
          <eventhandler>
            <type api="T:Windows.Foundation.TypedEventHandler`2" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
                <type api="T:Windows.UI.Xaml.DataContextChangedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement2.DataContextChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Measure(Windows.Foundation.Size)">
          <apidata name="Measure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Measure(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Arrange(Windows.Foundation.Rect)">
          <apidata name="Arrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="finalRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Arrange(Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="CapturePointer" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="ReleasePointerCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCaptures">
          <apidata name="ReleasePointerCaptures" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="handledEventsToo" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
          <apidata name="RemoveHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
          <apidata name="TransformToVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="visual" in="true">
              <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Media.GeneralTransform" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateMeasure">
          <apidata name="InvalidateMeasure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateMeasure">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateArrange">
          <apidata name="InvalidateArrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateArrange">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.UpdateLayout">
          <apidata name="UpdateLayout" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.UpdateLayout">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CancelDirectManipulations">
          <apidata name="CancelDirectManipulations" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement2.CancelDirectManipulations">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnCreateAutomationPeer">
          <apidata name="OnCreateAutomationPeer" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:Windows.UI.Xaml.Automation.Peers.AutomationPeer" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnCreateAutomationPeer">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnDisconnectVisualChildren">
          <apidata name="OnDisconnectVisualChildren" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnDisconnectVisualChildren">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
          <apidata name="FindSubElementsForTouchTargeting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="point" in="true">
              <type api="T:Windows.Foundation.Point" ref="false" />
            </parameter>
            <parameter name="boundingRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:Windows.Foundation.Point" ref="false" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CompositeMode">
          <apidata name="CompositeMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CompositeMode" />
          <setter name="set_CompositeMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.ElementCompositeMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement2.CompositeMode">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.ManipulationMode">
          <apidata name="ManipulationMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_ManipulationMode" />
          <setter name="set_ManipulationMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.ManipulationModes" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.ManipulationMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsTapEnabled">
          <apidata name="IsTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTapEnabled" />
          <setter name="set_IsTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsRightTapEnabled">
          <apidata name="IsRightTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsRightTapEnabled" />
          <setter name="set_IsRightTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsRightTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHoldingEnabled">
          <apidata name="IsHoldingEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHoldingEnabled" />
          <setter name="set_IsHoldingEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHoldingEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHitTestVisible">
          <apidata name="IsHitTestVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHitTestVisible" />
          <setter name="set_IsHitTestVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHitTestVisible">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsDoubleTapEnabled">
          <apidata name="IsDoubleTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsDoubleTapEnabled" />
          <setter name="set_IsDoubleTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsDoubleTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Clip">
          <apidata name="Clip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Clip" />
          <setter name="set_Clip" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.RectangleGeometry" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Clip">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CacheMode">
          <apidata name="CacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CacheMode" />
          <setter name="set_CacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.CacheMode" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.CacheMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Opacity">
          <apidata name="Opacity" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Opacity" />
          <setter name="set_Opacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Opacity">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.AllowDrop">
          <apidata name="AllowDrop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowDrop" />
          <setter name="set_AllowDrop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.AllowDrop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Visibility">
          <apidata name="Visibility" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Visibility" />
          <setter name="set_Visibility" />
          <returns>
            <type api="T:Windows.UI.Xaml.Visibility" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Visibility">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.UseLayoutRounding">
          <apidata name="UseLayoutRounding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_UseLayoutRounding" />
          <setter name="set_UseLayoutRounding" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.UseLayoutRounding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Transitions">
          <apidata name="Transitions" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Transitions" />
          <setter name="set_Transitions" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Animation.TransitionCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Transitions">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransformOrigin">
          <apidata name="RenderTransformOrigin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransformOrigin" />
          <setter name="set_RenderTransformOrigin" />
          <returns>
            <type api="T:Windows.Foundation.Point" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransformOrigin">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransform">
          <apidata name="RenderTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransform" />
          <setter name="set_RenderTransform" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Transform" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransform">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Projection">
          <apidata name="Projection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Projection" />
          <setter name="set_Projection" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Projection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Projection">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.DesiredSize">
          <apidata name="DesiredSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DesiredSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.DesiredSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.PointerCaptures">
          <apidata name="PointerCaptures" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_PointerCaptures" />
          <returns>
            <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.PointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderSize">
          <apidata name="RenderSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_RenderSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DoubleTapped">
          <apidata name="DoubleTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DoubleTapped" />
          <remover name="remove_DoubleTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DoubleTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragEnter">
          <apidata name="DragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragEnter" />
          <remover name="remove_DragEnter" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragEnter">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragLeave">
          <apidata name="DragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragLeave" />
          <remover name="remove_DragLeave" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragLeave">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragOver">
          <apidata name="DragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragOver" />
          <remover name="remove_DragOver" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragOver">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Drop">
          <apidata name="Drop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Drop" />
          <remover name="remove_Drop" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Drop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.GotFocus">
          <apidata name="GotFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotFocus" />
          <remover name="remove_GotFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.GotFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Holding">
          <apidata name="Holding" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Holding" />
          <remover name="remove_Holding" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.HoldingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Holding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyDown">
          <apidata name="KeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyDown" />
          <remover name="remove_KeyDown" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyDown">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyUp">
          <apidata name="KeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyUp" />
          <remover name="remove_KeyUp" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyUp">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.LostFocus">
          <apidata name="LostFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostFocus" />
          <remover name="remove_LostFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.LostFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationCompleted">
          <apidata name="ManipulationCompleted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationCompleted" />
          <remover name="remove_ManipulationCompleted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationCompleted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationDelta">
          <apidata name="ManipulationDelta" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationDelta" />
          <remover name="remove_ManipulationDelta" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationDelta">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationInertiaStarting">
          <apidata name="ManipulationInertiaStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationInertiaStarting" />
          <remover name="remove_ManipulationInertiaStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationInertiaStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarted">
          <apidata name="ManipulationStarted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarted" />
          <remover name="remove_ManipulationStarted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarting">
          <apidata name="ManipulationStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarting" />
          <remover name="remove_ManipulationStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCanceled">
          <apidata name="PointerCanceled" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCanceled" />
          <remover name="remove_PointerCanceled" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCanceled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCaptureLost">
          <apidata name="PointerCaptureLost" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCaptureLost" />
          <remover name="remove_PointerCaptureLost" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCaptureLost">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerEntered">
          <apidata name="PointerEntered" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerEntered" />
          <remover name="remove_PointerEntered" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerEntered">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerExited">
          <apidata name="PointerExited" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerExited" />
          <remover name="remove_PointerExited" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerExited">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerMoved">
          <apidata name="PointerMoved" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerMoved" />
          <remover name="remove_PointerMoved" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerMoved">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerPressed">
          <apidata name="PointerPressed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerPressed" />
          <remover name="remove_PointerPressed" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerPressed">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerReleased">
          <apidata name="PointerReleased" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerReleased" />
          <remover name="remove_PointerReleased" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerReleased">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerWheelChanged">
          <apidata name="PointerWheelChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerWheelChanged" />
          <remover name="remove_PointerWheelChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerWheelChanged">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.RightTapped">
          <apidata name="RightTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_RightTapped" />
          <remover name="remove_RightTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.RightTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.RightTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Tapped">
          <apidata name="Tapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Tapped" />
          <remover name="remove_Tapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.TappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Tapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ReadLocalValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetAnimationBaseValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.DependencyObject.Dispatcher">
          <apidata name="Dispatcher" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Dispatcher" />
          <returns>
            <type api="T:Windows.UI.Core.CoreDispatcher" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IDependencyObject.Dispatcher">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
      </containers>
    </api>
    <api id="M:AppStore.AppDetailsPage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppDetailsPage._contentLoaded">
      <apidata name="_contentLoaded" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppDetailsPage.About_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="About_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppDetailsPage.app">
      <apidata name="app" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Models.Apps" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppDetailsPage.appInstalled">
      <apidata name="appInstalled" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppDetailsPage.btnAppInstall">
      <apidata name="btnAppInstall" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppDetailsPage.btnAppInstall_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="btnAppInstall_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppDetailsPage.btnAppShare">
      <apidata name="btnAppShare" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppDetailsPage.btnAppShare_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="btnAppShare_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppDetailsPage.btnMyApps">
      <apidata name="btnMyApps" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.AppBarButton" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppDetailsPage.Button_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Button_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppDetailsPage.Categories_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Categories_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppDetailsPage.Connect(System.Int32,System.Object)">
      <apidata name="Connect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="connectionId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
          <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppDetailsPage.ContentRoot">
      <apidata name="ContentRoot" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.ScrollViewer" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppDetailsPage.defaultViewModel">
      <apidata name="defaultViewModel" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppDetailsPage.DefaultViewModel">
      <apidata name="DefaultViewModel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultViewModel" />
      <returns>
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppDetailsPage.detailsShowMore">
      <apidata name="detailsShowMore" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.HyperlinkButton" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppDetailsPage.detailsShowMore_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="detailsShowMore_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppDetailsPage.Feedback_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Feedback_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppDetailsPage.FullScreen">
      <apidata name="FullScreen" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Grid" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppDetailsPage.FullScreenshots">
      <apidata name="FullScreenshots" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.FlipView" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppDetailsPage.GridScreenshots">
      <apidata name="GridScreenshots" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.GridView" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppDetailsPage.GridScreenshots_ContainerContentChanging(Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs)">
      <apidata name="GridScreenshots_ContainerContentChanging" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:Windows.UI.Xaml.Controls.ListViewBase" ref="true" />
        </parameter>
        <parameter name="args">
          <type api="T:Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppDetailsPage.GridScreenshots_SelectionChanged(System.Object,Windows.UI.Xaml.Controls.SelectionChangedEventArgs)">
      <apidata name="GridScreenshots_SelectionChanged" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Controls.SelectionChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppDetailsPage.HardwareButtons_BackPressed(System.Object,Windows.Phone.UI.Input.BackPressedEventArgs)">
      <apidata name="HardwareButtons_BackPressed" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.Phone.UI.Input.BackPressedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppDetailsPage.Home">
      <apidata name="Home" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.AppBarButton" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppDetailsPage.Home_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Home_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppDetailsPage.imgAppIcon">
      <apidata name="imgAppIcon" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Image" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppDetailsPage.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppDetailsPage.LayoutRoot">
      <apidata name="LayoutRoot" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Grid" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppDetailsPage.MyApps_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="MyApps_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppDetailsPage.navigationHelper">
      <apidata name="navigationHelper" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppDetailsPage.NavigationHelper">
      <apidata name="NavigationHelper" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NavigationHelper" />
      <returns>
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppDetailsPage.NavigationHelper_LoadState(System.Object,AppStore.Common.LoadStateEventArgs)">
      <apidata name="NavigationHelper_LoadState" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:AppStore.Common.LoadStateEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppDetailsPage.NavigationHelper_SaveState(System.Object,AppStore.Common.SaveStateEventArgs)">
      <apidata name="NavigationHelper_SaveState" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:AppStore.Common.SaveStateEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppDetailsPage.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedFrom" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppDetailsPage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedTo" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppDetailsPage.Search_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Search_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppDetailsPage.selectionGridScreenshots">
      <apidata name="selectionGridScreenshots" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppDetailsPage.Settings_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Settings_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppDetailsPage.ShowImages(Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs)">
      <apidata name="ShowImages" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:Windows.UI.Xaml.Controls.ListViewBase" ref="true" />
        </parameter>
        <parameter name="args">
          <type api="T:Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppDetailsPage.txtAddInfo1">
      <apidata name="txtAddInfo1" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppDetailsPage.txtAddInfo2">
      <apidata name="txtAddInfo2" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppDetailsPage.txtAppAuthor">
      <apidata name="txtAppAuthor" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppDetailsPage.txtAppDetails">
      <apidata name="txtAppDetails" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppDetailsPage.txtAppName">
      <apidata name="txtAppName" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppDetailsPage.txtShowMore">
      <apidata name="txtShowMore" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.AppDetailsPage" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.BlankPage1">
      <apidata name="BlankPage1" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="F:AppStore.BlankPage1._contentLoaded" />
        <element api="M:AppStore.BlankPage1.#ctor" />
        <element api="M:AppStore.BlankPage1.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.BlankPage1.InitializeComponent" />
        <element api="M:AppStore.BlankPage1.Connect(System.Int32,System.Object)" />
        <element api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <apidata name="OnNavigatedFrom" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IPageOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Page.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
          <apidata name="OnNavigatingFrom" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IPageOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.TopAppBar">
          <apidata name="TopAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TopAppBar" />
          <setter name="set_TopAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.TopAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.NavigationCacheMode">
          <apidata name="NavigationCacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_NavigationCacheMode" />
          <setter name="set_NavigationCacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Navigation.NavigationCacheMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.NavigationCacheMode">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.BottomAppBar">
          <apidata name="BottomAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BottomAppBar" />
          <setter name="set_BottomAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.BottomAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.Frame">
          <apidata name="Frame" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Frame" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.Frame" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.Frame">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.UserControl.Content">
          <apidata name="Content" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Content" />
          <setter name="set_Content" />
          <returns>
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IUserControl.Content">
              <type api="T:Windows.UI.Xaml.Controls.IUserControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.ApplyTemplate">
          <apidata name="ApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.ApplyTemplate">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.Focus(Windows.UI.Xaml.FocusState)">
          <apidata name="Focus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.Focus(Windows.UI.Xaml.FocusState)">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerEntered" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerPressed" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerMoved" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerReleased" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerExited" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCaptureLost" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCanceled" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerWheelChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
          <apidata name="OnTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
          <apidata name="OnDoubleTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
          <apidata name="OnHolding" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
          <apidata name="OnRightTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
          <apidata name="OnManipulationStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
          <apidata name="OnManipulationInertiaStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
          <apidata name="OnManipulationStarted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
          <apidata name="OnManipulationDelta" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
          <apidata name="OnManipulationCompleted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnGotFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnLostFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDrop(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDrop(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.GetTemplateChild(System.String)">
          <apidata name="GetTemplateChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="childName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlProtected.GetTemplateChild(System.String)">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStyle">
          <apidata name="FontStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStyle" />
          <setter name="set_FontStyle" />
          <returns>
            <type api="T:Windows.UI.Text.FontStyle" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStyle">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStretch">
          <apidata name="FontStretch" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStretch" />
          <setter name="set_FontStretch" />
          <returns>
            <type api="T:Windows.UI.Text.FontStretch" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStretch">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontSize">
          <apidata name="FontSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontSize" />
          <setter name="set_FontSize" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontSize">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontFamily">
          <apidata name="FontFamily" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontFamily" />
          <setter name="set_FontFamily" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.FontFamily" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontFamily">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontWeight">
          <apidata name="FontWeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontWeight" />
          <setter name="set_FontWeight" />
          <returns>
            <type api="T:Windows.UI.Text.FontWeight" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontWeight">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.CharacterSpacing">
          <apidata name="CharacterSpacing" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CharacterSpacing" />
          <setter name="set_CharacterSpacing" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.CharacterSpacing">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderThickness">
          <apidata name="BorderThickness" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderThickness" />
          <setter name="set_BorderThickness" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderThickness">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderBrush">
          <apidata name="BorderBrush" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderBrush" />
          <setter name="set_BorderBrush" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderBrush">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Background">
          <apidata name="Background" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Background" />
          <setter name="set_Background" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Background">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Foreground">
          <apidata name="Foreground" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Foreground" />
          <setter name="set_Foreground" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Foreground">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.VerticalContentAlignment">
          <apidata name="VerticalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalContentAlignment" />
          <setter name="set_VerticalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.VerticalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Template">
          <apidata name="Template" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Template" />
          <setter name="set_Template" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.ControlTemplate" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Template">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabNavigation">
          <apidata name="TabNavigation" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabNavigation" />
          <setter name="set_TabNavigation" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.KeyboardNavigationMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabNavigation">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabIndex">
          <apidata name="TabIndex" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabIndex" />
          <setter name="set_TabIndex" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabIndex">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Padding">
          <apidata name="Padding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Padding" />
          <setter name="set_Padding" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Padding">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTabStop">
          <apidata name="IsTabStop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTabStop" />
          <setter name="set_IsTabStop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsTabStop">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsEnabled">
          <apidata name="IsEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsEnabled" />
          <setter name="set_IsEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.HorizontalContentAlignment">
          <apidata name="HorizontalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalContentAlignment" />
          <setter name="set_HorizontalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.HorizontalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FocusState">
          <apidata name="FocusState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_FocusState" />
          <returns>
            <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FocusState">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.DefaultStyleKey">
          <apidata name="DefaultStyleKey" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DefaultStyleKey" />
          <setter name="set_DefaultStyleKey" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControlProtected.DefaultStyleKey">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTextScaleFactorEnabled">
          <apidata name="IsTextScaleFactorEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTextScaleFactorEnabled" />
          <setter name="set_IsTextScaleFactorEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl2.IsTextScaleFactorEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.Controls.Control.IsEnabledChanged">
          <apidata name="IsEnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsEnabledChanged" />
          <remover name="remove_IsEnabledChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.Controls.IControl.IsEnabledChanged">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.FindName(System.String)">
          <apidata name="FindName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="name" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.FindName(System.String)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="binding" in="true">
              <type api="T:Windows.UI.Xaml.Data.BindingBase" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetBindingExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Data.BindingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement2.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.MeasureOverride(Windows.Foundation.Size)">
          <apidata name="MeasureOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.MeasureOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.ArrangeOverride(Windows.Foundation.Size)">
          <apidata name="ArrangeOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="finalSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.ArrangeOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.OnApplyTemplate">
          <apidata name="OnApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.OnApplyTemplate">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GoToElementStateCore(System.String,System.Boolean)">
          <apidata name="GoToElementStateCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="stateName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="useTransitions" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides2.GoToElementStateCore(System.String,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Margin">
          <apidata name="Margin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Margin" />
          <setter name="set_Margin" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Margin">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Language">
          <apidata name="Language" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Language" />
          <setter name="set_Language" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Language">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.HorizontalAlignment">
          <apidata name="HorizontalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalAlignment" />
          <setter name="set_HorizontalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.HorizontalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.FlowDirection">
          <apidata name="FlowDirection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FlowDirection" />
          <setter name="set_FlowDirection" />
          <returns>
            <type api="T:Windows.UI.Xaml.FlowDirection" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.FlowDirection">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.DataContext">
          <apidata name="DataContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DataContext" />
          <setter name="set_DataContext" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.DataContext">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.VerticalAlignment">
          <apidata name="VerticalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalAlignment" />
          <setter name="set_VerticalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.VerticalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxWidth">
          <apidata name="MaxWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxWidth" />
          <setter name="set_MaxWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxHeight">
          <apidata name="MaxHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxHeight" />
          <setter name="set_MaxHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Height">
          <apidata name="Height" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Height" />
          <setter name="set_Height" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Height">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinHeight">
          <apidata name="MinHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinHeight" />
          <setter name="set_MinHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Width">
          <apidata name="Width" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Width" />
          <setter name="set_Width" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Width">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Tag">
          <apidata name="Tag" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Tag" />
          <setter name="set_Tag" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Tag">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Style">
          <apidata name="Style" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Style" />
          <setter name="set_Style" />
          <returns>
            <type api="T:Windows.UI.Xaml.Style" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Style">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Resources">
          <apidata name="Resources" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Resources" />
          <setter name="set_Resources" />
          <returns>
            <type api="T:Windows.UI.Xaml.ResourceDictionary" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Resources">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Name">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinWidth">
          <apidata name="MinWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinWidth" />
          <setter name="set_MinWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualWidth">
          <apidata name="ActualWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.BaseUri">
          <apidata name="BaseUri" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_BaseUri" />
          <returns>
            <type api="T:System.Uri" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.BaseUri">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Parent">
          <apidata name="Parent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Parent" />
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Parent">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Triggers">
          <apidata name="Triggers" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Triggers" />
          <returns>
            <type api="T:Windows.UI.Xaml.TriggerCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Triggers">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualHeight">
          <apidata name="ActualHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.RequestedTheme">
          <apidata name="RequestedTheme" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestedTheme" />
          <setter name="set_RequestedTheme" />
          <returns>
            <type api="T:Windows.UI.Xaml.ElementTheme" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement2.RequestedTheme">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.LayoutUpdated">
          <apidata name="LayoutUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LayoutUpdated" />
          <remover name="remove_LayoutUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Object" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.LayoutUpdated">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Loaded">
          <apidata name="Loaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Loaded" />
          <remover name="remove_Loaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Loaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.SizeChanged">
          <apidata name="SizeChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_SizeChanged" />
          <remover name="remove_SizeChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.SizeChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.SizeChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.SizeChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Unloaded">
          <apidata name="Unloaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Unloaded" />
          <remover name="remove_Unloaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Unloaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.DataContextChanged">
          <apidata name="DataContextChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DataContextChanged" />
          <remover name="remove_DataContextChanged" />
          <eventhandler>
            <type api="T:Windows.Foundation.TypedEventHandler`2" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
                <type api="T:Windows.UI.Xaml.DataContextChangedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement2.DataContextChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Measure(Windows.Foundation.Size)">
          <apidata name="Measure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Measure(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Arrange(Windows.Foundation.Rect)">
          <apidata name="Arrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="finalRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Arrange(Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="CapturePointer" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="ReleasePointerCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCaptures">
          <apidata name="ReleasePointerCaptures" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="handledEventsToo" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
          <apidata name="RemoveHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
          <apidata name="TransformToVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="visual" in="true">
              <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Media.GeneralTransform" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateMeasure">
          <apidata name="InvalidateMeasure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateMeasure">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateArrange">
          <apidata name="InvalidateArrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateArrange">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.UpdateLayout">
          <apidata name="UpdateLayout" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.UpdateLayout">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CancelDirectManipulations">
          <apidata name="CancelDirectManipulations" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement2.CancelDirectManipulations">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnCreateAutomationPeer">
          <apidata name="OnCreateAutomationPeer" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:Windows.UI.Xaml.Automation.Peers.AutomationPeer" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnCreateAutomationPeer">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnDisconnectVisualChildren">
          <apidata name="OnDisconnectVisualChildren" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnDisconnectVisualChildren">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
          <apidata name="FindSubElementsForTouchTargeting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="point" in="true">
              <type api="T:Windows.Foundation.Point" ref="false" />
            </parameter>
            <parameter name="boundingRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:Windows.Foundation.Point" ref="false" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CompositeMode">
          <apidata name="CompositeMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CompositeMode" />
          <setter name="set_CompositeMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.ElementCompositeMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement2.CompositeMode">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.ManipulationMode">
          <apidata name="ManipulationMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_ManipulationMode" />
          <setter name="set_ManipulationMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.ManipulationModes" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.ManipulationMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsTapEnabled">
          <apidata name="IsTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTapEnabled" />
          <setter name="set_IsTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsRightTapEnabled">
          <apidata name="IsRightTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsRightTapEnabled" />
          <setter name="set_IsRightTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsRightTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHoldingEnabled">
          <apidata name="IsHoldingEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHoldingEnabled" />
          <setter name="set_IsHoldingEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHoldingEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHitTestVisible">
          <apidata name="IsHitTestVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHitTestVisible" />
          <setter name="set_IsHitTestVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHitTestVisible">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsDoubleTapEnabled">
          <apidata name="IsDoubleTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsDoubleTapEnabled" />
          <setter name="set_IsDoubleTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsDoubleTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Clip">
          <apidata name="Clip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Clip" />
          <setter name="set_Clip" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.RectangleGeometry" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Clip">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CacheMode">
          <apidata name="CacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CacheMode" />
          <setter name="set_CacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.CacheMode" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.CacheMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Opacity">
          <apidata name="Opacity" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Opacity" />
          <setter name="set_Opacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Opacity">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.AllowDrop">
          <apidata name="AllowDrop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowDrop" />
          <setter name="set_AllowDrop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.AllowDrop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Visibility">
          <apidata name="Visibility" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Visibility" />
          <setter name="set_Visibility" />
          <returns>
            <type api="T:Windows.UI.Xaml.Visibility" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Visibility">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.UseLayoutRounding">
          <apidata name="UseLayoutRounding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_UseLayoutRounding" />
          <setter name="set_UseLayoutRounding" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.UseLayoutRounding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Transitions">
          <apidata name="Transitions" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Transitions" />
          <setter name="set_Transitions" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Animation.TransitionCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Transitions">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransformOrigin">
          <apidata name="RenderTransformOrigin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransformOrigin" />
          <setter name="set_RenderTransformOrigin" />
          <returns>
            <type api="T:Windows.Foundation.Point" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransformOrigin">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransform">
          <apidata name="RenderTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransform" />
          <setter name="set_RenderTransform" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Transform" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransform">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Projection">
          <apidata name="Projection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Projection" />
          <setter name="set_Projection" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Projection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Projection">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.DesiredSize">
          <apidata name="DesiredSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DesiredSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.DesiredSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.PointerCaptures">
          <apidata name="PointerCaptures" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_PointerCaptures" />
          <returns>
            <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.PointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderSize">
          <apidata name="RenderSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_RenderSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DoubleTapped">
          <apidata name="DoubleTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DoubleTapped" />
          <remover name="remove_DoubleTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DoubleTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragEnter">
          <apidata name="DragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragEnter" />
          <remover name="remove_DragEnter" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragEnter">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragLeave">
          <apidata name="DragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragLeave" />
          <remover name="remove_DragLeave" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragLeave">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragOver">
          <apidata name="DragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragOver" />
          <remover name="remove_DragOver" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragOver">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Drop">
          <apidata name="Drop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Drop" />
          <remover name="remove_Drop" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Drop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.GotFocus">
          <apidata name="GotFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotFocus" />
          <remover name="remove_GotFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.GotFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Holding">
          <apidata name="Holding" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Holding" />
          <remover name="remove_Holding" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.HoldingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Holding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyDown">
          <apidata name="KeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyDown" />
          <remover name="remove_KeyDown" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyDown">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyUp">
          <apidata name="KeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyUp" />
          <remover name="remove_KeyUp" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyUp">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.LostFocus">
          <apidata name="LostFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostFocus" />
          <remover name="remove_LostFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.LostFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationCompleted">
          <apidata name="ManipulationCompleted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationCompleted" />
          <remover name="remove_ManipulationCompleted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationCompleted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationDelta">
          <apidata name="ManipulationDelta" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationDelta" />
          <remover name="remove_ManipulationDelta" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationDelta">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationInertiaStarting">
          <apidata name="ManipulationInertiaStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationInertiaStarting" />
          <remover name="remove_ManipulationInertiaStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationInertiaStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarted">
          <apidata name="ManipulationStarted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarted" />
          <remover name="remove_ManipulationStarted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarting">
          <apidata name="ManipulationStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarting" />
          <remover name="remove_ManipulationStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCanceled">
          <apidata name="PointerCanceled" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCanceled" />
          <remover name="remove_PointerCanceled" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCanceled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCaptureLost">
          <apidata name="PointerCaptureLost" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCaptureLost" />
          <remover name="remove_PointerCaptureLost" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCaptureLost">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerEntered">
          <apidata name="PointerEntered" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerEntered" />
          <remover name="remove_PointerEntered" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerEntered">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerExited">
          <apidata name="PointerExited" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerExited" />
          <remover name="remove_PointerExited" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerExited">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerMoved">
          <apidata name="PointerMoved" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerMoved" />
          <remover name="remove_PointerMoved" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerMoved">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerPressed">
          <apidata name="PointerPressed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerPressed" />
          <remover name="remove_PointerPressed" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerPressed">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerReleased">
          <apidata name="PointerReleased" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerReleased" />
          <remover name="remove_PointerReleased" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerReleased">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerWheelChanged">
          <apidata name="PointerWheelChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerWheelChanged" />
          <remover name="remove_PointerWheelChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerWheelChanged">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.RightTapped">
          <apidata name="RightTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_RightTapped" />
          <remover name="remove_RightTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.RightTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.RightTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Tapped">
          <apidata name="Tapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Tapped" />
          <remover name="remove_Tapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.TappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Tapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ReadLocalValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetAnimationBaseValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.DependencyObject.Dispatcher">
          <apidata name="Dispatcher" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Dispatcher" />
          <returns>
            <type api="T:Windows.UI.Core.CoreDispatcher" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IDependencyObject.Dispatcher">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
      </containers>
    </api>
    <api id="M:AppStore.BlankPage1.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.BlankPage1" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.BlankPage1._contentLoaded">
      <apidata name="_contentLoaded" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.BlankPage1" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.BlankPage1.Connect(System.Int32,System.Object)">
      <apidata name="Connect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="connectionId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
          <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.BlankPage1" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.BlankPage1.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.BlankPage1" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.BlankPage1.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedTo" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.BlankPage1" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.CategoriesPage">
      <apidata name="CategoriesPage" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="F:AppStore.CategoriesPage.navigationHelper" />
        <element api="F:AppStore.CategoriesPage.defaultViewModel" />
        <element api="F:AppStore.CategoriesPage.selectionGridCategories" />
        <element api="F:AppStore.CategoriesPage.RootLayout" />
        <element api="F:AppStore.CategoriesPage.MainFragment" />
        <element api="F:AppStore.CategoriesPage.GridCategories" />
        <element api="F:AppStore.CategoriesPage.pageTitle" />
        <element api="F:AppStore.CategoriesPage.btnMyApps" />
        <element api="F:AppStore.CategoriesPage._contentLoaded" />
        <element api="M:AppStore.CategoriesPage.#ctor" />
        <element api="M:AppStore.CategoriesPage.NavigationHelper_LoadState(System.Object,AppStore.Common.LoadStateEventArgs)" />
        <element api="M:AppStore.CategoriesPage.NavigationHelper_SaveState(System.Object,AppStore.Common.SaveStateEventArgs)" />
        <element api="M:AppStore.CategoriesPage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.CategoriesPage.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.CategoriesPage.GridCategories_SelectionChanged(System.Object,Windows.UI.Xaml.Controls.SelectionChangedEventArgs)" />
        <element api="M:AppStore.CategoriesPage.GridCategories_ContentChanging(Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs)" />
        <element api="M:AppStore.CategoriesPage.Search_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.CategoriesPage.Settings_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.CategoriesPage.Home_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.CategoriesPage.MyApps_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.CategoriesPage.About_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.CategoriesPage.Feedback_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.CategoriesPage.InitializeComponent" />
        <element api="M:AppStore.CategoriesPage.Connect(System.Int32,System.Object)" />
        <element api="P:AppStore.CategoriesPage.NavigationHelper" />
        <element api="P:AppStore.CategoriesPage.DefaultViewModel" />
        <element api="M:Windows.UI.Xaml.Controls.Page.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
          <apidata name="OnNavigatingFrom" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IPageOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.TopAppBar">
          <apidata name="TopAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TopAppBar" />
          <setter name="set_TopAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.TopAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.NavigationCacheMode">
          <apidata name="NavigationCacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_NavigationCacheMode" />
          <setter name="set_NavigationCacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Navigation.NavigationCacheMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.NavigationCacheMode">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.BottomAppBar">
          <apidata name="BottomAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BottomAppBar" />
          <setter name="set_BottomAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.BottomAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.Frame">
          <apidata name="Frame" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Frame" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.Frame" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.Frame">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.UserControl.Content">
          <apidata name="Content" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Content" />
          <setter name="set_Content" />
          <returns>
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IUserControl.Content">
              <type api="T:Windows.UI.Xaml.Controls.IUserControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.ApplyTemplate">
          <apidata name="ApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.ApplyTemplate">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.Focus(Windows.UI.Xaml.FocusState)">
          <apidata name="Focus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.Focus(Windows.UI.Xaml.FocusState)">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerEntered" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerPressed" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerMoved" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerReleased" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerExited" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCaptureLost" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCanceled" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerWheelChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
          <apidata name="OnTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
          <apidata name="OnDoubleTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
          <apidata name="OnHolding" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
          <apidata name="OnRightTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
          <apidata name="OnManipulationStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
          <apidata name="OnManipulationInertiaStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
          <apidata name="OnManipulationStarted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
          <apidata name="OnManipulationDelta" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
          <apidata name="OnManipulationCompleted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnGotFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnLostFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDrop(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDrop(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.GetTemplateChild(System.String)">
          <apidata name="GetTemplateChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="childName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlProtected.GetTemplateChild(System.String)">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStyle">
          <apidata name="FontStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStyle" />
          <setter name="set_FontStyle" />
          <returns>
            <type api="T:Windows.UI.Text.FontStyle" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStyle">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStretch">
          <apidata name="FontStretch" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStretch" />
          <setter name="set_FontStretch" />
          <returns>
            <type api="T:Windows.UI.Text.FontStretch" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStretch">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontSize">
          <apidata name="FontSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontSize" />
          <setter name="set_FontSize" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontSize">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontFamily">
          <apidata name="FontFamily" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontFamily" />
          <setter name="set_FontFamily" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.FontFamily" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontFamily">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontWeight">
          <apidata name="FontWeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontWeight" />
          <setter name="set_FontWeight" />
          <returns>
            <type api="T:Windows.UI.Text.FontWeight" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontWeight">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.CharacterSpacing">
          <apidata name="CharacterSpacing" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CharacterSpacing" />
          <setter name="set_CharacterSpacing" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.CharacterSpacing">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderThickness">
          <apidata name="BorderThickness" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderThickness" />
          <setter name="set_BorderThickness" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderThickness">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderBrush">
          <apidata name="BorderBrush" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderBrush" />
          <setter name="set_BorderBrush" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderBrush">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Background">
          <apidata name="Background" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Background" />
          <setter name="set_Background" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Background">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Foreground">
          <apidata name="Foreground" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Foreground" />
          <setter name="set_Foreground" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Foreground">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.VerticalContentAlignment">
          <apidata name="VerticalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalContentAlignment" />
          <setter name="set_VerticalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.VerticalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Template">
          <apidata name="Template" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Template" />
          <setter name="set_Template" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.ControlTemplate" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Template">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabNavigation">
          <apidata name="TabNavigation" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabNavigation" />
          <setter name="set_TabNavigation" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.KeyboardNavigationMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabNavigation">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabIndex">
          <apidata name="TabIndex" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabIndex" />
          <setter name="set_TabIndex" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabIndex">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Padding">
          <apidata name="Padding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Padding" />
          <setter name="set_Padding" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Padding">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTabStop">
          <apidata name="IsTabStop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTabStop" />
          <setter name="set_IsTabStop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsTabStop">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsEnabled">
          <apidata name="IsEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsEnabled" />
          <setter name="set_IsEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.HorizontalContentAlignment">
          <apidata name="HorizontalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalContentAlignment" />
          <setter name="set_HorizontalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.HorizontalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FocusState">
          <apidata name="FocusState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_FocusState" />
          <returns>
            <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FocusState">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.DefaultStyleKey">
          <apidata name="DefaultStyleKey" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DefaultStyleKey" />
          <setter name="set_DefaultStyleKey" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControlProtected.DefaultStyleKey">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTextScaleFactorEnabled">
          <apidata name="IsTextScaleFactorEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTextScaleFactorEnabled" />
          <setter name="set_IsTextScaleFactorEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl2.IsTextScaleFactorEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.Controls.Control.IsEnabledChanged">
          <apidata name="IsEnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsEnabledChanged" />
          <remover name="remove_IsEnabledChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.Controls.IControl.IsEnabledChanged">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.FindName(System.String)">
          <apidata name="FindName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="name" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.FindName(System.String)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="binding" in="true">
              <type api="T:Windows.UI.Xaml.Data.BindingBase" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetBindingExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Data.BindingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement2.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.MeasureOverride(Windows.Foundation.Size)">
          <apidata name="MeasureOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.MeasureOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.ArrangeOverride(Windows.Foundation.Size)">
          <apidata name="ArrangeOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="finalSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.ArrangeOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.OnApplyTemplate">
          <apidata name="OnApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.OnApplyTemplate">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GoToElementStateCore(System.String,System.Boolean)">
          <apidata name="GoToElementStateCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="stateName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="useTransitions" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides2.GoToElementStateCore(System.String,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Margin">
          <apidata name="Margin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Margin" />
          <setter name="set_Margin" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Margin">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Language">
          <apidata name="Language" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Language" />
          <setter name="set_Language" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Language">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.HorizontalAlignment">
          <apidata name="HorizontalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalAlignment" />
          <setter name="set_HorizontalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.HorizontalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.FlowDirection">
          <apidata name="FlowDirection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FlowDirection" />
          <setter name="set_FlowDirection" />
          <returns>
            <type api="T:Windows.UI.Xaml.FlowDirection" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.FlowDirection">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.DataContext">
          <apidata name="DataContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DataContext" />
          <setter name="set_DataContext" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.DataContext">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.VerticalAlignment">
          <apidata name="VerticalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalAlignment" />
          <setter name="set_VerticalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.VerticalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxWidth">
          <apidata name="MaxWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxWidth" />
          <setter name="set_MaxWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxHeight">
          <apidata name="MaxHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxHeight" />
          <setter name="set_MaxHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Height">
          <apidata name="Height" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Height" />
          <setter name="set_Height" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Height">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinHeight">
          <apidata name="MinHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinHeight" />
          <setter name="set_MinHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Width">
          <apidata name="Width" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Width" />
          <setter name="set_Width" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Width">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Tag">
          <apidata name="Tag" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Tag" />
          <setter name="set_Tag" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Tag">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Style">
          <apidata name="Style" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Style" />
          <setter name="set_Style" />
          <returns>
            <type api="T:Windows.UI.Xaml.Style" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Style">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Resources">
          <apidata name="Resources" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Resources" />
          <setter name="set_Resources" />
          <returns>
            <type api="T:Windows.UI.Xaml.ResourceDictionary" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Resources">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Name">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinWidth">
          <apidata name="MinWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinWidth" />
          <setter name="set_MinWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualWidth">
          <apidata name="ActualWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.BaseUri">
          <apidata name="BaseUri" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_BaseUri" />
          <returns>
            <type api="T:System.Uri" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.BaseUri">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Parent">
          <apidata name="Parent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Parent" />
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Parent">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Triggers">
          <apidata name="Triggers" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Triggers" />
          <returns>
            <type api="T:Windows.UI.Xaml.TriggerCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Triggers">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualHeight">
          <apidata name="ActualHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.RequestedTheme">
          <apidata name="RequestedTheme" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestedTheme" />
          <setter name="set_RequestedTheme" />
          <returns>
            <type api="T:Windows.UI.Xaml.ElementTheme" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement2.RequestedTheme">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.LayoutUpdated">
          <apidata name="LayoutUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LayoutUpdated" />
          <remover name="remove_LayoutUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Object" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.LayoutUpdated">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Loaded">
          <apidata name="Loaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Loaded" />
          <remover name="remove_Loaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Loaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.SizeChanged">
          <apidata name="SizeChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_SizeChanged" />
          <remover name="remove_SizeChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.SizeChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.SizeChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.SizeChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Unloaded">
          <apidata name="Unloaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Unloaded" />
          <remover name="remove_Unloaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Unloaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.DataContextChanged">
          <apidata name="DataContextChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DataContextChanged" />
          <remover name="remove_DataContextChanged" />
          <eventhandler>
            <type api="T:Windows.Foundation.TypedEventHandler`2" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
                <type api="T:Windows.UI.Xaml.DataContextChangedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement2.DataContextChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Measure(Windows.Foundation.Size)">
          <apidata name="Measure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Measure(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Arrange(Windows.Foundation.Rect)">
          <apidata name="Arrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="finalRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Arrange(Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="CapturePointer" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="ReleasePointerCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCaptures">
          <apidata name="ReleasePointerCaptures" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="handledEventsToo" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
          <apidata name="RemoveHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
          <apidata name="TransformToVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="visual" in="true">
              <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Media.GeneralTransform" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateMeasure">
          <apidata name="InvalidateMeasure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateMeasure">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateArrange">
          <apidata name="InvalidateArrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateArrange">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.UpdateLayout">
          <apidata name="UpdateLayout" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.UpdateLayout">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CancelDirectManipulations">
          <apidata name="CancelDirectManipulations" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement2.CancelDirectManipulations">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnCreateAutomationPeer">
          <apidata name="OnCreateAutomationPeer" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:Windows.UI.Xaml.Automation.Peers.AutomationPeer" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnCreateAutomationPeer">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnDisconnectVisualChildren">
          <apidata name="OnDisconnectVisualChildren" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnDisconnectVisualChildren">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
          <apidata name="FindSubElementsForTouchTargeting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="point" in="true">
              <type api="T:Windows.Foundation.Point" ref="false" />
            </parameter>
            <parameter name="boundingRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:Windows.Foundation.Point" ref="false" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CompositeMode">
          <apidata name="CompositeMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CompositeMode" />
          <setter name="set_CompositeMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.ElementCompositeMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement2.CompositeMode">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.ManipulationMode">
          <apidata name="ManipulationMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_ManipulationMode" />
          <setter name="set_ManipulationMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.ManipulationModes" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.ManipulationMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsTapEnabled">
          <apidata name="IsTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTapEnabled" />
          <setter name="set_IsTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsRightTapEnabled">
          <apidata name="IsRightTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsRightTapEnabled" />
          <setter name="set_IsRightTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsRightTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHoldingEnabled">
          <apidata name="IsHoldingEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHoldingEnabled" />
          <setter name="set_IsHoldingEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHoldingEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHitTestVisible">
          <apidata name="IsHitTestVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHitTestVisible" />
          <setter name="set_IsHitTestVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHitTestVisible">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsDoubleTapEnabled">
          <apidata name="IsDoubleTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsDoubleTapEnabled" />
          <setter name="set_IsDoubleTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsDoubleTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Clip">
          <apidata name="Clip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Clip" />
          <setter name="set_Clip" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.RectangleGeometry" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Clip">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CacheMode">
          <apidata name="CacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CacheMode" />
          <setter name="set_CacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.CacheMode" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.CacheMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Opacity">
          <apidata name="Opacity" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Opacity" />
          <setter name="set_Opacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Opacity">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.AllowDrop">
          <apidata name="AllowDrop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowDrop" />
          <setter name="set_AllowDrop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.AllowDrop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Visibility">
          <apidata name="Visibility" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Visibility" />
          <setter name="set_Visibility" />
          <returns>
            <type api="T:Windows.UI.Xaml.Visibility" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Visibility">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.UseLayoutRounding">
          <apidata name="UseLayoutRounding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_UseLayoutRounding" />
          <setter name="set_UseLayoutRounding" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.UseLayoutRounding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Transitions">
          <apidata name="Transitions" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Transitions" />
          <setter name="set_Transitions" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Animation.TransitionCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Transitions">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransformOrigin">
          <apidata name="RenderTransformOrigin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransformOrigin" />
          <setter name="set_RenderTransformOrigin" />
          <returns>
            <type api="T:Windows.Foundation.Point" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransformOrigin">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransform">
          <apidata name="RenderTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransform" />
          <setter name="set_RenderTransform" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Transform" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransform">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Projection">
          <apidata name="Projection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Projection" />
          <setter name="set_Projection" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Projection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Projection">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.DesiredSize">
          <apidata name="DesiredSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DesiredSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.DesiredSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.PointerCaptures">
          <apidata name="PointerCaptures" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_PointerCaptures" />
          <returns>
            <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.PointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderSize">
          <apidata name="RenderSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_RenderSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DoubleTapped">
          <apidata name="DoubleTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DoubleTapped" />
          <remover name="remove_DoubleTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DoubleTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragEnter">
          <apidata name="DragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragEnter" />
          <remover name="remove_DragEnter" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragEnter">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragLeave">
          <apidata name="DragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragLeave" />
          <remover name="remove_DragLeave" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragLeave">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragOver">
          <apidata name="DragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragOver" />
          <remover name="remove_DragOver" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragOver">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Drop">
          <apidata name="Drop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Drop" />
          <remover name="remove_Drop" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Drop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.GotFocus">
          <apidata name="GotFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotFocus" />
          <remover name="remove_GotFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.GotFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Holding">
          <apidata name="Holding" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Holding" />
          <remover name="remove_Holding" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.HoldingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Holding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyDown">
          <apidata name="KeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyDown" />
          <remover name="remove_KeyDown" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyDown">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyUp">
          <apidata name="KeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyUp" />
          <remover name="remove_KeyUp" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyUp">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.LostFocus">
          <apidata name="LostFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostFocus" />
          <remover name="remove_LostFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.LostFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationCompleted">
          <apidata name="ManipulationCompleted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationCompleted" />
          <remover name="remove_ManipulationCompleted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationCompleted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationDelta">
          <apidata name="ManipulationDelta" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationDelta" />
          <remover name="remove_ManipulationDelta" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationDelta">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationInertiaStarting">
          <apidata name="ManipulationInertiaStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationInertiaStarting" />
          <remover name="remove_ManipulationInertiaStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationInertiaStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarted">
          <apidata name="ManipulationStarted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarted" />
          <remover name="remove_ManipulationStarted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarting">
          <apidata name="ManipulationStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarting" />
          <remover name="remove_ManipulationStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCanceled">
          <apidata name="PointerCanceled" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCanceled" />
          <remover name="remove_PointerCanceled" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCanceled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCaptureLost">
          <apidata name="PointerCaptureLost" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCaptureLost" />
          <remover name="remove_PointerCaptureLost" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCaptureLost">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerEntered">
          <apidata name="PointerEntered" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerEntered" />
          <remover name="remove_PointerEntered" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerEntered">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerExited">
          <apidata name="PointerExited" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerExited" />
          <remover name="remove_PointerExited" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerExited">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerMoved">
          <apidata name="PointerMoved" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerMoved" />
          <remover name="remove_PointerMoved" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerMoved">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerPressed">
          <apidata name="PointerPressed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerPressed" />
          <remover name="remove_PointerPressed" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerPressed">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerReleased">
          <apidata name="PointerReleased" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerReleased" />
          <remover name="remove_PointerReleased" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerReleased">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerWheelChanged">
          <apidata name="PointerWheelChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerWheelChanged" />
          <remover name="remove_PointerWheelChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerWheelChanged">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.RightTapped">
          <apidata name="RightTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_RightTapped" />
          <remover name="remove_RightTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.RightTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.RightTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Tapped">
          <apidata name="Tapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Tapped" />
          <remover name="remove_Tapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.TappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Tapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ReadLocalValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetAnimationBaseValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.DependencyObject.Dispatcher">
          <apidata name="Dispatcher" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Dispatcher" />
          <returns>
            <type api="T:Windows.UI.Core.CoreDispatcher" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IDependencyObject.Dispatcher">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
      </containers>
    </api>
    <api id="M:AppStore.CategoriesPage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoriesPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.CategoriesPage._contentLoaded">
      <apidata name="_contentLoaded" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoriesPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoriesPage.About_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="About_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoriesPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.CategoriesPage.btnMyApps">
      <apidata name="btnMyApps" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.AppBarButton" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoriesPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoriesPage.Connect(System.Int32,System.Object)">
      <apidata name="Connect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="connectionId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
          <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoriesPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.CategoriesPage.defaultViewModel">
      <apidata name="defaultViewModel" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoriesPage" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.CategoriesPage.DefaultViewModel">
      <apidata name="DefaultViewModel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultViewModel" />
      <returns>
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoriesPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoriesPage.Feedback_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Feedback_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoriesPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.CategoriesPage.GridCategories">
      <apidata name="GridCategories" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.GridView" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoriesPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoriesPage.GridCategories_ContentChanging(Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs)">
      <apidata name="GridCategories_ContentChanging" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:Windows.UI.Xaml.Controls.ListViewBase" ref="true" />
        </parameter>
        <parameter name="args">
          <type api="T:Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoriesPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoriesPage.GridCategories_SelectionChanged(System.Object,Windows.UI.Xaml.Controls.SelectionChangedEventArgs)">
      <apidata name="GridCategories_SelectionChanged" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Controls.SelectionChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoriesPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoriesPage.Home_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Home_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoriesPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoriesPage.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoriesPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.CategoriesPage.MainFragment">
      <apidata name="MainFragment" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Grid" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoriesPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoriesPage.MyApps_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="MyApps_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoriesPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.CategoriesPage.navigationHelper">
      <apidata name="navigationHelper" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoriesPage" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.CategoriesPage.NavigationHelper">
      <apidata name="NavigationHelper" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NavigationHelper" />
      <returns>
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoriesPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoriesPage.NavigationHelper_LoadState(System.Object,AppStore.Common.LoadStateEventArgs)">
      <apidata name="NavigationHelper_LoadState" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:AppStore.Common.LoadStateEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoriesPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoriesPage.NavigationHelper_SaveState(System.Object,AppStore.Common.SaveStateEventArgs)">
      <apidata name="NavigationHelper_SaveState" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:AppStore.Common.SaveStateEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoriesPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoriesPage.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedFrom" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoriesPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoriesPage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedTo" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoriesPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.CategoriesPage.pageTitle">
      <apidata name="pageTitle" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoriesPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.CategoriesPage.RootLayout">
      <apidata name="RootLayout" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Grid" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoriesPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoriesPage.Search_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Search_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoriesPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.CategoriesPage.selectionGridCategories">
      <apidata name="selectionGridCategories" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoriesPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoriesPage.Settings_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Settings_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoriesPage" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.CategoryPage">
      <apidata name="CategoryPage" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="F:AppStore.CategoryPage.navigationHelper" />
        <element api="F:AppStore.CategoryPage.defaultViewModel" />
        <element api="F:AppStore.CategoryPage.selectionGridApps" />
        <element api="F:AppStore.CategoryPage.appHolding" />
        <element api="F:AppStore.CategoryPage.LayoutRoot" />
        <element api="F:AppStore.CategoryPage.ContentRoot" />
        <element api="F:AppStore.CategoryPage.GridApps" />
        <element api="F:AppStore.CategoryPage.pageTitle" />
        <element api="F:AppStore.CategoryPage.btnMyApps" />
        <element api="F:AppStore.CategoryPage._contentLoaded" />
        <element api="M:AppStore.CategoryPage.#ctor" />
        <element api="M:AppStore.CategoryPage.NavigationHelper_LoadState(System.Object,AppStore.Common.LoadStateEventArgs)" />
        <element api="M:AppStore.CategoryPage.NavigationHelper_SaveState(System.Object,AppStore.Common.SaveStateEventArgs)" />
        <element api="M:AppStore.CategoryPage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.CategoryPage.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.CategoryPage.GridApps_ContentChanging(Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs)" />
        <element api="M:AppStore.CategoryPage.ShowImage(Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs)" />
        <element api="M:AppStore.CategoryPage.GridApps_SelectionChanged(System.Object,Windows.UI.Xaml.Controls.SelectionChangedEventArgs)" />
        <element api="M:AppStore.CategoryPage.Search_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.CategoryPage.Settings_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.CategoryPage.Home_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.CategoryPage.MyApps_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.CategoryPage.About_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.CategoryPage.StackPanel_Holding(System.Object,Windows.UI.Xaml.Input.HoldingRoutedEventArgs)" />
        <element api="M:AppStore.CategoryPage.Feedback_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.CategoryPage.InstallButton_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.CategoryPage.ShareButton_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.CategoryPage.InitializeComponent" />
        <element api="M:AppStore.CategoryPage.Connect(System.Int32,System.Object)" />
        <element api="P:AppStore.CategoryPage.NavigationHelper" />
        <element api="P:AppStore.CategoryPage.DefaultViewModel" />
        <element api="M:Windows.UI.Xaml.Controls.Page.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
          <apidata name="OnNavigatingFrom" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IPageOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.TopAppBar">
          <apidata name="TopAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TopAppBar" />
          <setter name="set_TopAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.TopAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.NavigationCacheMode">
          <apidata name="NavigationCacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_NavigationCacheMode" />
          <setter name="set_NavigationCacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Navigation.NavigationCacheMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.NavigationCacheMode">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.BottomAppBar">
          <apidata name="BottomAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BottomAppBar" />
          <setter name="set_BottomAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.BottomAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.Frame">
          <apidata name="Frame" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Frame" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.Frame" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.Frame">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.UserControl.Content">
          <apidata name="Content" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Content" />
          <setter name="set_Content" />
          <returns>
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IUserControl.Content">
              <type api="T:Windows.UI.Xaml.Controls.IUserControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.ApplyTemplate">
          <apidata name="ApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.ApplyTemplate">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.Focus(Windows.UI.Xaml.FocusState)">
          <apidata name="Focus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.Focus(Windows.UI.Xaml.FocusState)">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerEntered" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerPressed" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerMoved" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerReleased" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerExited" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCaptureLost" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCanceled" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerWheelChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
          <apidata name="OnTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
          <apidata name="OnDoubleTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
          <apidata name="OnHolding" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
          <apidata name="OnRightTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
          <apidata name="OnManipulationStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
          <apidata name="OnManipulationInertiaStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
          <apidata name="OnManipulationStarted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
          <apidata name="OnManipulationDelta" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
          <apidata name="OnManipulationCompleted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnGotFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnLostFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDrop(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDrop(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.GetTemplateChild(System.String)">
          <apidata name="GetTemplateChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="childName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlProtected.GetTemplateChild(System.String)">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStyle">
          <apidata name="FontStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStyle" />
          <setter name="set_FontStyle" />
          <returns>
            <type api="T:Windows.UI.Text.FontStyle" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStyle">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStretch">
          <apidata name="FontStretch" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStretch" />
          <setter name="set_FontStretch" />
          <returns>
            <type api="T:Windows.UI.Text.FontStretch" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStretch">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontSize">
          <apidata name="FontSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontSize" />
          <setter name="set_FontSize" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontSize">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontFamily">
          <apidata name="FontFamily" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontFamily" />
          <setter name="set_FontFamily" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.FontFamily" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontFamily">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontWeight">
          <apidata name="FontWeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontWeight" />
          <setter name="set_FontWeight" />
          <returns>
            <type api="T:Windows.UI.Text.FontWeight" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontWeight">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.CharacterSpacing">
          <apidata name="CharacterSpacing" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CharacterSpacing" />
          <setter name="set_CharacterSpacing" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.CharacterSpacing">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderThickness">
          <apidata name="BorderThickness" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderThickness" />
          <setter name="set_BorderThickness" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderThickness">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderBrush">
          <apidata name="BorderBrush" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderBrush" />
          <setter name="set_BorderBrush" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderBrush">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Background">
          <apidata name="Background" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Background" />
          <setter name="set_Background" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Background">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Foreground">
          <apidata name="Foreground" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Foreground" />
          <setter name="set_Foreground" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Foreground">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.VerticalContentAlignment">
          <apidata name="VerticalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalContentAlignment" />
          <setter name="set_VerticalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.VerticalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Template">
          <apidata name="Template" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Template" />
          <setter name="set_Template" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.ControlTemplate" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Template">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabNavigation">
          <apidata name="TabNavigation" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabNavigation" />
          <setter name="set_TabNavigation" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.KeyboardNavigationMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabNavigation">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabIndex">
          <apidata name="TabIndex" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabIndex" />
          <setter name="set_TabIndex" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabIndex">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Padding">
          <apidata name="Padding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Padding" />
          <setter name="set_Padding" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Padding">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTabStop">
          <apidata name="IsTabStop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTabStop" />
          <setter name="set_IsTabStop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsTabStop">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsEnabled">
          <apidata name="IsEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsEnabled" />
          <setter name="set_IsEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.HorizontalContentAlignment">
          <apidata name="HorizontalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalContentAlignment" />
          <setter name="set_HorizontalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.HorizontalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FocusState">
          <apidata name="FocusState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_FocusState" />
          <returns>
            <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FocusState">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.DefaultStyleKey">
          <apidata name="DefaultStyleKey" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DefaultStyleKey" />
          <setter name="set_DefaultStyleKey" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControlProtected.DefaultStyleKey">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTextScaleFactorEnabled">
          <apidata name="IsTextScaleFactorEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTextScaleFactorEnabled" />
          <setter name="set_IsTextScaleFactorEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl2.IsTextScaleFactorEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.Controls.Control.IsEnabledChanged">
          <apidata name="IsEnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsEnabledChanged" />
          <remover name="remove_IsEnabledChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.Controls.IControl.IsEnabledChanged">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.FindName(System.String)">
          <apidata name="FindName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="name" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.FindName(System.String)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="binding" in="true">
              <type api="T:Windows.UI.Xaml.Data.BindingBase" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetBindingExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Data.BindingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement2.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.MeasureOverride(Windows.Foundation.Size)">
          <apidata name="MeasureOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.MeasureOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.ArrangeOverride(Windows.Foundation.Size)">
          <apidata name="ArrangeOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="finalSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.ArrangeOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.OnApplyTemplate">
          <apidata name="OnApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.OnApplyTemplate">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GoToElementStateCore(System.String,System.Boolean)">
          <apidata name="GoToElementStateCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="stateName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="useTransitions" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides2.GoToElementStateCore(System.String,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Margin">
          <apidata name="Margin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Margin" />
          <setter name="set_Margin" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Margin">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Language">
          <apidata name="Language" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Language" />
          <setter name="set_Language" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Language">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.HorizontalAlignment">
          <apidata name="HorizontalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalAlignment" />
          <setter name="set_HorizontalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.HorizontalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.FlowDirection">
          <apidata name="FlowDirection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FlowDirection" />
          <setter name="set_FlowDirection" />
          <returns>
            <type api="T:Windows.UI.Xaml.FlowDirection" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.FlowDirection">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.DataContext">
          <apidata name="DataContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DataContext" />
          <setter name="set_DataContext" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.DataContext">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.VerticalAlignment">
          <apidata name="VerticalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalAlignment" />
          <setter name="set_VerticalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.VerticalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxWidth">
          <apidata name="MaxWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxWidth" />
          <setter name="set_MaxWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxHeight">
          <apidata name="MaxHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxHeight" />
          <setter name="set_MaxHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Height">
          <apidata name="Height" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Height" />
          <setter name="set_Height" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Height">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinHeight">
          <apidata name="MinHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinHeight" />
          <setter name="set_MinHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Width">
          <apidata name="Width" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Width" />
          <setter name="set_Width" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Width">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Tag">
          <apidata name="Tag" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Tag" />
          <setter name="set_Tag" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Tag">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Style">
          <apidata name="Style" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Style" />
          <setter name="set_Style" />
          <returns>
            <type api="T:Windows.UI.Xaml.Style" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Style">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Resources">
          <apidata name="Resources" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Resources" />
          <setter name="set_Resources" />
          <returns>
            <type api="T:Windows.UI.Xaml.ResourceDictionary" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Resources">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Name">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinWidth">
          <apidata name="MinWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinWidth" />
          <setter name="set_MinWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualWidth">
          <apidata name="ActualWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.BaseUri">
          <apidata name="BaseUri" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_BaseUri" />
          <returns>
            <type api="T:System.Uri" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.BaseUri">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Parent">
          <apidata name="Parent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Parent" />
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Parent">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Triggers">
          <apidata name="Triggers" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Triggers" />
          <returns>
            <type api="T:Windows.UI.Xaml.TriggerCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Triggers">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualHeight">
          <apidata name="ActualHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.RequestedTheme">
          <apidata name="RequestedTheme" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestedTheme" />
          <setter name="set_RequestedTheme" />
          <returns>
            <type api="T:Windows.UI.Xaml.ElementTheme" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement2.RequestedTheme">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.LayoutUpdated">
          <apidata name="LayoutUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LayoutUpdated" />
          <remover name="remove_LayoutUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Object" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.LayoutUpdated">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Loaded">
          <apidata name="Loaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Loaded" />
          <remover name="remove_Loaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Loaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.SizeChanged">
          <apidata name="SizeChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_SizeChanged" />
          <remover name="remove_SizeChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.SizeChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.SizeChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.SizeChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Unloaded">
          <apidata name="Unloaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Unloaded" />
          <remover name="remove_Unloaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Unloaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.DataContextChanged">
          <apidata name="DataContextChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DataContextChanged" />
          <remover name="remove_DataContextChanged" />
          <eventhandler>
            <type api="T:Windows.Foundation.TypedEventHandler`2" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
                <type api="T:Windows.UI.Xaml.DataContextChangedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement2.DataContextChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Measure(Windows.Foundation.Size)">
          <apidata name="Measure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Measure(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Arrange(Windows.Foundation.Rect)">
          <apidata name="Arrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="finalRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Arrange(Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="CapturePointer" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="ReleasePointerCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCaptures">
          <apidata name="ReleasePointerCaptures" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="handledEventsToo" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
          <apidata name="RemoveHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
          <apidata name="TransformToVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="visual" in="true">
              <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Media.GeneralTransform" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateMeasure">
          <apidata name="InvalidateMeasure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateMeasure">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateArrange">
          <apidata name="InvalidateArrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateArrange">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.UpdateLayout">
          <apidata name="UpdateLayout" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.UpdateLayout">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CancelDirectManipulations">
          <apidata name="CancelDirectManipulations" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement2.CancelDirectManipulations">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnCreateAutomationPeer">
          <apidata name="OnCreateAutomationPeer" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:Windows.UI.Xaml.Automation.Peers.AutomationPeer" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnCreateAutomationPeer">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnDisconnectVisualChildren">
          <apidata name="OnDisconnectVisualChildren" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnDisconnectVisualChildren">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
          <apidata name="FindSubElementsForTouchTargeting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="point" in="true">
              <type api="T:Windows.Foundation.Point" ref="false" />
            </parameter>
            <parameter name="boundingRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:Windows.Foundation.Point" ref="false" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CompositeMode">
          <apidata name="CompositeMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CompositeMode" />
          <setter name="set_CompositeMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.ElementCompositeMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement2.CompositeMode">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.ManipulationMode">
          <apidata name="ManipulationMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_ManipulationMode" />
          <setter name="set_ManipulationMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.ManipulationModes" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.ManipulationMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsTapEnabled">
          <apidata name="IsTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTapEnabled" />
          <setter name="set_IsTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsRightTapEnabled">
          <apidata name="IsRightTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsRightTapEnabled" />
          <setter name="set_IsRightTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsRightTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHoldingEnabled">
          <apidata name="IsHoldingEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHoldingEnabled" />
          <setter name="set_IsHoldingEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHoldingEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHitTestVisible">
          <apidata name="IsHitTestVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHitTestVisible" />
          <setter name="set_IsHitTestVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHitTestVisible">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsDoubleTapEnabled">
          <apidata name="IsDoubleTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsDoubleTapEnabled" />
          <setter name="set_IsDoubleTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsDoubleTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Clip">
          <apidata name="Clip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Clip" />
          <setter name="set_Clip" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.RectangleGeometry" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Clip">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CacheMode">
          <apidata name="CacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CacheMode" />
          <setter name="set_CacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.CacheMode" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.CacheMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Opacity">
          <apidata name="Opacity" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Opacity" />
          <setter name="set_Opacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Opacity">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.AllowDrop">
          <apidata name="AllowDrop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowDrop" />
          <setter name="set_AllowDrop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.AllowDrop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Visibility">
          <apidata name="Visibility" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Visibility" />
          <setter name="set_Visibility" />
          <returns>
            <type api="T:Windows.UI.Xaml.Visibility" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Visibility">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.UseLayoutRounding">
          <apidata name="UseLayoutRounding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_UseLayoutRounding" />
          <setter name="set_UseLayoutRounding" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.UseLayoutRounding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Transitions">
          <apidata name="Transitions" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Transitions" />
          <setter name="set_Transitions" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Animation.TransitionCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Transitions">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransformOrigin">
          <apidata name="RenderTransformOrigin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransformOrigin" />
          <setter name="set_RenderTransformOrigin" />
          <returns>
            <type api="T:Windows.Foundation.Point" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransformOrigin">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransform">
          <apidata name="RenderTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransform" />
          <setter name="set_RenderTransform" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Transform" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransform">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Projection">
          <apidata name="Projection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Projection" />
          <setter name="set_Projection" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Projection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Projection">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.DesiredSize">
          <apidata name="DesiredSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DesiredSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.DesiredSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.PointerCaptures">
          <apidata name="PointerCaptures" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_PointerCaptures" />
          <returns>
            <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.PointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderSize">
          <apidata name="RenderSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_RenderSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DoubleTapped">
          <apidata name="DoubleTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DoubleTapped" />
          <remover name="remove_DoubleTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DoubleTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragEnter">
          <apidata name="DragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragEnter" />
          <remover name="remove_DragEnter" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragEnter">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragLeave">
          <apidata name="DragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragLeave" />
          <remover name="remove_DragLeave" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragLeave">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragOver">
          <apidata name="DragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragOver" />
          <remover name="remove_DragOver" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragOver">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Drop">
          <apidata name="Drop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Drop" />
          <remover name="remove_Drop" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Drop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.GotFocus">
          <apidata name="GotFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotFocus" />
          <remover name="remove_GotFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.GotFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Holding">
          <apidata name="Holding" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Holding" />
          <remover name="remove_Holding" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.HoldingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Holding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyDown">
          <apidata name="KeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyDown" />
          <remover name="remove_KeyDown" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyDown">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyUp">
          <apidata name="KeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyUp" />
          <remover name="remove_KeyUp" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyUp">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.LostFocus">
          <apidata name="LostFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostFocus" />
          <remover name="remove_LostFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.LostFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationCompleted">
          <apidata name="ManipulationCompleted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationCompleted" />
          <remover name="remove_ManipulationCompleted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationCompleted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationDelta">
          <apidata name="ManipulationDelta" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationDelta" />
          <remover name="remove_ManipulationDelta" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationDelta">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationInertiaStarting">
          <apidata name="ManipulationInertiaStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationInertiaStarting" />
          <remover name="remove_ManipulationInertiaStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationInertiaStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarted">
          <apidata name="ManipulationStarted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarted" />
          <remover name="remove_ManipulationStarted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarting">
          <apidata name="ManipulationStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarting" />
          <remover name="remove_ManipulationStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCanceled">
          <apidata name="PointerCanceled" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCanceled" />
          <remover name="remove_PointerCanceled" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCanceled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCaptureLost">
          <apidata name="PointerCaptureLost" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCaptureLost" />
          <remover name="remove_PointerCaptureLost" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCaptureLost">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerEntered">
          <apidata name="PointerEntered" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerEntered" />
          <remover name="remove_PointerEntered" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerEntered">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerExited">
          <apidata name="PointerExited" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerExited" />
          <remover name="remove_PointerExited" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerExited">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerMoved">
          <apidata name="PointerMoved" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerMoved" />
          <remover name="remove_PointerMoved" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerMoved">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerPressed">
          <apidata name="PointerPressed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerPressed" />
          <remover name="remove_PointerPressed" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerPressed">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerReleased">
          <apidata name="PointerReleased" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerReleased" />
          <remover name="remove_PointerReleased" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerReleased">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerWheelChanged">
          <apidata name="PointerWheelChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerWheelChanged" />
          <remover name="remove_PointerWheelChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerWheelChanged">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.RightTapped">
          <apidata name="RightTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_RightTapped" />
          <remover name="remove_RightTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.RightTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.RightTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Tapped">
          <apidata name="Tapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Tapped" />
          <remover name="remove_Tapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.TappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Tapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ReadLocalValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetAnimationBaseValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.DependencyObject.Dispatcher">
          <apidata name="Dispatcher" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Dispatcher" />
          <returns>
            <type api="T:Windows.UI.Core.CoreDispatcher" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IDependencyObject.Dispatcher">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
      </containers>
    </api>
    <api id="M:AppStore.CategoryPage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoryPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.CategoryPage._contentLoaded">
      <apidata name="_contentLoaded" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoryPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoryPage.About_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="About_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoryPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.CategoryPage.appHolding">
      <apidata name="appHolding" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Models.Apps" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoryPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.CategoryPage.btnMyApps">
      <apidata name="btnMyApps" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.AppBarButton" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoryPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoryPage.Connect(System.Int32,System.Object)">
      <apidata name="Connect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="connectionId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
          <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoryPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.CategoryPage.ContentRoot">
      <apidata name="ContentRoot" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Grid" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoryPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.CategoryPage.defaultViewModel">
      <apidata name="defaultViewModel" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoryPage" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.CategoryPage.DefaultViewModel">
      <apidata name="DefaultViewModel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultViewModel" />
      <returns>
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoryPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoryPage.Feedback_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Feedback_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoryPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.CategoryPage.GridApps">
      <apidata name="GridApps" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.GridView" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoryPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoryPage.GridApps_ContentChanging(Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs)">
      <apidata name="GridApps_ContentChanging" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:Windows.UI.Xaml.Controls.ListViewBase" ref="true" />
        </parameter>
        <parameter name="args">
          <type api="T:Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoryPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoryPage.GridApps_SelectionChanged(System.Object,Windows.UI.Xaml.Controls.SelectionChangedEventArgs)">
      <apidata name="GridApps_SelectionChanged" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Controls.SelectionChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoryPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoryPage.Home_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Home_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoryPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoryPage.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoryPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoryPage.InstallButton_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="InstallButton_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoryPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.CategoryPage.LayoutRoot">
      <apidata name="LayoutRoot" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Grid" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoryPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoryPage.MyApps_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="MyApps_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoryPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.CategoryPage.navigationHelper">
      <apidata name="navigationHelper" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoryPage" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.CategoryPage.NavigationHelper">
      <apidata name="NavigationHelper" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NavigationHelper" />
      <returns>
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoryPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoryPage.NavigationHelper_LoadState(System.Object,AppStore.Common.LoadStateEventArgs)">
      <apidata name="NavigationHelper_LoadState" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:AppStore.Common.LoadStateEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoryPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoryPage.NavigationHelper_SaveState(System.Object,AppStore.Common.SaveStateEventArgs)">
      <apidata name="NavigationHelper_SaveState" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:AppStore.Common.SaveStateEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoryPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoryPage.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedFrom" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoryPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoryPage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedTo" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoryPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.CategoryPage.pageTitle">
      <apidata name="pageTitle" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoryPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoryPage.Search_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Search_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoryPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.CategoryPage.selectionGridApps">
      <apidata name="selectionGridApps" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoryPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoryPage.Settings_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Settings_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoryPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoryPage.ShareButton_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="ShareButton_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoryPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoryPage.ShowImage(Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs)">
      <apidata name="ShowImage" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:Windows.UI.Xaml.Controls.ListViewBase" ref="true" />
        </parameter>
        <parameter name="args">
          <type api="T:Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoryPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.CategoryPage.StackPanel_Holding(System.Object,Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
      <apidata name="StackPanel_Holding" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.CategoryPage" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.MainPage">
      <apidata name="MainPage" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="F:AppStore.MainPage.selectionGridCategories" />
        <element api="F:AppStore.MainPage.selectionGridApps" />
        <element api="F:AppStore.MainPage.appHolding" />
        <element api="F:AppStore.MainPage.RootLayout" />
        <element api="F:AppStore.MainPage.MainFragment" />
        <element api="F:AppStore.MainPage.GridFeaturedApps" />
        <element api="F:AppStore.MainPage.GridFeaturedCategories" />
        <element api="F:AppStore.MainPage.pageTitle" />
        <element api="F:AppStore.MainPage.btnMyApps" />
        <element api="F:AppStore.MainPage._contentLoaded" />
        <element api="M:AppStore.MainPage.#ctor" />
        <element api="M:AppStore.MainPage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.MainPage.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.MainPage.GridFeaturedApps_ContentChanging(Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs)" />
        <element api="M:AppStore.MainPage.ShowImage(Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs)" />
        <element api="M:AppStore.MainPage.GridFeaturedApps_SelectionChanged(System.Object,Windows.UI.Xaml.Controls.SelectionChangedEventArgs)" />
        <element api="M:AppStore.MainPage.GridFeaturedCategories_SelectionChanged(System.Object,Windows.UI.Xaml.Controls.SelectionChangedEventArgs)" />
        <element api="M:AppStore.MainPage.GridFeaturedCategories_ContentChanging(Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs)" />
        <element api="M:AppStore.MainPage.Search_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.MainPage.Settings_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.MainPage.MyApps_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.MainPage.Categories_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.MainPage.About_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.MainPage.StackPanel_Holding(System.Object,Windows.UI.Xaml.Input.HoldingRoutedEventArgs)" />
        <element api="M:AppStore.MainPage.Feedback_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.MainPage.InstallButton_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.MainPage.ShareButton_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.MainPage.InitializeComponent" />
        <element api="M:AppStore.MainPage.Connect(System.Int32,System.Object)" />
        <element api="M:Windows.UI.Xaml.Controls.Page.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
          <apidata name="OnNavigatingFrom" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IPageOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.TopAppBar">
          <apidata name="TopAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TopAppBar" />
          <setter name="set_TopAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.TopAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.NavigationCacheMode">
          <apidata name="NavigationCacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_NavigationCacheMode" />
          <setter name="set_NavigationCacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Navigation.NavigationCacheMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.NavigationCacheMode">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.BottomAppBar">
          <apidata name="BottomAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BottomAppBar" />
          <setter name="set_BottomAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.BottomAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.Frame">
          <apidata name="Frame" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Frame" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.Frame" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.Frame">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.UserControl.Content">
          <apidata name="Content" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Content" />
          <setter name="set_Content" />
          <returns>
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IUserControl.Content">
              <type api="T:Windows.UI.Xaml.Controls.IUserControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.ApplyTemplate">
          <apidata name="ApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.ApplyTemplate">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.Focus(Windows.UI.Xaml.FocusState)">
          <apidata name="Focus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.Focus(Windows.UI.Xaml.FocusState)">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerEntered" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerPressed" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerMoved" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerReleased" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerExited" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCaptureLost" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCanceled" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerWheelChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
          <apidata name="OnTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
          <apidata name="OnDoubleTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
          <apidata name="OnHolding" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
          <apidata name="OnRightTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
          <apidata name="OnManipulationStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
          <apidata name="OnManipulationInertiaStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
          <apidata name="OnManipulationStarted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
          <apidata name="OnManipulationDelta" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
          <apidata name="OnManipulationCompleted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnGotFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnLostFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDrop(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDrop(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.GetTemplateChild(System.String)">
          <apidata name="GetTemplateChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="childName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlProtected.GetTemplateChild(System.String)">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStyle">
          <apidata name="FontStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStyle" />
          <setter name="set_FontStyle" />
          <returns>
            <type api="T:Windows.UI.Text.FontStyle" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStyle">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStretch">
          <apidata name="FontStretch" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStretch" />
          <setter name="set_FontStretch" />
          <returns>
            <type api="T:Windows.UI.Text.FontStretch" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStretch">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontSize">
          <apidata name="FontSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontSize" />
          <setter name="set_FontSize" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontSize">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontFamily">
          <apidata name="FontFamily" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontFamily" />
          <setter name="set_FontFamily" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.FontFamily" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontFamily">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontWeight">
          <apidata name="FontWeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontWeight" />
          <setter name="set_FontWeight" />
          <returns>
            <type api="T:Windows.UI.Text.FontWeight" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontWeight">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.CharacterSpacing">
          <apidata name="CharacterSpacing" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CharacterSpacing" />
          <setter name="set_CharacterSpacing" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.CharacterSpacing">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderThickness">
          <apidata name="BorderThickness" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderThickness" />
          <setter name="set_BorderThickness" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderThickness">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderBrush">
          <apidata name="BorderBrush" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderBrush" />
          <setter name="set_BorderBrush" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderBrush">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Background">
          <apidata name="Background" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Background" />
          <setter name="set_Background" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Background">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Foreground">
          <apidata name="Foreground" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Foreground" />
          <setter name="set_Foreground" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Foreground">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.VerticalContentAlignment">
          <apidata name="VerticalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalContentAlignment" />
          <setter name="set_VerticalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.VerticalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Template">
          <apidata name="Template" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Template" />
          <setter name="set_Template" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.ControlTemplate" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Template">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabNavigation">
          <apidata name="TabNavigation" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabNavigation" />
          <setter name="set_TabNavigation" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.KeyboardNavigationMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabNavigation">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabIndex">
          <apidata name="TabIndex" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabIndex" />
          <setter name="set_TabIndex" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabIndex">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Padding">
          <apidata name="Padding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Padding" />
          <setter name="set_Padding" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Padding">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTabStop">
          <apidata name="IsTabStop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTabStop" />
          <setter name="set_IsTabStop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsTabStop">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsEnabled">
          <apidata name="IsEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsEnabled" />
          <setter name="set_IsEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.HorizontalContentAlignment">
          <apidata name="HorizontalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalContentAlignment" />
          <setter name="set_HorizontalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.HorizontalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FocusState">
          <apidata name="FocusState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_FocusState" />
          <returns>
            <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FocusState">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.DefaultStyleKey">
          <apidata name="DefaultStyleKey" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DefaultStyleKey" />
          <setter name="set_DefaultStyleKey" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControlProtected.DefaultStyleKey">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTextScaleFactorEnabled">
          <apidata name="IsTextScaleFactorEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTextScaleFactorEnabled" />
          <setter name="set_IsTextScaleFactorEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl2.IsTextScaleFactorEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.Controls.Control.IsEnabledChanged">
          <apidata name="IsEnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsEnabledChanged" />
          <remover name="remove_IsEnabledChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.Controls.IControl.IsEnabledChanged">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.FindName(System.String)">
          <apidata name="FindName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="name" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.FindName(System.String)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="binding" in="true">
              <type api="T:Windows.UI.Xaml.Data.BindingBase" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetBindingExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Data.BindingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement2.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.MeasureOverride(Windows.Foundation.Size)">
          <apidata name="MeasureOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.MeasureOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.ArrangeOverride(Windows.Foundation.Size)">
          <apidata name="ArrangeOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="finalSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.ArrangeOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.OnApplyTemplate">
          <apidata name="OnApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.OnApplyTemplate">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GoToElementStateCore(System.String,System.Boolean)">
          <apidata name="GoToElementStateCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="stateName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="useTransitions" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides2.GoToElementStateCore(System.String,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Margin">
          <apidata name="Margin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Margin" />
          <setter name="set_Margin" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Margin">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Language">
          <apidata name="Language" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Language" />
          <setter name="set_Language" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Language">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.HorizontalAlignment">
          <apidata name="HorizontalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalAlignment" />
          <setter name="set_HorizontalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.HorizontalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.FlowDirection">
          <apidata name="FlowDirection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FlowDirection" />
          <setter name="set_FlowDirection" />
          <returns>
            <type api="T:Windows.UI.Xaml.FlowDirection" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.FlowDirection">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.DataContext">
          <apidata name="DataContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DataContext" />
          <setter name="set_DataContext" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.DataContext">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.VerticalAlignment">
          <apidata name="VerticalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalAlignment" />
          <setter name="set_VerticalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.VerticalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxWidth">
          <apidata name="MaxWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxWidth" />
          <setter name="set_MaxWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxHeight">
          <apidata name="MaxHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxHeight" />
          <setter name="set_MaxHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Height">
          <apidata name="Height" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Height" />
          <setter name="set_Height" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Height">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinHeight">
          <apidata name="MinHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinHeight" />
          <setter name="set_MinHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Width">
          <apidata name="Width" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Width" />
          <setter name="set_Width" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Width">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Tag">
          <apidata name="Tag" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Tag" />
          <setter name="set_Tag" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Tag">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Style">
          <apidata name="Style" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Style" />
          <setter name="set_Style" />
          <returns>
            <type api="T:Windows.UI.Xaml.Style" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Style">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Resources">
          <apidata name="Resources" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Resources" />
          <setter name="set_Resources" />
          <returns>
            <type api="T:Windows.UI.Xaml.ResourceDictionary" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Resources">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Name">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinWidth">
          <apidata name="MinWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinWidth" />
          <setter name="set_MinWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualWidth">
          <apidata name="ActualWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.BaseUri">
          <apidata name="BaseUri" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_BaseUri" />
          <returns>
            <type api="T:System.Uri" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.BaseUri">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Parent">
          <apidata name="Parent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Parent" />
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Parent">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Triggers">
          <apidata name="Triggers" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Triggers" />
          <returns>
            <type api="T:Windows.UI.Xaml.TriggerCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Triggers">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualHeight">
          <apidata name="ActualHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.RequestedTheme">
          <apidata name="RequestedTheme" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestedTheme" />
          <setter name="set_RequestedTheme" />
          <returns>
            <type api="T:Windows.UI.Xaml.ElementTheme" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement2.RequestedTheme">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.LayoutUpdated">
          <apidata name="LayoutUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LayoutUpdated" />
          <remover name="remove_LayoutUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Object" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.LayoutUpdated">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Loaded">
          <apidata name="Loaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Loaded" />
          <remover name="remove_Loaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Loaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.SizeChanged">
          <apidata name="SizeChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_SizeChanged" />
          <remover name="remove_SizeChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.SizeChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.SizeChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.SizeChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Unloaded">
          <apidata name="Unloaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Unloaded" />
          <remover name="remove_Unloaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Unloaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.DataContextChanged">
          <apidata name="DataContextChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DataContextChanged" />
          <remover name="remove_DataContextChanged" />
          <eventhandler>
            <type api="T:Windows.Foundation.TypedEventHandler`2" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
                <type api="T:Windows.UI.Xaml.DataContextChangedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement2.DataContextChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Measure(Windows.Foundation.Size)">
          <apidata name="Measure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Measure(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Arrange(Windows.Foundation.Rect)">
          <apidata name="Arrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="finalRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Arrange(Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="CapturePointer" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="ReleasePointerCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCaptures">
          <apidata name="ReleasePointerCaptures" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="handledEventsToo" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
          <apidata name="RemoveHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
          <apidata name="TransformToVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="visual" in="true">
              <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Media.GeneralTransform" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateMeasure">
          <apidata name="InvalidateMeasure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateMeasure">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateArrange">
          <apidata name="InvalidateArrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateArrange">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.UpdateLayout">
          <apidata name="UpdateLayout" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.UpdateLayout">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CancelDirectManipulations">
          <apidata name="CancelDirectManipulations" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement2.CancelDirectManipulations">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnCreateAutomationPeer">
          <apidata name="OnCreateAutomationPeer" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:Windows.UI.Xaml.Automation.Peers.AutomationPeer" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnCreateAutomationPeer">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnDisconnectVisualChildren">
          <apidata name="OnDisconnectVisualChildren" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnDisconnectVisualChildren">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
          <apidata name="FindSubElementsForTouchTargeting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="point" in="true">
              <type api="T:Windows.Foundation.Point" ref="false" />
            </parameter>
            <parameter name="boundingRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:Windows.Foundation.Point" ref="false" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CompositeMode">
          <apidata name="CompositeMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CompositeMode" />
          <setter name="set_CompositeMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.ElementCompositeMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement2.CompositeMode">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.ManipulationMode">
          <apidata name="ManipulationMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_ManipulationMode" />
          <setter name="set_ManipulationMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.ManipulationModes" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.ManipulationMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsTapEnabled">
          <apidata name="IsTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTapEnabled" />
          <setter name="set_IsTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsRightTapEnabled">
          <apidata name="IsRightTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsRightTapEnabled" />
          <setter name="set_IsRightTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsRightTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHoldingEnabled">
          <apidata name="IsHoldingEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHoldingEnabled" />
          <setter name="set_IsHoldingEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHoldingEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHitTestVisible">
          <apidata name="IsHitTestVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHitTestVisible" />
          <setter name="set_IsHitTestVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHitTestVisible">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsDoubleTapEnabled">
          <apidata name="IsDoubleTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsDoubleTapEnabled" />
          <setter name="set_IsDoubleTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsDoubleTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Clip">
          <apidata name="Clip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Clip" />
          <setter name="set_Clip" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.RectangleGeometry" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Clip">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CacheMode">
          <apidata name="CacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CacheMode" />
          <setter name="set_CacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.CacheMode" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.CacheMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Opacity">
          <apidata name="Opacity" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Opacity" />
          <setter name="set_Opacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Opacity">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.AllowDrop">
          <apidata name="AllowDrop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowDrop" />
          <setter name="set_AllowDrop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.AllowDrop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Visibility">
          <apidata name="Visibility" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Visibility" />
          <setter name="set_Visibility" />
          <returns>
            <type api="T:Windows.UI.Xaml.Visibility" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Visibility">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.UseLayoutRounding">
          <apidata name="UseLayoutRounding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_UseLayoutRounding" />
          <setter name="set_UseLayoutRounding" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.UseLayoutRounding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Transitions">
          <apidata name="Transitions" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Transitions" />
          <setter name="set_Transitions" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Animation.TransitionCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Transitions">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransformOrigin">
          <apidata name="RenderTransformOrigin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransformOrigin" />
          <setter name="set_RenderTransformOrigin" />
          <returns>
            <type api="T:Windows.Foundation.Point" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransformOrigin">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransform">
          <apidata name="RenderTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransform" />
          <setter name="set_RenderTransform" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Transform" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransform">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Projection">
          <apidata name="Projection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Projection" />
          <setter name="set_Projection" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Projection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Projection">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.DesiredSize">
          <apidata name="DesiredSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DesiredSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.DesiredSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.PointerCaptures">
          <apidata name="PointerCaptures" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_PointerCaptures" />
          <returns>
            <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.PointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderSize">
          <apidata name="RenderSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_RenderSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DoubleTapped">
          <apidata name="DoubleTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DoubleTapped" />
          <remover name="remove_DoubleTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DoubleTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragEnter">
          <apidata name="DragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragEnter" />
          <remover name="remove_DragEnter" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragEnter">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragLeave">
          <apidata name="DragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragLeave" />
          <remover name="remove_DragLeave" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragLeave">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragOver">
          <apidata name="DragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragOver" />
          <remover name="remove_DragOver" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragOver">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Drop">
          <apidata name="Drop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Drop" />
          <remover name="remove_Drop" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Drop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.GotFocus">
          <apidata name="GotFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotFocus" />
          <remover name="remove_GotFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.GotFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Holding">
          <apidata name="Holding" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Holding" />
          <remover name="remove_Holding" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.HoldingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Holding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyDown">
          <apidata name="KeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyDown" />
          <remover name="remove_KeyDown" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyDown">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyUp">
          <apidata name="KeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyUp" />
          <remover name="remove_KeyUp" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyUp">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.LostFocus">
          <apidata name="LostFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostFocus" />
          <remover name="remove_LostFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.LostFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationCompleted">
          <apidata name="ManipulationCompleted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationCompleted" />
          <remover name="remove_ManipulationCompleted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationCompleted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationDelta">
          <apidata name="ManipulationDelta" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationDelta" />
          <remover name="remove_ManipulationDelta" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationDelta">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationInertiaStarting">
          <apidata name="ManipulationInertiaStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationInertiaStarting" />
          <remover name="remove_ManipulationInertiaStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationInertiaStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarted">
          <apidata name="ManipulationStarted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarted" />
          <remover name="remove_ManipulationStarted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarting">
          <apidata name="ManipulationStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarting" />
          <remover name="remove_ManipulationStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCanceled">
          <apidata name="PointerCanceled" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCanceled" />
          <remover name="remove_PointerCanceled" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCanceled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCaptureLost">
          <apidata name="PointerCaptureLost" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCaptureLost" />
          <remover name="remove_PointerCaptureLost" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCaptureLost">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerEntered">
          <apidata name="PointerEntered" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerEntered" />
          <remover name="remove_PointerEntered" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerEntered">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerExited">
          <apidata name="PointerExited" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerExited" />
          <remover name="remove_PointerExited" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerExited">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerMoved">
          <apidata name="PointerMoved" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerMoved" />
          <remover name="remove_PointerMoved" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerMoved">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerPressed">
          <apidata name="PointerPressed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerPressed" />
          <remover name="remove_PointerPressed" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerPressed">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerReleased">
          <apidata name="PointerReleased" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerReleased" />
          <remover name="remove_PointerReleased" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerReleased">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerWheelChanged">
          <apidata name="PointerWheelChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerWheelChanged" />
          <remover name="remove_PointerWheelChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerWheelChanged">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.RightTapped">
          <apidata name="RightTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_RightTapped" />
          <remover name="remove_RightTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.RightTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.RightTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Tapped">
          <apidata name="Tapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Tapped" />
          <remover name="remove_Tapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.TappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Tapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ReadLocalValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetAnimationBaseValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.DependencyObject.Dispatcher">
          <apidata name="Dispatcher" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Dispatcher" />
          <returns>
            <type api="T:Windows.UI.Core.CoreDispatcher" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IDependencyObject.Dispatcher">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
      </containers>
    </api>
    <api id="M:AppStore.MainPage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MainPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.MainPage._contentLoaded">
      <apidata name="_contentLoaded" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MainPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MainPage.About_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="About_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MainPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.MainPage.appHolding">
      <apidata name="appHolding" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Models.Apps" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MainPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.MainPage.btnMyApps">
      <apidata name="btnMyApps" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.AppBarButton" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MainPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MainPage.Categories_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Categories_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MainPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MainPage.Connect(System.Int32,System.Object)">
      <apidata name="Connect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="connectionId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
          <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MainPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MainPage.Feedback_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Feedback_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MainPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.MainPage.GridFeaturedApps">
      <apidata name="GridFeaturedApps" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.GridView" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MainPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MainPage.GridFeaturedApps_ContentChanging(Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs)">
      <apidata name="GridFeaturedApps_ContentChanging" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:Windows.UI.Xaml.Controls.ListViewBase" ref="true" />
        </parameter>
        <parameter name="args">
          <type api="T:Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MainPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MainPage.GridFeaturedApps_SelectionChanged(System.Object,Windows.UI.Xaml.Controls.SelectionChangedEventArgs)">
      <apidata name="GridFeaturedApps_SelectionChanged" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Controls.SelectionChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MainPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.MainPage.GridFeaturedCategories">
      <apidata name="GridFeaturedCategories" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.GridView" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MainPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MainPage.GridFeaturedCategories_ContentChanging(Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs)">
      <apidata name="GridFeaturedCategories_ContentChanging" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:Windows.UI.Xaml.Controls.ListViewBase" ref="true" />
        </parameter>
        <parameter name="args">
          <type api="T:Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MainPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MainPage.GridFeaturedCategories_SelectionChanged(System.Object,Windows.UI.Xaml.Controls.SelectionChangedEventArgs)">
      <apidata name="GridFeaturedCategories_SelectionChanged" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Controls.SelectionChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MainPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MainPage.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MainPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MainPage.InstallButton_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="InstallButton_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MainPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.MainPage.MainFragment">
      <apidata name="MainFragment" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Grid" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MainPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MainPage.MyApps_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="MyApps_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MainPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MainPage.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedFrom" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MainPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MainPage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedTo" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MainPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.MainPage.pageTitle">
      <apidata name="pageTitle" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MainPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.MainPage.RootLayout">
      <apidata name="RootLayout" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Grid" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MainPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MainPage.Search_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Search_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MainPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.MainPage.selectionGridApps">
      <apidata name="selectionGridApps" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MainPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.MainPage.selectionGridCategories">
      <apidata name="selectionGridCategories" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MainPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MainPage.Settings_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Settings_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MainPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MainPage.ShareButton_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="ShareButton_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MainPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MainPage.ShowImage(Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs)">
      <apidata name="ShowImage" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:Windows.UI.Xaml.Controls.ListViewBase" ref="true" />
        </parameter>
        <parameter name="args">
          <type api="T:Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MainPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MainPage.StackPanel_Holding(System.Object,Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
      <apidata name="StackPanel_Holding" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MainPage" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.MyAppsPage">
      <apidata name="MyAppsPage" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="F:AppStore.MyAppsPage.navigationHelper" />
        <element api="F:AppStore.MyAppsPage.defaultViewModel" />
        <element api="F:AppStore.MyAppsPage.selectionGridApps" />
        <element api="F:AppStore.MyAppsPage.appHolding" />
        <element api="F:AppStore.MyAppsPage.RootLayout" />
        <element api="F:AppStore.MyAppsPage.MainFragment" />
        <element api="F:AppStore.MyAppsPage.GridMyApps" />
        <element api="F:AppStore.MyAppsPage.pageTitle" />
        <element api="F:AppStore.MyAppsPage._contentLoaded" />
        <element api="M:AppStore.MyAppsPage.#ctor" />
        <element api="M:AppStore.MyAppsPage.NavigationHelper_LoadState(System.Object,AppStore.Common.LoadStateEventArgs)" />
        <element api="M:AppStore.MyAppsPage.NavigationHelper_SaveState(System.Object,AppStore.Common.SaveStateEventArgs)" />
        <element api="M:AppStore.MyAppsPage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.MyAppsPage.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.MyAppsPage.GridMyApps_ContentChanging(Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs)" />
        <element api="M:AppStore.MyAppsPage.ShowImage(Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs)" />
        <element api="M:AppStore.MyAppsPage.GridMyApps_SelectionChanged(System.Object,Windows.UI.Xaml.Controls.SelectionChangedEventArgs)" />
        <element api="M:AppStore.MyAppsPage.Search_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.MyAppsPage.Settings_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.MyAppsPage.Home_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.MyAppsPage.Categories_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.MyAppsPage.About_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.MyAppsPage.StackPanel_Holding(System.Object,Windows.UI.Xaml.Input.HoldingRoutedEventArgs)" />
        <element api="M:AppStore.MyAppsPage.Feedback_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.MyAppsPage.UninstallButton_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.MyAppsPage.ShareButton_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.MyAppsPage.InitializeComponent" />
        <element api="M:AppStore.MyAppsPage.Connect(System.Int32,System.Object)" />
        <element api="P:AppStore.MyAppsPage.NavigationHelper" />
        <element api="P:AppStore.MyAppsPage.DefaultViewModel" />
        <element api="M:Windows.UI.Xaml.Controls.Page.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
          <apidata name="OnNavigatingFrom" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IPageOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.TopAppBar">
          <apidata name="TopAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TopAppBar" />
          <setter name="set_TopAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.TopAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.NavigationCacheMode">
          <apidata name="NavigationCacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_NavigationCacheMode" />
          <setter name="set_NavigationCacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Navigation.NavigationCacheMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.NavigationCacheMode">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.BottomAppBar">
          <apidata name="BottomAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BottomAppBar" />
          <setter name="set_BottomAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.BottomAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.Frame">
          <apidata name="Frame" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Frame" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.Frame" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.Frame">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.UserControl.Content">
          <apidata name="Content" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Content" />
          <setter name="set_Content" />
          <returns>
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IUserControl.Content">
              <type api="T:Windows.UI.Xaml.Controls.IUserControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.ApplyTemplate">
          <apidata name="ApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.ApplyTemplate">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.Focus(Windows.UI.Xaml.FocusState)">
          <apidata name="Focus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.Focus(Windows.UI.Xaml.FocusState)">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerEntered" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerPressed" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerMoved" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerReleased" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerExited" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCaptureLost" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCanceled" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerWheelChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
          <apidata name="OnTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
          <apidata name="OnDoubleTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
          <apidata name="OnHolding" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
          <apidata name="OnRightTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
          <apidata name="OnManipulationStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
          <apidata name="OnManipulationInertiaStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
          <apidata name="OnManipulationStarted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
          <apidata name="OnManipulationDelta" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
          <apidata name="OnManipulationCompleted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnGotFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnLostFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDrop(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDrop(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.GetTemplateChild(System.String)">
          <apidata name="GetTemplateChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="childName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlProtected.GetTemplateChild(System.String)">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStyle">
          <apidata name="FontStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStyle" />
          <setter name="set_FontStyle" />
          <returns>
            <type api="T:Windows.UI.Text.FontStyle" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStyle">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStretch">
          <apidata name="FontStretch" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStretch" />
          <setter name="set_FontStretch" />
          <returns>
            <type api="T:Windows.UI.Text.FontStretch" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStretch">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontSize">
          <apidata name="FontSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontSize" />
          <setter name="set_FontSize" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontSize">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontFamily">
          <apidata name="FontFamily" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontFamily" />
          <setter name="set_FontFamily" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.FontFamily" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontFamily">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontWeight">
          <apidata name="FontWeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontWeight" />
          <setter name="set_FontWeight" />
          <returns>
            <type api="T:Windows.UI.Text.FontWeight" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontWeight">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.CharacterSpacing">
          <apidata name="CharacterSpacing" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CharacterSpacing" />
          <setter name="set_CharacterSpacing" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.CharacterSpacing">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderThickness">
          <apidata name="BorderThickness" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderThickness" />
          <setter name="set_BorderThickness" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderThickness">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderBrush">
          <apidata name="BorderBrush" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderBrush" />
          <setter name="set_BorderBrush" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderBrush">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Background">
          <apidata name="Background" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Background" />
          <setter name="set_Background" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Background">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Foreground">
          <apidata name="Foreground" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Foreground" />
          <setter name="set_Foreground" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Foreground">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.VerticalContentAlignment">
          <apidata name="VerticalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalContentAlignment" />
          <setter name="set_VerticalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.VerticalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Template">
          <apidata name="Template" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Template" />
          <setter name="set_Template" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.ControlTemplate" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Template">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabNavigation">
          <apidata name="TabNavigation" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabNavigation" />
          <setter name="set_TabNavigation" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.KeyboardNavigationMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabNavigation">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabIndex">
          <apidata name="TabIndex" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabIndex" />
          <setter name="set_TabIndex" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabIndex">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Padding">
          <apidata name="Padding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Padding" />
          <setter name="set_Padding" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Padding">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTabStop">
          <apidata name="IsTabStop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTabStop" />
          <setter name="set_IsTabStop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsTabStop">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsEnabled">
          <apidata name="IsEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsEnabled" />
          <setter name="set_IsEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.HorizontalContentAlignment">
          <apidata name="HorizontalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalContentAlignment" />
          <setter name="set_HorizontalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.HorizontalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FocusState">
          <apidata name="FocusState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_FocusState" />
          <returns>
            <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FocusState">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.DefaultStyleKey">
          <apidata name="DefaultStyleKey" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DefaultStyleKey" />
          <setter name="set_DefaultStyleKey" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControlProtected.DefaultStyleKey">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTextScaleFactorEnabled">
          <apidata name="IsTextScaleFactorEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTextScaleFactorEnabled" />
          <setter name="set_IsTextScaleFactorEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl2.IsTextScaleFactorEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.Controls.Control.IsEnabledChanged">
          <apidata name="IsEnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsEnabledChanged" />
          <remover name="remove_IsEnabledChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.Controls.IControl.IsEnabledChanged">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.FindName(System.String)">
          <apidata name="FindName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="name" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.FindName(System.String)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="binding" in="true">
              <type api="T:Windows.UI.Xaml.Data.BindingBase" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetBindingExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Data.BindingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement2.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.MeasureOverride(Windows.Foundation.Size)">
          <apidata name="MeasureOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.MeasureOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.ArrangeOverride(Windows.Foundation.Size)">
          <apidata name="ArrangeOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="finalSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.ArrangeOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.OnApplyTemplate">
          <apidata name="OnApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.OnApplyTemplate">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GoToElementStateCore(System.String,System.Boolean)">
          <apidata name="GoToElementStateCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="stateName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="useTransitions" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides2.GoToElementStateCore(System.String,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Margin">
          <apidata name="Margin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Margin" />
          <setter name="set_Margin" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Margin">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Language">
          <apidata name="Language" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Language" />
          <setter name="set_Language" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Language">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.HorizontalAlignment">
          <apidata name="HorizontalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalAlignment" />
          <setter name="set_HorizontalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.HorizontalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.FlowDirection">
          <apidata name="FlowDirection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FlowDirection" />
          <setter name="set_FlowDirection" />
          <returns>
            <type api="T:Windows.UI.Xaml.FlowDirection" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.FlowDirection">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.DataContext">
          <apidata name="DataContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DataContext" />
          <setter name="set_DataContext" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.DataContext">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.VerticalAlignment">
          <apidata name="VerticalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalAlignment" />
          <setter name="set_VerticalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.VerticalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxWidth">
          <apidata name="MaxWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxWidth" />
          <setter name="set_MaxWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxHeight">
          <apidata name="MaxHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxHeight" />
          <setter name="set_MaxHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Height">
          <apidata name="Height" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Height" />
          <setter name="set_Height" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Height">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinHeight">
          <apidata name="MinHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinHeight" />
          <setter name="set_MinHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Width">
          <apidata name="Width" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Width" />
          <setter name="set_Width" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Width">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Tag">
          <apidata name="Tag" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Tag" />
          <setter name="set_Tag" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Tag">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Style">
          <apidata name="Style" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Style" />
          <setter name="set_Style" />
          <returns>
            <type api="T:Windows.UI.Xaml.Style" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Style">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Resources">
          <apidata name="Resources" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Resources" />
          <setter name="set_Resources" />
          <returns>
            <type api="T:Windows.UI.Xaml.ResourceDictionary" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Resources">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Name">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinWidth">
          <apidata name="MinWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinWidth" />
          <setter name="set_MinWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualWidth">
          <apidata name="ActualWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.BaseUri">
          <apidata name="BaseUri" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_BaseUri" />
          <returns>
            <type api="T:System.Uri" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.BaseUri">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Parent">
          <apidata name="Parent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Parent" />
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Parent">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Triggers">
          <apidata name="Triggers" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Triggers" />
          <returns>
            <type api="T:Windows.UI.Xaml.TriggerCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Triggers">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualHeight">
          <apidata name="ActualHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.RequestedTheme">
          <apidata name="RequestedTheme" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestedTheme" />
          <setter name="set_RequestedTheme" />
          <returns>
            <type api="T:Windows.UI.Xaml.ElementTheme" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement2.RequestedTheme">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.LayoutUpdated">
          <apidata name="LayoutUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LayoutUpdated" />
          <remover name="remove_LayoutUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Object" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.LayoutUpdated">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Loaded">
          <apidata name="Loaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Loaded" />
          <remover name="remove_Loaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Loaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.SizeChanged">
          <apidata name="SizeChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_SizeChanged" />
          <remover name="remove_SizeChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.SizeChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.SizeChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.SizeChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Unloaded">
          <apidata name="Unloaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Unloaded" />
          <remover name="remove_Unloaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Unloaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.DataContextChanged">
          <apidata name="DataContextChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DataContextChanged" />
          <remover name="remove_DataContextChanged" />
          <eventhandler>
            <type api="T:Windows.Foundation.TypedEventHandler`2" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
                <type api="T:Windows.UI.Xaml.DataContextChangedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement2.DataContextChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Measure(Windows.Foundation.Size)">
          <apidata name="Measure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Measure(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Arrange(Windows.Foundation.Rect)">
          <apidata name="Arrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="finalRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Arrange(Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="CapturePointer" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="ReleasePointerCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCaptures">
          <apidata name="ReleasePointerCaptures" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="handledEventsToo" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
          <apidata name="RemoveHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
          <apidata name="TransformToVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="visual" in="true">
              <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Media.GeneralTransform" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateMeasure">
          <apidata name="InvalidateMeasure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateMeasure">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateArrange">
          <apidata name="InvalidateArrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateArrange">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.UpdateLayout">
          <apidata name="UpdateLayout" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.UpdateLayout">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CancelDirectManipulations">
          <apidata name="CancelDirectManipulations" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement2.CancelDirectManipulations">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnCreateAutomationPeer">
          <apidata name="OnCreateAutomationPeer" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:Windows.UI.Xaml.Automation.Peers.AutomationPeer" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnCreateAutomationPeer">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnDisconnectVisualChildren">
          <apidata name="OnDisconnectVisualChildren" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnDisconnectVisualChildren">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
          <apidata name="FindSubElementsForTouchTargeting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="point" in="true">
              <type api="T:Windows.Foundation.Point" ref="false" />
            </parameter>
            <parameter name="boundingRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:Windows.Foundation.Point" ref="false" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CompositeMode">
          <apidata name="CompositeMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CompositeMode" />
          <setter name="set_CompositeMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.ElementCompositeMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement2.CompositeMode">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.ManipulationMode">
          <apidata name="ManipulationMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_ManipulationMode" />
          <setter name="set_ManipulationMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.ManipulationModes" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.ManipulationMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsTapEnabled">
          <apidata name="IsTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTapEnabled" />
          <setter name="set_IsTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsRightTapEnabled">
          <apidata name="IsRightTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsRightTapEnabled" />
          <setter name="set_IsRightTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsRightTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHoldingEnabled">
          <apidata name="IsHoldingEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHoldingEnabled" />
          <setter name="set_IsHoldingEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHoldingEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHitTestVisible">
          <apidata name="IsHitTestVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHitTestVisible" />
          <setter name="set_IsHitTestVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHitTestVisible">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsDoubleTapEnabled">
          <apidata name="IsDoubleTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsDoubleTapEnabled" />
          <setter name="set_IsDoubleTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsDoubleTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Clip">
          <apidata name="Clip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Clip" />
          <setter name="set_Clip" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.RectangleGeometry" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Clip">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CacheMode">
          <apidata name="CacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CacheMode" />
          <setter name="set_CacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.CacheMode" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.CacheMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Opacity">
          <apidata name="Opacity" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Opacity" />
          <setter name="set_Opacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Opacity">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.AllowDrop">
          <apidata name="AllowDrop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowDrop" />
          <setter name="set_AllowDrop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.AllowDrop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Visibility">
          <apidata name="Visibility" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Visibility" />
          <setter name="set_Visibility" />
          <returns>
            <type api="T:Windows.UI.Xaml.Visibility" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Visibility">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.UseLayoutRounding">
          <apidata name="UseLayoutRounding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_UseLayoutRounding" />
          <setter name="set_UseLayoutRounding" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.UseLayoutRounding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Transitions">
          <apidata name="Transitions" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Transitions" />
          <setter name="set_Transitions" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Animation.TransitionCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Transitions">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransformOrigin">
          <apidata name="RenderTransformOrigin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransformOrigin" />
          <setter name="set_RenderTransformOrigin" />
          <returns>
            <type api="T:Windows.Foundation.Point" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransformOrigin">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransform">
          <apidata name="RenderTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransform" />
          <setter name="set_RenderTransform" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Transform" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransform">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Projection">
          <apidata name="Projection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Projection" />
          <setter name="set_Projection" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Projection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Projection">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.DesiredSize">
          <apidata name="DesiredSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DesiredSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.DesiredSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.PointerCaptures">
          <apidata name="PointerCaptures" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_PointerCaptures" />
          <returns>
            <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.PointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderSize">
          <apidata name="RenderSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_RenderSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DoubleTapped">
          <apidata name="DoubleTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DoubleTapped" />
          <remover name="remove_DoubleTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DoubleTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragEnter">
          <apidata name="DragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragEnter" />
          <remover name="remove_DragEnter" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragEnter">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragLeave">
          <apidata name="DragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragLeave" />
          <remover name="remove_DragLeave" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragLeave">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragOver">
          <apidata name="DragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragOver" />
          <remover name="remove_DragOver" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragOver">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Drop">
          <apidata name="Drop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Drop" />
          <remover name="remove_Drop" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Drop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.GotFocus">
          <apidata name="GotFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotFocus" />
          <remover name="remove_GotFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.GotFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Holding">
          <apidata name="Holding" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Holding" />
          <remover name="remove_Holding" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.HoldingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Holding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyDown">
          <apidata name="KeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyDown" />
          <remover name="remove_KeyDown" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyDown">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyUp">
          <apidata name="KeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyUp" />
          <remover name="remove_KeyUp" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyUp">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.LostFocus">
          <apidata name="LostFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostFocus" />
          <remover name="remove_LostFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.LostFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationCompleted">
          <apidata name="ManipulationCompleted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationCompleted" />
          <remover name="remove_ManipulationCompleted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationCompleted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationDelta">
          <apidata name="ManipulationDelta" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationDelta" />
          <remover name="remove_ManipulationDelta" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationDelta">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationInertiaStarting">
          <apidata name="ManipulationInertiaStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationInertiaStarting" />
          <remover name="remove_ManipulationInertiaStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationInertiaStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarted">
          <apidata name="ManipulationStarted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarted" />
          <remover name="remove_ManipulationStarted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarting">
          <apidata name="ManipulationStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarting" />
          <remover name="remove_ManipulationStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCanceled">
          <apidata name="PointerCanceled" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCanceled" />
          <remover name="remove_PointerCanceled" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCanceled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCaptureLost">
          <apidata name="PointerCaptureLost" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCaptureLost" />
          <remover name="remove_PointerCaptureLost" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCaptureLost">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerEntered">
          <apidata name="PointerEntered" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerEntered" />
          <remover name="remove_PointerEntered" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerEntered">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerExited">
          <apidata name="PointerExited" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerExited" />
          <remover name="remove_PointerExited" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerExited">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerMoved">
          <apidata name="PointerMoved" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerMoved" />
          <remover name="remove_PointerMoved" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerMoved">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerPressed">
          <apidata name="PointerPressed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerPressed" />
          <remover name="remove_PointerPressed" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerPressed">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerReleased">
          <apidata name="PointerReleased" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerReleased" />
          <remover name="remove_PointerReleased" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerReleased">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerWheelChanged">
          <apidata name="PointerWheelChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerWheelChanged" />
          <remover name="remove_PointerWheelChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerWheelChanged">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.RightTapped">
          <apidata name="RightTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_RightTapped" />
          <remover name="remove_RightTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.RightTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.RightTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Tapped">
          <apidata name="Tapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Tapped" />
          <remover name="remove_Tapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.TappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Tapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ReadLocalValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetAnimationBaseValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.DependencyObject.Dispatcher">
          <apidata name="Dispatcher" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Dispatcher" />
          <returns>
            <type api="T:Windows.UI.Core.CoreDispatcher" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IDependencyObject.Dispatcher">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
      </containers>
    </api>
    <api id="M:AppStore.MyAppsPage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MyAppsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.MyAppsPage._contentLoaded">
      <apidata name="_contentLoaded" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MyAppsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MyAppsPage.About_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="About_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MyAppsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.MyAppsPage.appHolding">
      <apidata name="appHolding" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Models.Apps" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MyAppsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MyAppsPage.Categories_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Categories_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MyAppsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MyAppsPage.Connect(System.Int32,System.Object)">
      <apidata name="Connect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="connectionId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
          <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MyAppsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.MyAppsPage.defaultViewModel">
      <apidata name="defaultViewModel" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MyAppsPage" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.MyAppsPage.DefaultViewModel">
      <apidata name="DefaultViewModel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultViewModel" />
      <returns>
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MyAppsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MyAppsPage.Feedback_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Feedback_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MyAppsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.MyAppsPage.GridMyApps">
      <apidata name="GridMyApps" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.GridView" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MyAppsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MyAppsPage.GridMyApps_ContentChanging(Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs)">
      <apidata name="GridMyApps_ContentChanging" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:Windows.UI.Xaml.Controls.ListViewBase" ref="true" />
        </parameter>
        <parameter name="args">
          <type api="T:Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MyAppsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MyAppsPage.GridMyApps_SelectionChanged(System.Object,Windows.UI.Xaml.Controls.SelectionChangedEventArgs)">
      <apidata name="GridMyApps_SelectionChanged" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Controls.SelectionChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MyAppsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MyAppsPage.Home_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Home_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MyAppsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MyAppsPage.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MyAppsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.MyAppsPage.MainFragment">
      <apidata name="MainFragment" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Grid" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MyAppsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.MyAppsPage.navigationHelper">
      <apidata name="navigationHelper" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MyAppsPage" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.MyAppsPage.NavigationHelper">
      <apidata name="NavigationHelper" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NavigationHelper" />
      <returns>
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MyAppsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MyAppsPage.NavigationHelper_LoadState(System.Object,AppStore.Common.LoadStateEventArgs)">
      <apidata name="NavigationHelper_LoadState" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:AppStore.Common.LoadStateEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MyAppsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MyAppsPage.NavigationHelper_SaveState(System.Object,AppStore.Common.SaveStateEventArgs)">
      <apidata name="NavigationHelper_SaveState" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:AppStore.Common.SaveStateEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MyAppsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MyAppsPage.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedFrom" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MyAppsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MyAppsPage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedTo" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MyAppsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.MyAppsPage.pageTitle">
      <apidata name="pageTitle" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MyAppsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.MyAppsPage.RootLayout">
      <apidata name="RootLayout" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Grid" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MyAppsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MyAppsPage.Search_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Search_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MyAppsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.MyAppsPage.selectionGridApps">
      <apidata name="selectionGridApps" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MyAppsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MyAppsPage.Settings_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Settings_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MyAppsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MyAppsPage.ShareButton_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="ShareButton_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MyAppsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MyAppsPage.ShowImage(Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs)">
      <apidata name="ShowImage" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:Windows.UI.Xaml.Controls.ListViewBase" ref="true" />
        </parameter>
        <parameter name="args">
          <type api="T:Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MyAppsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MyAppsPage.StackPanel_Holding(System.Object,Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
      <apidata name="StackPanel_Holding" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MyAppsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.MyAppsPage.UninstallButton_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="UninstallButton_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.MyAppsPage" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.Program">
      <apidata name="Program" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:AppStore.Program.Main(System.String[])" />
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
      </containers>
    </api>
    <api id="M:AppStore.Program.Main(System.String[])">
      <apidata name="Main" group="member" subgroup="method" />
      <memberdata visibility="private" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.Program" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.SearchPage">
      <apidata name="SearchPage" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="F:AppStore.SearchPage.navigationHelper" />
        <element api="F:AppStore.SearchPage.defaultViewModel" />
        <element api="F:AppStore.SearchPage.selectionGridApps" />
        <element api="F:AppStore.SearchPage.appHolding" />
        <element api="F:AppStore.SearchPage.LayoutRoot" />
        <element api="F:AppStore.SearchPage.ContentRoot" />
        <element api="F:AppStore.SearchPage.GridFeaturedApps" />
        <element api="F:AppStore.SearchPage.Search" />
        <element api="F:AppStore.SearchPage.btnMyApps" />
        <element api="F:AppStore.SearchPage._contentLoaded" />
        <element api="M:AppStore.SearchPage.#ctor" />
        <element api="M:AppStore.SearchPage.NavigationHelper_LoadState(System.Object,AppStore.Common.LoadStateEventArgs)" />
        <element api="M:AppStore.SearchPage.NavigationHelper_SaveState(System.Object,AppStore.Common.SaveStateEventArgs)" />
        <element api="M:AppStore.SearchPage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.SearchPage.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.SearchPage.GridFeaturedApps_ContentChanging(Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs)" />
        <element api="M:AppStore.SearchPage.ShowImage(Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs)" />
        <element api="M:AppStore.SearchPage.GridFeaturedApps_SelectionChanged(System.Object,Windows.UI.Xaml.Controls.SelectionChangedEventArgs)" />
        <element api="M:AppStore.SearchPage.Home_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.SearchPage.Settings_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.SearchPage.MyApps_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.SearchPage.Categories_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.SearchPage.About_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.SearchPage.StackPanel_Holding(System.Object,Windows.UI.Xaml.Input.HoldingRoutedEventArgs)" />
        <element api="M:AppStore.SearchPage.Feedback_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.SearchPage.InstallButton_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.SearchPage.ShareButton_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.SearchPage.Search_TextChanged(System.Object,Windows.UI.Xaml.Controls.TextChangedEventArgs)" />
        <element api="M:AppStore.SearchPage.InitializeComponent" />
        <element api="M:AppStore.SearchPage.Connect(System.Int32,System.Object)" />
        <element api="P:AppStore.SearchPage.NavigationHelper" />
        <element api="P:AppStore.SearchPage.DefaultViewModel" />
        <element api="M:Windows.UI.Xaml.Controls.Page.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
          <apidata name="OnNavigatingFrom" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IPageOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.TopAppBar">
          <apidata name="TopAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TopAppBar" />
          <setter name="set_TopAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.TopAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.NavigationCacheMode">
          <apidata name="NavigationCacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_NavigationCacheMode" />
          <setter name="set_NavigationCacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Navigation.NavigationCacheMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.NavigationCacheMode">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.BottomAppBar">
          <apidata name="BottomAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BottomAppBar" />
          <setter name="set_BottomAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.BottomAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.Frame">
          <apidata name="Frame" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Frame" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.Frame" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.Frame">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.UserControl.Content">
          <apidata name="Content" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Content" />
          <setter name="set_Content" />
          <returns>
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IUserControl.Content">
              <type api="T:Windows.UI.Xaml.Controls.IUserControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.ApplyTemplate">
          <apidata name="ApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.ApplyTemplate">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.Focus(Windows.UI.Xaml.FocusState)">
          <apidata name="Focus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.Focus(Windows.UI.Xaml.FocusState)">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerEntered" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerPressed" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerMoved" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerReleased" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerExited" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCaptureLost" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCanceled" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerWheelChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
          <apidata name="OnTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
          <apidata name="OnDoubleTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
          <apidata name="OnHolding" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
          <apidata name="OnRightTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
          <apidata name="OnManipulationStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
          <apidata name="OnManipulationInertiaStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
          <apidata name="OnManipulationStarted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
          <apidata name="OnManipulationDelta" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
          <apidata name="OnManipulationCompleted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnGotFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnLostFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDrop(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDrop(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.GetTemplateChild(System.String)">
          <apidata name="GetTemplateChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="childName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlProtected.GetTemplateChild(System.String)">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStyle">
          <apidata name="FontStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStyle" />
          <setter name="set_FontStyle" />
          <returns>
            <type api="T:Windows.UI.Text.FontStyle" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStyle">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStretch">
          <apidata name="FontStretch" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStretch" />
          <setter name="set_FontStretch" />
          <returns>
            <type api="T:Windows.UI.Text.FontStretch" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStretch">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontSize">
          <apidata name="FontSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontSize" />
          <setter name="set_FontSize" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontSize">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontFamily">
          <apidata name="FontFamily" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontFamily" />
          <setter name="set_FontFamily" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.FontFamily" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontFamily">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontWeight">
          <apidata name="FontWeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontWeight" />
          <setter name="set_FontWeight" />
          <returns>
            <type api="T:Windows.UI.Text.FontWeight" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontWeight">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.CharacterSpacing">
          <apidata name="CharacterSpacing" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CharacterSpacing" />
          <setter name="set_CharacterSpacing" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.CharacterSpacing">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderThickness">
          <apidata name="BorderThickness" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderThickness" />
          <setter name="set_BorderThickness" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderThickness">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderBrush">
          <apidata name="BorderBrush" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderBrush" />
          <setter name="set_BorderBrush" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderBrush">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Background">
          <apidata name="Background" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Background" />
          <setter name="set_Background" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Background">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Foreground">
          <apidata name="Foreground" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Foreground" />
          <setter name="set_Foreground" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Foreground">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.VerticalContentAlignment">
          <apidata name="VerticalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalContentAlignment" />
          <setter name="set_VerticalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.VerticalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Template">
          <apidata name="Template" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Template" />
          <setter name="set_Template" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.ControlTemplate" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Template">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabNavigation">
          <apidata name="TabNavigation" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabNavigation" />
          <setter name="set_TabNavigation" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.KeyboardNavigationMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabNavigation">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabIndex">
          <apidata name="TabIndex" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabIndex" />
          <setter name="set_TabIndex" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabIndex">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Padding">
          <apidata name="Padding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Padding" />
          <setter name="set_Padding" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Padding">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTabStop">
          <apidata name="IsTabStop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTabStop" />
          <setter name="set_IsTabStop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsTabStop">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsEnabled">
          <apidata name="IsEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsEnabled" />
          <setter name="set_IsEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.HorizontalContentAlignment">
          <apidata name="HorizontalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalContentAlignment" />
          <setter name="set_HorizontalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.HorizontalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FocusState">
          <apidata name="FocusState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_FocusState" />
          <returns>
            <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FocusState">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.DefaultStyleKey">
          <apidata name="DefaultStyleKey" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DefaultStyleKey" />
          <setter name="set_DefaultStyleKey" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControlProtected.DefaultStyleKey">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTextScaleFactorEnabled">
          <apidata name="IsTextScaleFactorEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTextScaleFactorEnabled" />
          <setter name="set_IsTextScaleFactorEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl2.IsTextScaleFactorEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.Controls.Control.IsEnabledChanged">
          <apidata name="IsEnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsEnabledChanged" />
          <remover name="remove_IsEnabledChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.Controls.IControl.IsEnabledChanged">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.FindName(System.String)">
          <apidata name="FindName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="name" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.FindName(System.String)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="binding" in="true">
              <type api="T:Windows.UI.Xaml.Data.BindingBase" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetBindingExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Data.BindingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement2.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.MeasureOverride(Windows.Foundation.Size)">
          <apidata name="MeasureOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.MeasureOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.ArrangeOverride(Windows.Foundation.Size)">
          <apidata name="ArrangeOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="finalSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.ArrangeOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.OnApplyTemplate">
          <apidata name="OnApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.OnApplyTemplate">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GoToElementStateCore(System.String,System.Boolean)">
          <apidata name="GoToElementStateCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="stateName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="useTransitions" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides2.GoToElementStateCore(System.String,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Margin">
          <apidata name="Margin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Margin" />
          <setter name="set_Margin" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Margin">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Language">
          <apidata name="Language" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Language" />
          <setter name="set_Language" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Language">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.HorizontalAlignment">
          <apidata name="HorizontalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalAlignment" />
          <setter name="set_HorizontalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.HorizontalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.FlowDirection">
          <apidata name="FlowDirection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FlowDirection" />
          <setter name="set_FlowDirection" />
          <returns>
            <type api="T:Windows.UI.Xaml.FlowDirection" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.FlowDirection">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.DataContext">
          <apidata name="DataContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DataContext" />
          <setter name="set_DataContext" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.DataContext">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.VerticalAlignment">
          <apidata name="VerticalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalAlignment" />
          <setter name="set_VerticalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.VerticalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxWidth">
          <apidata name="MaxWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxWidth" />
          <setter name="set_MaxWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxHeight">
          <apidata name="MaxHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxHeight" />
          <setter name="set_MaxHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Height">
          <apidata name="Height" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Height" />
          <setter name="set_Height" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Height">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinHeight">
          <apidata name="MinHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinHeight" />
          <setter name="set_MinHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Width">
          <apidata name="Width" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Width" />
          <setter name="set_Width" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Width">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Tag">
          <apidata name="Tag" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Tag" />
          <setter name="set_Tag" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Tag">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Style">
          <apidata name="Style" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Style" />
          <setter name="set_Style" />
          <returns>
            <type api="T:Windows.UI.Xaml.Style" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Style">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Resources">
          <apidata name="Resources" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Resources" />
          <setter name="set_Resources" />
          <returns>
            <type api="T:Windows.UI.Xaml.ResourceDictionary" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Resources">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Name">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinWidth">
          <apidata name="MinWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinWidth" />
          <setter name="set_MinWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualWidth">
          <apidata name="ActualWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.BaseUri">
          <apidata name="BaseUri" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_BaseUri" />
          <returns>
            <type api="T:System.Uri" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.BaseUri">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Parent">
          <apidata name="Parent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Parent" />
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Parent">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Triggers">
          <apidata name="Triggers" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Triggers" />
          <returns>
            <type api="T:Windows.UI.Xaml.TriggerCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Triggers">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualHeight">
          <apidata name="ActualHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.RequestedTheme">
          <apidata name="RequestedTheme" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestedTheme" />
          <setter name="set_RequestedTheme" />
          <returns>
            <type api="T:Windows.UI.Xaml.ElementTheme" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement2.RequestedTheme">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.LayoutUpdated">
          <apidata name="LayoutUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LayoutUpdated" />
          <remover name="remove_LayoutUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Object" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.LayoutUpdated">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Loaded">
          <apidata name="Loaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Loaded" />
          <remover name="remove_Loaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Loaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.SizeChanged">
          <apidata name="SizeChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_SizeChanged" />
          <remover name="remove_SizeChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.SizeChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.SizeChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.SizeChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Unloaded">
          <apidata name="Unloaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Unloaded" />
          <remover name="remove_Unloaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Unloaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.DataContextChanged">
          <apidata name="DataContextChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DataContextChanged" />
          <remover name="remove_DataContextChanged" />
          <eventhandler>
            <type api="T:Windows.Foundation.TypedEventHandler`2" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
                <type api="T:Windows.UI.Xaml.DataContextChangedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement2.DataContextChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Measure(Windows.Foundation.Size)">
          <apidata name="Measure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Measure(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Arrange(Windows.Foundation.Rect)">
          <apidata name="Arrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="finalRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Arrange(Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="CapturePointer" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="ReleasePointerCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCaptures">
          <apidata name="ReleasePointerCaptures" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="handledEventsToo" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
          <apidata name="RemoveHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
          <apidata name="TransformToVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="visual" in="true">
              <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Media.GeneralTransform" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateMeasure">
          <apidata name="InvalidateMeasure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateMeasure">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateArrange">
          <apidata name="InvalidateArrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateArrange">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.UpdateLayout">
          <apidata name="UpdateLayout" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.UpdateLayout">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CancelDirectManipulations">
          <apidata name="CancelDirectManipulations" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement2.CancelDirectManipulations">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnCreateAutomationPeer">
          <apidata name="OnCreateAutomationPeer" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:Windows.UI.Xaml.Automation.Peers.AutomationPeer" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnCreateAutomationPeer">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnDisconnectVisualChildren">
          <apidata name="OnDisconnectVisualChildren" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnDisconnectVisualChildren">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
          <apidata name="FindSubElementsForTouchTargeting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="point" in="true">
              <type api="T:Windows.Foundation.Point" ref="false" />
            </parameter>
            <parameter name="boundingRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:Windows.Foundation.Point" ref="false" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CompositeMode">
          <apidata name="CompositeMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CompositeMode" />
          <setter name="set_CompositeMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.ElementCompositeMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement2.CompositeMode">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.ManipulationMode">
          <apidata name="ManipulationMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_ManipulationMode" />
          <setter name="set_ManipulationMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.ManipulationModes" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.ManipulationMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsTapEnabled">
          <apidata name="IsTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTapEnabled" />
          <setter name="set_IsTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsRightTapEnabled">
          <apidata name="IsRightTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsRightTapEnabled" />
          <setter name="set_IsRightTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsRightTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHoldingEnabled">
          <apidata name="IsHoldingEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHoldingEnabled" />
          <setter name="set_IsHoldingEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHoldingEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHitTestVisible">
          <apidata name="IsHitTestVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHitTestVisible" />
          <setter name="set_IsHitTestVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHitTestVisible">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsDoubleTapEnabled">
          <apidata name="IsDoubleTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsDoubleTapEnabled" />
          <setter name="set_IsDoubleTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsDoubleTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Clip">
          <apidata name="Clip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Clip" />
          <setter name="set_Clip" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.RectangleGeometry" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Clip">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CacheMode">
          <apidata name="CacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CacheMode" />
          <setter name="set_CacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.CacheMode" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.CacheMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Opacity">
          <apidata name="Opacity" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Opacity" />
          <setter name="set_Opacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Opacity">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.AllowDrop">
          <apidata name="AllowDrop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowDrop" />
          <setter name="set_AllowDrop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.AllowDrop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Visibility">
          <apidata name="Visibility" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Visibility" />
          <setter name="set_Visibility" />
          <returns>
            <type api="T:Windows.UI.Xaml.Visibility" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Visibility">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.UseLayoutRounding">
          <apidata name="UseLayoutRounding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_UseLayoutRounding" />
          <setter name="set_UseLayoutRounding" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.UseLayoutRounding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Transitions">
          <apidata name="Transitions" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Transitions" />
          <setter name="set_Transitions" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Animation.TransitionCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Transitions">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransformOrigin">
          <apidata name="RenderTransformOrigin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransformOrigin" />
          <setter name="set_RenderTransformOrigin" />
          <returns>
            <type api="T:Windows.Foundation.Point" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransformOrigin">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransform">
          <apidata name="RenderTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransform" />
          <setter name="set_RenderTransform" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Transform" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransform">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Projection">
          <apidata name="Projection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Projection" />
          <setter name="set_Projection" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Projection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Projection">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.DesiredSize">
          <apidata name="DesiredSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DesiredSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.DesiredSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.PointerCaptures">
          <apidata name="PointerCaptures" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_PointerCaptures" />
          <returns>
            <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.PointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderSize">
          <apidata name="RenderSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_RenderSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DoubleTapped">
          <apidata name="DoubleTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DoubleTapped" />
          <remover name="remove_DoubleTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DoubleTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragEnter">
          <apidata name="DragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragEnter" />
          <remover name="remove_DragEnter" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragEnter">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragLeave">
          <apidata name="DragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragLeave" />
          <remover name="remove_DragLeave" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragLeave">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragOver">
          <apidata name="DragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragOver" />
          <remover name="remove_DragOver" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragOver">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Drop">
          <apidata name="Drop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Drop" />
          <remover name="remove_Drop" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Drop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.GotFocus">
          <apidata name="GotFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotFocus" />
          <remover name="remove_GotFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.GotFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Holding">
          <apidata name="Holding" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Holding" />
          <remover name="remove_Holding" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.HoldingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Holding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyDown">
          <apidata name="KeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyDown" />
          <remover name="remove_KeyDown" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyDown">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyUp">
          <apidata name="KeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyUp" />
          <remover name="remove_KeyUp" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyUp">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.LostFocus">
          <apidata name="LostFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostFocus" />
          <remover name="remove_LostFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.LostFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationCompleted">
          <apidata name="ManipulationCompleted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationCompleted" />
          <remover name="remove_ManipulationCompleted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationCompleted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationDelta">
          <apidata name="ManipulationDelta" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationDelta" />
          <remover name="remove_ManipulationDelta" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationDelta">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationInertiaStarting">
          <apidata name="ManipulationInertiaStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationInertiaStarting" />
          <remover name="remove_ManipulationInertiaStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationInertiaStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarted">
          <apidata name="ManipulationStarted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarted" />
          <remover name="remove_ManipulationStarted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarting">
          <apidata name="ManipulationStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarting" />
          <remover name="remove_ManipulationStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCanceled">
          <apidata name="PointerCanceled" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCanceled" />
          <remover name="remove_PointerCanceled" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCanceled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCaptureLost">
          <apidata name="PointerCaptureLost" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCaptureLost" />
          <remover name="remove_PointerCaptureLost" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCaptureLost">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerEntered">
          <apidata name="PointerEntered" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerEntered" />
          <remover name="remove_PointerEntered" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerEntered">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerExited">
          <apidata name="PointerExited" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerExited" />
          <remover name="remove_PointerExited" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerExited">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerMoved">
          <apidata name="PointerMoved" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerMoved" />
          <remover name="remove_PointerMoved" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerMoved">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerPressed">
          <apidata name="PointerPressed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerPressed" />
          <remover name="remove_PointerPressed" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerPressed">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerReleased">
          <apidata name="PointerReleased" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerReleased" />
          <remover name="remove_PointerReleased" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerReleased">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerWheelChanged">
          <apidata name="PointerWheelChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerWheelChanged" />
          <remover name="remove_PointerWheelChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerWheelChanged">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.RightTapped">
          <apidata name="RightTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_RightTapped" />
          <remover name="remove_RightTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.RightTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.RightTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Tapped">
          <apidata name="Tapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Tapped" />
          <remover name="remove_Tapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.TappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Tapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ReadLocalValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetAnimationBaseValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.DependencyObject.Dispatcher">
          <apidata name="Dispatcher" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Dispatcher" />
          <returns>
            <type api="T:Windows.UI.Core.CoreDispatcher" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IDependencyObject.Dispatcher">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
      </containers>
    </api>
    <api id="M:AppStore.SearchPage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.SearchPage._contentLoaded">
      <apidata name="_contentLoaded" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.SearchPage.About_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="About_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.SearchPage.appHolding">
      <apidata name="appHolding" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Models.Apps" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.SearchPage.btnMyApps">
      <apidata name="btnMyApps" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.AppBarButton" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.SearchPage.Categories_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Categories_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.SearchPage.Connect(System.Int32,System.Object)">
      <apidata name="Connect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="connectionId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
          <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.SearchPage.ContentRoot">
      <apidata name="ContentRoot" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Grid" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.SearchPage.defaultViewModel">
      <apidata name="defaultViewModel" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.SearchPage.DefaultViewModel">
      <apidata name="DefaultViewModel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultViewModel" />
      <returns>
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.SearchPage.Feedback_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Feedback_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.SearchPage.GridFeaturedApps">
      <apidata name="GridFeaturedApps" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.GridView" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.SearchPage.GridFeaturedApps_ContentChanging(Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs)">
      <apidata name="GridFeaturedApps_ContentChanging" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:Windows.UI.Xaml.Controls.ListViewBase" ref="true" />
        </parameter>
        <parameter name="args">
          <type api="T:Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.SearchPage.GridFeaturedApps_SelectionChanged(System.Object,Windows.UI.Xaml.Controls.SelectionChangedEventArgs)">
      <apidata name="GridFeaturedApps_SelectionChanged" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Controls.SelectionChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.SearchPage.Home_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Home_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.SearchPage.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.SearchPage.InstallButton_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="InstallButton_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.SearchPage.LayoutRoot">
      <apidata name="LayoutRoot" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Grid" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.SearchPage.MyApps_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="MyApps_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.SearchPage.navigationHelper">
      <apidata name="navigationHelper" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.SearchPage.NavigationHelper">
      <apidata name="NavigationHelper" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NavigationHelper" />
      <returns>
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.SearchPage.NavigationHelper_LoadState(System.Object,AppStore.Common.LoadStateEventArgs)">
      <apidata name="NavigationHelper_LoadState" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:AppStore.Common.LoadStateEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.SearchPage.NavigationHelper_SaveState(System.Object,AppStore.Common.SaveStateEventArgs)">
      <apidata name="NavigationHelper_SaveState" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:AppStore.Common.SaveStateEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.SearchPage.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedFrom" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.SearchPage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedTo" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.SearchPage.Search">
      <apidata name="Search" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBox" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.SearchPage.Search_TextChanged(System.Object,Windows.UI.Xaml.Controls.TextChangedEventArgs)">
      <apidata name="Search_TextChanged" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Controls.TextChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.SearchPage.selectionGridApps">
      <apidata name="selectionGridApps" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.SearchPage.Settings_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Settings_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.SearchPage.ShareButton_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="ShareButton_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.SearchPage.ShowImage(Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs)">
      <apidata name="ShowImage" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:Windows.UI.Xaml.Controls.ListViewBase" ref="true" />
        </parameter>
        <parameter name="args">
          <type api="T:Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.SearchPage.StackPanel_Holding(System.Object,Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
      <apidata name="StackPanel_Holding" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.SearchPage" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.Settings">
      <apidata name="Settings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="F:AppStore.Settings.navigationHelper" />
        <element api="F:AppStore.Settings.defaultViewModel" />
        <element api="F:AppStore.Settings.LayoutRoot" />
        <element api="F:AppStore.Settings.ContentRoot" />
        <element api="F:AppStore.Settings._contentLoaded" />
        <element api="M:AppStore.Settings.#ctor" />
        <element api="M:AppStore.Settings.NavigationHelper_LoadState(System.Object,AppStore.Common.LoadStateEventArgs)" />
        <element api="M:AppStore.Settings.NavigationHelper_SaveState(System.Object,AppStore.Common.SaveStateEventArgs)" />
        <element api="M:AppStore.Settings.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.Settings.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.Settings.InitializeComponent" />
        <element api="M:AppStore.Settings.Connect(System.Int32,System.Object)" />
        <element api="P:AppStore.Settings.NavigationHelper" />
        <element api="P:AppStore.Settings.DefaultViewModel" />
        <element api="M:Windows.UI.Xaml.Controls.Page.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
          <apidata name="OnNavigatingFrom" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IPageOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.TopAppBar">
          <apidata name="TopAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TopAppBar" />
          <setter name="set_TopAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.TopAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.NavigationCacheMode">
          <apidata name="NavigationCacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_NavigationCacheMode" />
          <setter name="set_NavigationCacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Navigation.NavigationCacheMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.NavigationCacheMode">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.BottomAppBar">
          <apidata name="BottomAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BottomAppBar" />
          <setter name="set_BottomAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.BottomAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.Frame">
          <apidata name="Frame" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Frame" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.Frame" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.Frame">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.UserControl.Content">
          <apidata name="Content" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Content" />
          <setter name="set_Content" />
          <returns>
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IUserControl.Content">
              <type api="T:Windows.UI.Xaml.Controls.IUserControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.ApplyTemplate">
          <apidata name="ApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.ApplyTemplate">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.Focus(Windows.UI.Xaml.FocusState)">
          <apidata name="Focus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.Focus(Windows.UI.Xaml.FocusState)">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerEntered" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerPressed" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerMoved" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerReleased" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerExited" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCaptureLost" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCanceled" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerWheelChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
          <apidata name="OnTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
          <apidata name="OnDoubleTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
          <apidata name="OnHolding" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
          <apidata name="OnRightTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
          <apidata name="OnManipulationStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
          <apidata name="OnManipulationInertiaStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
          <apidata name="OnManipulationStarted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
          <apidata name="OnManipulationDelta" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
          <apidata name="OnManipulationCompleted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnGotFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnLostFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDrop(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDrop(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.GetTemplateChild(System.String)">
          <apidata name="GetTemplateChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="childName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlProtected.GetTemplateChild(System.String)">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStyle">
          <apidata name="FontStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStyle" />
          <setter name="set_FontStyle" />
          <returns>
            <type api="T:Windows.UI.Text.FontStyle" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStyle">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStretch">
          <apidata name="FontStretch" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStretch" />
          <setter name="set_FontStretch" />
          <returns>
            <type api="T:Windows.UI.Text.FontStretch" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStretch">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontSize">
          <apidata name="FontSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontSize" />
          <setter name="set_FontSize" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontSize">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontFamily">
          <apidata name="FontFamily" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontFamily" />
          <setter name="set_FontFamily" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.FontFamily" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontFamily">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontWeight">
          <apidata name="FontWeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontWeight" />
          <setter name="set_FontWeight" />
          <returns>
            <type api="T:Windows.UI.Text.FontWeight" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontWeight">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.CharacterSpacing">
          <apidata name="CharacterSpacing" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CharacterSpacing" />
          <setter name="set_CharacterSpacing" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.CharacterSpacing">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderThickness">
          <apidata name="BorderThickness" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderThickness" />
          <setter name="set_BorderThickness" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderThickness">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderBrush">
          <apidata name="BorderBrush" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderBrush" />
          <setter name="set_BorderBrush" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderBrush">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Background">
          <apidata name="Background" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Background" />
          <setter name="set_Background" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Background">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Foreground">
          <apidata name="Foreground" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Foreground" />
          <setter name="set_Foreground" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Foreground">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.VerticalContentAlignment">
          <apidata name="VerticalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalContentAlignment" />
          <setter name="set_VerticalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.VerticalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Template">
          <apidata name="Template" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Template" />
          <setter name="set_Template" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.ControlTemplate" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Template">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabNavigation">
          <apidata name="TabNavigation" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabNavigation" />
          <setter name="set_TabNavigation" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.KeyboardNavigationMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabNavigation">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabIndex">
          <apidata name="TabIndex" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabIndex" />
          <setter name="set_TabIndex" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabIndex">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Padding">
          <apidata name="Padding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Padding" />
          <setter name="set_Padding" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Padding">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTabStop">
          <apidata name="IsTabStop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTabStop" />
          <setter name="set_IsTabStop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsTabStop">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsEnabled">
          <apidata name="IsEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsEnabled" />
          <setter name="set_IsEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.HorizontalContentAlignment">
          <apidata name="HorizontalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalContentAlignment" />
          <setter name="set_HorizontalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.HorizontalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FocusState">
          <apidata name="FocusState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_FocusState" />
          <returns>
            <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FocusState">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.DefaultStyleKey">
          <apidata name="DefaultStyleKey" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DefaultStyleKey" />
          <setter name="set_DefaultStyleKey" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControlProtected.DefaultStyleKey">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTextScaleFactorEnabled">
          <apidata name="IsTextScaleFactorEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTextScaleFactorEnabled" />
          <setter name="set_IsTextScaleFactorEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl2.IsTextScaleFactorEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.Controls.Control.IsEnabledChanged">
          <apidata name="IsEnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsEnabledChanged" />
          <remover name="remove_IsEnabledChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.Controls.IControl.IsEnabledChanged">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.FindName(System.String)">
          <apidata name="FindName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="name" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.FindName(System.String)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="binding" in="true">
              <type api="T:Windows.UI.Xaml.Data.BindingBase" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetBindingExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Data.BindingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement2.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.MeasureOverride(Windows.Foundation.Size)">
          <apidata name="MeasureOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.MeasureOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.ArrangeOverride(Windows.Foundation.Size)">
          <apidata name="ArrangeOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="finalSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.ArrangeOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.OnApplyTemplate">
          <apidata name="OnApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.OnApplyTemplate">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GoToElementStateCore(System.String,System.Boolean)">
          <apidata name="GoToElementStateCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="stateName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="useTransitions" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides2.GoToElementStateCore(System.String,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Margin">
          <apidata name="Margin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Margin" />
          <setter name="set_Margin" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Margin">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Language">
          <apidata name="Language" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Language" />
          <setter name="set_Language" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Language">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.HorizontalAlignment">
          <apidata name="HorizontalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalAlignment" />
          <setter name="set_HorizontalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.HorizontalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.FlowDirection">
          <apidata name="FlowDirection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FlowDirection" />
          <setter name="set_FlowDirection" />
          <returns>
            <type api="T:Windows.UI.Xaml.FlowDirection" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.FlowDirection">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.DataContext">
          <apidata name="DataContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DataContext" />
          <setter name="set_DataContext" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.DataContext">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.VerticalAlignment">
          <apidata name="VerticalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalAlignment" />
          <setter name="set_VerticalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.VerticalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxWidth">
          <apidata name="MaxWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxWidth" />
          <setter name="set_MaxWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxHeight">
          <apidata name="MaxHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxHeight" />
          <setter name="set_MaxHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Height">
          <apidata name="Height" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Height" />
          <setter name="set_Height" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Height">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinHeight">
          <apidata name="MinHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinHeight" />
          <setter name="set_MinHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Width">
          <apidata name="Width" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Width" />
          <setter name="set_Width" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Width">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Tag">
          <apidata name="Tag" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Tag" />
          <setter name="set_Tag" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Tag">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Style">
          <apidata name="Style" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Style" />
          <setter name="set_Style" />
          <returns>
            <type api="T:Windows.UI.Xaml.Style" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Style">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Resources">
          <apidata name="Resources" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Resources" />
          <setter name="set_Resources" />
          <returns>
            <type api="T:Windows.UI.Xaml.ResourceDictionary" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Resources">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Name">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinWidth">
          <apidata name="MinWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinWidth" />
          <setter name="set_MinWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualWidth">
          <apidata name="ActualWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.BaseUri">
          <apidata name="BaseUri" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_BaseUri" />
          <returns>
            <type api="T:System.Uri" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.BaseUri">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Parent">
          <apidata name="Parent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Parent" />
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Parent">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Triggers">
          <apidata name="Triggers" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Triggers" />
          <returns>
            <type api="T:Windows.UI.Xaml.TriggerCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Triggers">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualHeight">
          <apidata name="ActualHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.RequestedTheme">
          <apidata name="RequestedTheme" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestedTheme" />
          <setter name="set_RequestedTheme" />
          <returns>
            <type api="T:Windows.UI.Xaml.ElementTheme" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement2.RequestedTheme">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.LayoutUpdated">
          <apidata name="LayoutUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LayoutUpdated" />
          <remover name="remove_LayoutUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Object" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.LayoutUpdated">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Loaded">
          <apidata name="Loaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Loaded" />
          <remover name="remove_Loaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Loaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.SizeChanged">
          <apidata name="SizeChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_SizeChanged" />
          <remover name="remove_SizeChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.SizeChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.SizeChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.SizeChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Unloaded">
          <apidata name="Unloaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Unloaded" />
          <remover name="remove_Unloaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Unloaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.DataContextChanged">
          <apidata name="DataContextChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DataContextChanged" />
          <remover name="remove_DataContextChanged" />
          <eventhandler>
            <type api="T:Windows.Foundation.TypedEventHandler`2" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
                <type api="T:Windows.UI.Xaml.DataContextChangedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement2.DataContextChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Measure(Windows.Foundation.Size)">
          <apidata name="Measure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Measure(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Arrange(Windows.Foundation.Rect)">
          <apidata name="Arrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="finalRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Arrange(Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="CapturePointer" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="ReleasePointerCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCaptures">
          <apidata name="ReleasePointerCaptures" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="handledEventsToo" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
          <apidata name="RemoveHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
          <apidata name="TransformToVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="visual" in="true">
              <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Media.GeneralTransform" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateMeasure">
          <apidata name="InvalidateMeasure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateMeasure">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateArrange">
          <apidata name="InvalidateArrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateArrange">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.UpdateLayout">
          <apidata name="UpdateLayout" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.UpdateLayout">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CancelDirectManipulations">
          <apidata name="CancelDirectManipulations" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement2.CancelDirectManipulations">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnCreateAutomationPeer">
          <apidata name="OnCreateAutomationPeer" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:Windows.UI.Xaml.Automation.Peers.AutomationPeer" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnCreateAutomationPeer">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnDisconnectVisualChildren">
          <apidata name="OnDisconnectVisualChildren" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnDisconnectVisualChildren">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
          <apidata name="FindSubElementsForTouchTargeting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="point" in="true">
              <type api="T:Windows.Foundation.Point" ref="false" />
            </parameter>
            <parameter name="boundingRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:Windows.Foundation.Point" ref="false" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CompositeMode">
          <apidata name="CompositeMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CompositeMode" />
          <setter name="set_CompositeMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.ElementCompositeMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement2.CompositeMode">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.ManipulationMode">
          <apidata name="ManipulationMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_ManipulationMode" />
          <setter name="set_ManipulationMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.ManipulationModes" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.ManipulationMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsTapEnabled">
          <apidata name="IsTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTapEnabled" />
          <setter name="set_IsTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsRightTapEnabled">
          <apidata name="IsRightTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsRightTapEnabled" />
          <setter name="set_IsRightTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsRightTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHoldingEnabled">
          <apidata name="IsHoldingEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHoldingEnabled" />
          <setter name="set_IsHoldingEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHoldingEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHitTestVisible">
          <apidata name="IsHitTestVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHitTestVisible" />
          <setter name="set_IsHitTestVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHitTestVisible">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsDoubleTapEnabled">
          <apidata name="IsDoubleTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsDoubleTapEnabled" />
          <setter name="set_IsDoubleTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsDoubleTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Clip">
          <apidata name="Clip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Clip" />
          <setter name="set_Clip" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.RectangleGeometry" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Clip">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CacheMode">
          <apidata name="CacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CacheMode" />
          <setter name="set_CacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.CacheMode" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.CacheMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Opacity">
          <apidata name="Opacity" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Opacity" />
          <setter name="set_Opacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Opacity">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.AllowDrop">
          <apidata name="AllowDrop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowDrop" />
          <setter name="set_AllowDrop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.AllowDrop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Visibility">
          <apidata name="Visibility" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Visibility" />
          <setter name="set_Visibility" />
          <returns>
            <type api="T:Windows.UI.Xaml.Visibility" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Visibility">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.UseLayoutRounding">
          <apidata name="UseLayoutRounding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_UseLayoutRounding" />
          <setter name="set_UseLayoutRounding" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.UseLayoutRounding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Transitions">
          <apidata name="Transitions" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Transitions" />
          <setter name="set_Transitions" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Animation.TransitionCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Transitions">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransformOrigin">
          <apidata name="RenderTransformOrigin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransformOrigin" />
          <setter name="set_RenderTransformOrigin" />
          <returns>
            <type api="T:Windows.Foundation.Point" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransformOrigin">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransform">
          <apidata name="RenderTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransform" />
          <setter name="set_RenderTransform" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Transform" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransform">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Projection">
          <apidata name="Projection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Projection" />
          <setter name="set_Projection" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Projection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Projection">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.DesiredSize">
          <apidata name="DesiredSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DesiredSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.DesiredSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.PointerCaptures">
          <apidata name="PointerCaptures" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_PointerCaptures" />
          <returns>
            <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.PointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderSize">
          <apidata name="RenderSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_RenderSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DoubleTapped">
          <apidata name="DoubleTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DoubleTapped" />
          <remover name="remove_DoubleTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DoubleTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragEnter">
          <apidata name="DragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragEnter" />
          <remover name="remove_DragEnter" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragEnter">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragLeave">
          <apidata name="DragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragLeave" />
          <remover name="remove_DragLeave" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragLeave">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragOver">
          <apidata name="DragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragOver" />
          <remover name="remove_DragOver" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragOver">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Drop">
          <apidata name="Drop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Drop" />
          <remover name="remove_Drop" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Drop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.GotFocus">
          <apidata name="GotFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotFocus" />
          <remover name="remove_GotFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.GotFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Holding">
          <apidata name="Holding" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Holding" />
          <remover name="remove_Holding" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.HoldingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Holding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyDown">
          <apidata name="KeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyDown" />
          <remover name="remove_KeyDown" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyDown">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyUp">
          <apidata name="KeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyUp" />
          <remover name="remove_KeyUp" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyUp">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.LostFocus">
          <apidata name="LostFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostFocus" />
          <remover name="remove_LostFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.LostFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationCompleted">
          <apidata name="ManipulationCompleted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationCompleted" />
          <remover name="remove_ManipulationCompleted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationCompleted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationDelta">
          <apidata name="ManipulationDelta" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationDelta" />
          <remover name="remove_ManipulationDelta" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationDelta">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationInertiaStarting">
          <apidata name="ManipulationInertiaStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationInertiaStarting" />
          <remover name="remove_ManipulationInertiaStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationInertiaStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarted">
          <apidata name="ManipulationStarted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarted" />
          <remover name="remove_ManipulationStarted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarting">
          <apidata name="ManipulationStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarting" />
          <remover name="remove_ManipulationStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCanceled">
          <apidata name="PointerCanceled" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCanceled" />
          <remover name="remove_PointerCanceled" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCanceled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCaptureLost">
          <apidata name="PointerCaptureLost" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCaptureLost" />
          <remover name="remove_PointerCaptureLost" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCaptureLost">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerEntered">
          <apidata name="PointerEntered" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerEntered" />
          <remover name="remove_PointerEntered" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerEntered">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerExited">
          <apidata name="PointerExited" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerExited" />
          <remover name="remove_PointerExited" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerExited">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerMoved">
          <apidata name="PointerMoved" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerMoved" />
          <remover name="remove_PointerMoved" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerMoved">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerPressed">
          <apidata name="PointerPressed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerPressed" />
          <remover name="remove_PointerPressed" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerPressed">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerReleased">
          <apidata name="PointerReleased" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerReleased" />
          <remover name="remove_PointerReleased" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerReleased">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerWheelChanged">
          <apidata name="PointerWheelChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerWheelChanged" />
          <remover name="remove_PointerWheelChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerWheelChanged">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.RightTapped">
          <apidata name="RightTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_RightTapped" />
          <remover name="remove_RightTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.RightTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.RightTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Tapped">
          <apidata name="Tapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Tapped" />
          <remover name="remove_Tapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.TappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Tapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ReadLocalValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetAnimationBaseValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.DependencyObject.Dispatcher">
          <apidata name="Dispatcher" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Dispatcher" />
          <returns>
            <type api="T:Windows.UI.Core.CoreDispatcher" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IDependencyObject.Dispatcher">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
      </containers>
    </api>
    <api id="M:AppStore.Settings.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.Settings" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Settings._contentLoaded">
      <apidata name="_contentLoaded" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.Settings" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Settings.Connect(System.Int32,System.Object)">
      <apidata name="Connect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="connectionId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
          <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.Settings" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Settings.ContentRoot">
      <apidata name="ContentRoot" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Grid" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.Settings" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Settings.defaultViewModel">
      <apidata name="defaultViewModel" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.Settings" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Settings.DefaultViewModel">
      <apidata name="DefaultViewModel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultViewModel" />
      <returns>
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.Settings" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Settings.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.Settings" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Settings.LayoutRoot">
      <apidata name="LayoutRoot" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Grid" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.Settings" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Settings.navigationHelper">
      <apidata name="navigationHelper" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.Settings" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Settings.NavigationHelper">
      <apidata name="NavigationHelper" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NavigationHelper" />
      <returns>
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.Settings" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Settings.NavigationHelper_LoadState(System.Object,AppStore.Common.LoadStateEventArgs)">
      <apidata name="NavigationHelper_LoadState" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:AppStore.Common.LoadStateEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.Settings" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Settings.NavigationHelper_SaveState(System.Object,AppStore.Common.SaveStateEventArgs)">
      <apidata name="NavigationHelper_SaveState" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:AppStore.Common.SaveStateEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.Settings" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Settings.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedFrom" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.Settings" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Settings.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedTo" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore" />
        <type api="T:AppStore.Settings" ref="true" />
      </containers>
    </api>
    <api id="N:AppStore.AppStore_XamlTypeInfo">
      <apidata name="AppStore.AppStore_XamlTypeInfo" group="namespace" />
      <elements>
        <element api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" />
        <element api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" />
        <element api="T:AppStore.AppStore_XamlTypeInfo.Activator" />
        <element api="T:AppStore.AppStore_XamlTypeInfo.AddToCollection" />
        <element api="T:AppStore.AppStore_XamlTypeInfo.AddToDictionary" />
        <element api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" />
        <element api="T:AppStore.AppStore_XamlTypeInfo.Getter" />
        <element api="T:AppStore.AppStore_XamlTypeInfo.Setter" />
        <element api="T:AppStore.AppStore_XamlTypeInfo.XamlMember" />
      </elements>
    </api>
    <api id="T:AppStore.AppStore_XamlTypeInfo.Activator">
      <apidata name="Activator" group="type" subgroup="delegate" />
      <typedata visibility="assembly" sealed="true" serializable="false" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
      </containers>
    </api>
    <api id="T:AppStore.AppStore_XamlTypeInfo.AddToCollection">
      <apidata name="AddToCollection" group="type" subgroup="delegate" />
      <typedata visibility="assembly" sealed="true" serializable="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
      </containers>
    </api>
    <api id="T:AppStore.AppStore_XamlTypeInfo.AddToDictionary">
      <apidata name="AddToDictionary" group="type" subgroup="delegate" />
      <typedata visibility="assembly" sealed="true" serializable="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
      </containers>
    </api>
    <api id="T:AppStore.AppStore_XamlTypeInfo.Getter">
      <apidata name="Getter" group="type" subgroup="delegate" />
      <typedata visibility="assembly" sealed="true" serializable="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
      </containers>
    </api>
    <api id="T:AppStore.AppStore_XamlTypeInfo.Setter">
      <apidata name="Setter" group="type" subgroup="delegate" />
      <typedata visibility="assembly" sealed="true" serializable="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
      </containers>
    </api>
    <api id="T:AppStore.AppStore_XamlTypeInfo.XamlMember">
      <apidata name="XamlMember" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.UI.Xaml.Markup.IXamlMember" ref="true" />
      </implements>
      <elements>
        <element api="F:AppStore.AppStore_XamlTypeInfo.XamlMember._provider" />
        <element api="F:AppStore.AppStore_XamlTypeInfo.XamlMember._name" />
        <element api="F:AppStore.AppStore_XamlTypeInfo.XamlMember._isAttachable" />
        <element api="F:AppStore.AppStore_XamlTypeInfo.XamlMember._isDependencyProperty" />
        <element api="F:AppStore.AppStore_XamlTypeInfo.XamlMember._isReadOnly" />
        <element api="F:AppStore.AppStore_XamlTypeInfo.XamlMember._typeName" />
        <element api="F:AppStore.AppStore_XamlTypeInfo.XamlMember._targetTypeName" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlMember.#ctor(AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider,System.String,System.String)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlMember.SetTargetTypeName(System.String)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlMember.SetIsAttachable" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlMember.SetIsDependencyProperty" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlMember.SetIsReadOnly" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlMember.GetValue(System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlMember.SetValue(System.Object,System.Object)" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlMember.Name" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlMember.Type" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlMember.TargetType" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlMember.IsAttachable" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlMember.IsDependencyProperty" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlMember.IsReadOnly" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlMember.Getter" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlMember.Setter" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlMember.#ctor(AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider,System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="typeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlMember" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppStore_XamlTypeInfo.XamlMember._isAttachable">
      <apidata name="_isAttachable" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlMember" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppStore_XamlTypeInfo.XamlMember._isDependencyProperty">
      <apidata name="_isDependencyProperty" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlMember" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppStore_XamlTypeInfo.XamlMember._isReadOnly">
      <apidata name="_isReadOnly" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlMember" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppStore_XamlTypeInfo.XamlMember._name">
      <apidata name="_name" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlMember" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppStore_XamlTypeInfo.XamlMember._provider">
      <apidata name="_provider" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlMember" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppStore_XamlTypeInfo.XamlMember._targetTypeName">
      <apidata name="_targetTypeName" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlMember" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppStore_XamlTypeInfo.XamlMember._typeName">
      <apidata name="_typeName" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlMember" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlMember.Getter">
      <apidata name="Getter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Getter" />
      <setter name="set_Getter" />
      <returns>
        <type api="T:AppStore.AppStore_XamlTypeInfo.Getter" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlMember" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlMember.GetValue(System.Object)">
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IXamlMember.GetValue(System.Object)">
          <type api="T:Windows.UI.Xaml.Markup.IXamlMember" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlMember" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlMember.IsAttachable">
      <apidata name="IsAttachable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsAttachable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Windows.UI.Xaml.Markup.IXamlMember.IsAttachable">
          <type api="T:Windows.UI.Xaml.Markup.IXamlMember" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlMember" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlMember.IsDependencyProperty">
      <apidata name="IsDependencyProperty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsDependencyProperty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Windows.UI.Xaml.Markup.IXamlMember.IsDependencyProperty">
          <type api="T:Windows.UI.Xaml.Markup.IXamlMember" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlMember" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlMember.IsReadOnly">
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Windows.UI.Xaml.Markup.IXamlMember.IsReadOnly">
          <type api="T:Windows.UI.Xaml.Markup.IXamlMember" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlMember" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlMember.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Windows.UI.Xaml.Markup.IXamlMember.Name">
          <type api="T:Windows.UI.Xaml.Markup.IXamlMember" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlMember" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlMember.SetIsAttachable">
      <apidata name="SetIsAttachable" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlMember" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlMember.SetIsDependencyProperty">
      <apidata name="SetIsDependencyProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlMember" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlMember.SetIsReadOnly">
      <apidata name="SetIsReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlMember" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlMember.SetTargetTypeName(System.String)">
      <apidata name="SetTargetTypeName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetTypeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlMember" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlMember.Setter">
      <apidata name="Setter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Setter" />
      <setter name="set_Setter" />
      <returns>
        <type api="T:AppStore.AppStore_XamlTypeInfo.Setter" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlMember" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlMember.SetValue(System.Object,System.Object)">
      <apidata name="SetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IXamlMember.SetValue(System.Object,System.Object)">
          <type api="T:Windows.UI.Xaml.Markup.IXamlMember" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlMember" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlMember.TargetType">
      <apidata name="TargetType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_TargetType" />
      <returns>
        <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
      </returns>
      <implements>
        <member api="P:Windows.UI.Xaml.Markup.IXamlMember.TargetType">
          <type api="T:Windows.UI.Xaml.Markup.IXamlMember" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlMember" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlMember.Type">
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
      </returns>
      <implements>
        <member api="P:Windows.UI.Xaml.Markup.IXamlMember.Type">
          <type api="T:Windows.UI.Xaml.Markup.IXamlMember" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlMember" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType">
      <apidata name="XamlSystemBaseType" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
      </implements>
      <elements>
        <element api="F:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType._fullName" />
        <element api="F:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType._underlyingType" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.#ctor(System.String,System.Type)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.GetMember(System.String)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.ActivateInstance" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.AddToMap(System.Object,System.Object,System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.AddToVector(System.Object,System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.RunInitializer" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.CreateFromString(System.String)" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.FullName" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.UnderlyingType" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.BaseType" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.ContentProperty" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.IsArray" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.IsCollection" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.IsConstructible" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.IsDictionary" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.IsMarkupExtension" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.IsBindable" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.IsReturnTypeStub" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.IsLocalType" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.ItemType" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.KeyType" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.#ctor(System.String,System.Type)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="fullName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="underlyingType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType._fullName">
      <apidata name="_fullName" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType._underlyingType">
      <apidata name="_underlyingType" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.ActivateInstance">
      <apidata name="ActivateInstance" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IXamlType.ActivateInstance">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.AddToMap(System.Object,System.Object,System.Object)">
      <apidata name="AddToMap" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IXamlType.AddToMap(System.Object,System.Object,System.Object)">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.AddToVector(System.Object,System.Object)">
      <apidata name="AddToVector" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IXamlType.AddToVector(System.Object,System.Object)">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.BaseType">
      <apidata name="BaseType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_BaseType" />
      <returns>
        <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
      </returns>
      <implements>
        <member api="P:Windows.UI.Xaml.Markup.IXamlType.BaseType">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.ContentProperty">
      <apidata name="ContentProperty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ContentProperty" />
      <returns>
        <type api="T:Windows.UI.Xaml.Markup.IXamlMember" ref="true" />
      </returns>
      <implements>
        <member api="P:Windows.UI.Xaml.Markup.IXamlType.ContentProperty">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.CreateFromString(System.String)">
      <apidata name="CreateFromString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IXamlType.CreateFromString(System.String)">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.FullName">
      <apidata name="FullName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_FullName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Windows.UI.Xaml.Markup.IXamlType.FullName">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.GetMember(System.String)">
      <apidata name="GetMember" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.UI.Xaml.Markup.IXamlMember" ref="true" />
      </returns>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IXamlType.GetMember(System.String)">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.IsArray">
      <apidata name="IsArray" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsArray" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Windows.UI.Xaml.Markup.IXamlType.IsArray">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.IsBindable">
      <apidata name="IsBindable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsBindable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Windows.UI.Xaml.Markup.IXamlType.IsBindable">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.IsCollection">
      <apidata name="IsCollection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsCollection" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Windows.UI.Xaml.Markup.IXamlType.IsCollection">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.IsConstructible">
      <apidata name="IsConstructible" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsConstructible" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Windows.UI.Xaml.Markup.IXamlType.IsConstructible">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.IsDictionary">
      <apidata name="IsDictionary" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsDictionary" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Windows.UI.Xaml.Markup.IXamlType.IsDictionary">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.IsLocalType">
      <apidata name="IsLocalType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsLocalType" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.IsMarkupExtension">
      <apidata name="IsMarkupExtension" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsMarkupExtension" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Windows.UI.Xaml.Markup.IXamlType.IsMarkupExtension">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.IsReturnTypeStub">
      <apidata name="IsReturnTypeStub" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsReturnTypeStub" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.ItemType">
      <apidata name="ItemType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ItemType" />
      <returns>
        <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
      </returns>
      <implements>
        <member api="P:Windows.UI.Xaml.Markup.IXamlType.ItemType">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.KeyType">
      <apidata name="KeyType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_KeyType" />
      <returns>
        <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
      </returns>
      <implements>
        <member api="P:Windows.UI.Xaml.Markup.IXamlType.KeyType">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.RunInitializer">
      <apidata name="RunInitializer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IXamlType.RunInitializer">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.UnderlyingType">
      <apidata name="UnderlyingType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_UnderlyingType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider">
      <apidata name="XamlTypeInfoProvider" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider._xamlTypeCacheByName" />
        <element api="F:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider._xamlTypeCacheByType" />
        <element api="F:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider._xamlMembers" />
        <element api="F:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider._typeNameTable" />
        <element api="F:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider._typeTable" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.GetXamlTypeByType(System.Type)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.GetXamlTypeByName(System.String)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.GetMemberByLongName(System.String)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.InitTypeTables" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.LookupTypeIndexByName(System.String)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.LookupTypeIndexByType(System.Type)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_0_AppDetailsPage" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_5_ObservableDictionary" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_8_BlankPage1" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_9_CategoriesPage" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_10_CategoryPage" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_11_MainPage" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_12_MyAppsPage" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_13_SearchPage" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_14_Settings" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_15_FlashCardPage" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_16_InfoDetailPage" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_17_InfoPage" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_18_QuizPage" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_19_ScorePage" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_20_SpellingsPage" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_21_StartPage" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_22_WordInfoPage" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.MapAdd_5_ObservableDictionary(System.Object,System.Object,System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.CreateXamlType(System.Int32)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_0_AppDetailsPage_NavigationHelper(System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_1_AppDetailsPage_DefaultViewModel(System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_2_CategoriesPage_NavigationHelper(System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_3_CategoriesPage_DefaultViewModel(System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_4_CategoryPage_NavigationHelper(System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_5_CategoryPage_DefaultViewModel(System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_6_MyAppsPage_NavigationHelper(System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_7_MyAppsPage_DefaultViewModel(System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_8_SearchPage_NavigationHelper(System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_9_SearchPage_DefaultViewModel(System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_10_Settings_NavigationHelper(System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_11_Settings_DefaultViewModel(System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_12_FlashCardPage_NavigationHelper(System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_13_FlashCardPage_DefaultViewModel(System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_14_InfoDetailPage_NavigationHelper(System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_15_InfoDetailPage_DefaultViewModel(System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_16_InfoPage_NavigationHelper(System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_17_InfoPage_DefaultViewModel(System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_18_QuizPage_NavigationHelper(System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_19_QuizPage_DefaultViewModel(System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_20_ScorePage_NavigationHelper(System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_21_ScorePage_DefaultViewModel(System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_22_SpellingsPage_NavigationHelper(System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_23_SpellingsPage_DefaultViewModel(System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_24_StartPage_NavigationHelper(System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_25_StartPage_DefaultViewModel(System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_26_WordInfoPage_NavigationHelper(System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_27_WordInfoPage_DefaultViewModel(System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.CreateXamlMember(System.String)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.#ctor" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider._typeNameTable">
      <apidata name="_typeNameTable" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider._typeTable">
      <apidata name="_typeTable" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Type" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider._xamlMembers">
      <apidata name="_xamlMembers" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:Windows.UI.Xaml.Markup.IXamlMember" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider._xamlTypeCacheByName">
      <apidata name="_xamlTypeCacheByName" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider._xamlTypeCacheByType">
      <apidata name="_xamlTypeCacheByType" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
            <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_0_AppDetailsPage">
      <apidata name="Activate_0_AppDetailsPage" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_10_CategoryPage">
      <apidata name="Activate_10_CategoryPage" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_11_MainPage">
      <apidata name="Activate_11_MainPage" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_12_MyAppsPage">
      <apidata name="Activate_12_MyAppsPage" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_13_SearchPage">
      <apidata name="Activate_13_SearchPage" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_14_Settings">
      <apidata name="Activate_14_Settings" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_15_FlashCardPage">
      <apidata name="Activate_15_FlashCardPage" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_16_InfoDetailPage">
      <apidata name="Activate_16_InfoDetailPage" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_17_InfoPage">
      <apidata name="Activate_17_InfoPage" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_18_QuizPage">
      <apidata name="Activate_18_QuizPage" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_19_ScorePage">
      <apidata name="Activate_19_ScorePage" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_20_SpellingsPage">
      <apidata name="Activate_20_SpellingsPage" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_21_StartPage">
      <apidata name="Activate_21_StartPage" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_22_WordInfoPage">
      <apidata name="Activate_22_WordInfoPage" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_5_ObservableDictionary">
      <apidata name="Activate_5_ObservableDictionary" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_8_BlankPage1">
      <apidata name="Activate_8_BlankPage1" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.Activate_9_CategoriesPage">
      <apidata name="Activate_9_CategoriesPage" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.CreateXamlMember(System.String)">
      <apidata name="CreateXamlMember" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="longMemberName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.UI.Xaml.Markup.IXamlMember" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.CreateXamlType(System.Int32)">
      <apidata name="CreateXamlType" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="typeIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_0_AppDetailsPage_NavigationHelper(System.Object)">
      <apidata name="get_0_AppDetailsPage_NavigationHelper" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_1_AppDetailsPage_DefaultViewModel(System.Object)">
      <apidata name="get_1_AppDetailsPage_DefaultViewModel" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_10_Settings_NavigationHelper(System.Object)">
      <apidata name="get_10_Settings_NavigationHelper" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_11_Settings_DefaultViewModel(System.Object)">
      <apidata name="get_11_Settings_DefaultViewModel" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_12_FlashCardPage_NavigationHelper(System.Object)">
      <apidata name="get_12_FlashCardPage_NavigationHelper" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_13_FlashCardPage_DefaultViewModel(System.Object)">
      <apidata name="get_13_FlashCardPage_DefaultViewModel" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_14_InfoDetailPage_NavigationHelper(System.Object)">
      <apidata name="get_14_InfoDetailPage_NavigationHelper" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_15_InfoDetailPage_DefaultViewModel(System.Object)">
      <apidata name="get_15_InfoDetailPage_DefaultViewModel" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_16_InfoPage_NavigationHelper(System.Object)">
      <apidata name="get_16_InfoPage_NavigationHelper" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_17_InfoPage_DefaultViewModel(System.Object)">
      <apidata name="get_17_InfoPage_DefaultViewModel" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_18_QuizPage_NavigationHelper(System.Object)">
      <apidata name="get_18_QuizPage_NavigationHelper" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_19_QuizPage_DefaultViewModel(System.Object)">
      <apidata name="get_19_QuizPage_DefaultViewModel" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_2_CategoriesPage_NavigationHelper(System.Object)">
      <apidata name="get_2_CategoriesPage_NavigationHelper" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_20_ScorePage_NavigationHelper(System.Object)">
      <apidata name="get_20_ScorePage_NavigationHelper" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_21_ScorePage_DefaultViewModel(System.Object)">
      <apidata name="get_21_ScorePage_DefaultViewModel" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_22_SpellingsPage_NavigationHelper(System.Object)">
      <apidata name="get_22_SpellingsPage_NavigationHelper" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_23_SpellingsPage_DefaultViewModel(System.Object)">
      <apidata name="get_23_SpellingsPage_DefaultViewModel" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_24_StartPage_NavigationHelper(System.Object)">
      <apidata name="get_24_StartPage_NavigationHelper" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_25_StartPage_DefaultViewModel(System.Object)">
      <apidata name="get_25_StartPage_DefaultViewModel" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_26_WordInfoPage_NavigationHelper(System.Object)">
      <apidata name="get_26_WordInfoPage_NavigationHelper" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_27_WordInfoPage_DefaultViewModel(System.Object)">
      <apidata name="get_27_WordInfoPage_DefaultViewModel" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_3_CategoriesPage_DefaultViewModel(System.Object)">
      <apidata name="get_3_CategoriesPage_DefaultViewModel" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_4_CategoryPage_NavigationHelper(System.Object)">
      <apidata name="get_4_CategoryPage_NavigationHelper" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_5_CategoryPage_DefaultViewModel(System.Object)">
      <apidata name="get_5_CategoryPage_DefaultViewModel" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_6_MyAppsPage_NavigationHelper(System.Object)">
      <apidata name="get_6_MyAppsPage_NavigationHelper" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_7_MyAppsPage_DefaultViewModel(System.Object)">
      <apidata name="get_7_MyAppsPage_DefaultViewModel" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_8_SearchPage_NavigationHelper(System.Object)">
      <apidata name="get_8_SearchPage_NavigationHelper" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.get_9_SearchPage_DefaultViewModel(System.Object)">
      <apidata name="get_9_SearchPage_DefaultViewModel" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.GetMemberByLongName(System.String)">
      <apidata name="GetMemberByLongName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="longMemberName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.UI.Xaml.Markup.IXamlMember" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.GetXamlTypeByName(System.String)">
      <apidata name="GetXamlTypeByName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="typeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.GetXamlTypeByType(System.Type)">
      <apidata name="GetXamlTypeByType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.InitTypeTables">
      <apidata name="InitTypeTables" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.LookupTypeIndexByName(System.String)">
      <apidata name="LookupTypeIndexByName" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="typeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.LookupTypeIndexByType(System.Type)">
      <apidata name="LookupTypeIndexByType" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider.MapAdd_5_ObservableDictionary(System.Object,System.Object,System.Object)">
      <apidata name="MapAdd_5_ObservableDictionary" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.AppStore_XamlTypeInfo.XamlUserType">
      <apidata name="XamlUserType" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <family>
        <ancestors>
          <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:AppStore.AppStore_XamlTypeInfo.XamlUserType._provider" />
        <element api="F:AppStore.AppStore_XamlTypeInfo.XamlUserType._baseType" />
        <element api="F:AppStore.AppStore_XamlTypeInfo.XamlUserType._isArray" />
        <element api="F:AppStore.AppStore_XamlTypeInfo.XamlUserType._isMarkupExtension" />
        <element api="F:AppStore.AppStore_XamlTypeInfo.XamlUserType._isBindable" />
        <element api="F:AppStore.AppStore_XamlTypeInfo.XamlUserType._isReturnTypeStub" />
        <element api="F:AppStore.AppStore_XamlTypeInfo.XamlUserType._isLocalType" />
        <element api="F:AppStore.AppStore_XamlTypeInfo.XamlUserType._contentPropertyName" />
        <element api="F:AppStore.AppStore_XamlTypeInfo.XamlUserType._itemTypeName" />
        <element api="F:AppStore.AppStore_XamlTypeInfo.XamlUserType._keyTypeName" />
        <element api="F:AppStore.AppStore_XamlTypeInfo.XamlUserType._memberNames" />
        <element api="F:AppStore.AppStore_XamlTypeInfo.XamlUserType._enumValues" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.#ctor(AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider,System.String,System.Type,Windows.UI.Xaml.Markup.IXamlType)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.GetMember(System.String)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.ActivateInstance" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.AddToMap(System.Object,System.Object,System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.AddToVector(System.Object,System.Object)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.RunInitializer" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.CreateFromString(System.String)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.SetContentPropertyName(System.String)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.SetIsArray" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.SetIsMarkupExtension" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.SetIsBindable" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.SetIsReturnTypeStub" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.SetIsLocalType" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.SetItemTypeName(System.String)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.SetKeyTypeName(System.String)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.AddMemberName(System.String)" />
        <element api="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.AddEnumValue(System.String,System.Object)" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlUserType.BaseType" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlUserType.IsArray" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlUserType.IsCollection" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlUserType.IsConstructible" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlUserType.IsDictionary" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlUserType.IsMarkupExtension" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlUserType.IsBindable" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlUserType.IsReturnTypeStub" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlUserType.IsLocalType" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlUserType.ContentProperty" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlUserType.ItemType" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlUserType.KeyType" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlUserType.Activator" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlUserType.CollectionAdd" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlUserType.DictionaryAdd" />
        <element api="F:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType._fullName" />
        <element api="F:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType._underlyingType" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.FullName" />
        <element api="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.UnderlyingType" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.#ctor(AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider,System.String,System.Type,Windows.UI.Xaml.Markup.IXamlType)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
        </parameter>
        <parameter name="fullName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="fullType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="baseType">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppStore_XamlTypeInfo.XamlUserType._baseType">
      <apidata name="_baseType" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppStore_XamlTypeInfo.XamlUserType._contentPropertyName">
      <apidata name="_contentPropertyName" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppStore_XamlTypeInfo.XamlUserType._enumValues">
      <apidata name="_enumValues" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppStore_XamlTypeInfo.XamlUserType._isArray">
      <apidata name="_isArray" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppStore_XamlTypeInfo.XamlUserType._isBindable">
      <apidata name="_isBindable" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppStore_XamlTypeInfo.XamlUserType._isLocalType">
      <apidata name="_isLocalType" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppStore_XamlTypeInfo.XamlUserType._isMarkupExtension">
      <apidata name="_isMarkupExtension" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppStore_XamlTypeInfo.XamlUserType._isReturnTypeStub">
      <apidata name="_isReturnTypeStub" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppStore_XamlTypeInfo.XamlUserType._itemTypeName">
      <apidata name="_itemTypeName" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppStore_XamlTypeInfo.XamlUserType._keyTypeName">
      <apidata name="_keyTypeName" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppStore_XamlTypeInfo.XamlUserType._memberNames">
      <apidata name="_memberNames" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.AppStore_XamlTypeInfo.XamlUserType._provider">
      <apidata name="_provider" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlTypeInfoProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.ActivateInstance">
      <apidata name="ActivateInstance" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.ActivateInstance">
          <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IXamlType.ActivateInstance">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlUserType.Activator">
      <apidata name="Activator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Activator" />
      <setter name="set_Activator" />
      <returns>
        <type api="T:AppStore.AppStore_XamlTypeInfo.Activator" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.AddEnumValue(System.String,System.Object)">
      <apidata name="AddEnumValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.AddMemberName(System.String)">
      <apidata name="AddMemberName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="shortName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.AddToMap(System.Object,System.Object,System.Object)">
      <apidata name="AddToMap" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.AddToMap(System.Object,System.Object,System.Object)">
          <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IXamlType.AddToMap(System.Object,System.Object,System.Object)">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.AddToVector(System.Object,System.Object)">
      <apidata name="AddToVector" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.AddToVector(System.Object,System.Object)">
          <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IXamlType.AddToVector(System.Object,System.Object)">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlUserType.BaseType">
      <apidata name="BaseType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.BaseType">
          <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_BaseType" />
      <returns>
        <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
      </returns>
      <implements>
        <member api="P:Windows.UI.Xaml.Markup.IXamlType.BaseType">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlUserType.CollectionAdd">
      <apidata name="CollectionAdd" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CollectionAdd" />
      <setter name="set_CollectionAdd" />
      <returns>
        <type api="T:AppStore.AppStore_XamlTypeInfo.AddToCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlUserType.ContentProperty">
      <apidata name="ContentProperty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.ContentProperty">
          <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ContentProperty" />
      <returns>
        <type api="T:Windows.UI.Xaml.Markup.IXamlMember" ref="true" />
      </returns>
      <implements>
        <member api="P:Windows.UI.Xaml.Markup.IXamlType.ContentProperty">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.CreateFromString(System.String)">
      <apidata name="CreateFromString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.CreateFromString(System.String)">
          <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IXamlType.CreateFromString(System.String)">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlUserType.DictionaryAdd">
      <apidata name="DictionaryAdd" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DictionaryAdd" />
      <setter name="set_DictionaryAdd" />
      <returns>
        <type api="T:AppStore.AppStore_XamlTypeInfo.AddToDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.GetMember(System.String)">
      <apidata name="GetMember" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.GetMember(System.String)">
          <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.UI.Xaml.Markup.IXamlMember" ref="true" />
      </returns>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IXamlType.GetMember(System.String)">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlUserType.IsArray">
      <apidata name="IsArray" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.IsArray">
          <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsArray" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Windows.UI.Xaml.Markup.IXamlType.IsArray">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlUserType.IsBindable">
      <apidata name="IsBindable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.IsBindable">
          <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsBindable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Windows.UI.Xaml.Markup.IXamlType.IsBindable">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlUserType.IsCollection">
      <apidata name="IsCollection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.IsCollection">
          <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsCollection" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Windows.UI.Xaml.Markup.IXamlType.IsCollection">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlUserType.IsConstructible">
      <apidata name="IsConstructible" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.IsConstructible">
          <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsConstructible" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Windows.UI.Xaml.Markup.IXamlType.IsConstructible">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlUserType.IsDictionary">
      <apidata name="IsDictionary" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.IsDictionary">
          <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsDictionary" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Windows.UI.Xaml.Markup.IXamlType.IsDictionary">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlUserType.IsLocalType">
      <apidata name="IsLocalType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.IsLocalType">
          <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsLocalType" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlUserType.IsMarkupExtension">
      <apidata name="IsMarkupExtension" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.IsMarkupExtension">
          <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsMarkupExtension" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Windows.UI.Xaml.Markup.IXamlType.IsMarkupExtension">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlUserType.IsReturnTypeStub">
      <apidata name="IsReturnTypeStub" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.IsReturnTypeStub">
          <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsReturnTypeStub" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlUserType.ItemType">
      <apidata name="ItemType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.ItemType">
          <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ItemType" />
      <returns>
        <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
      </returns>
      <implements>
        <member api="P:Windows.UI.Xaml.Markup.IXamlType.ItemType">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.AppStore_XamlTypeInfo.XamlUserType.KeyType">
      <apidata name="KeyType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.KeyType">
          <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_KeyType" />
      <returns>
        <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
      </returns>
      <implements>
        <member api="P:Windows.UI.Xaml.Markup.IXamlType.KeyType">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.RunInitializer">
      <apidata name="RunInitializer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType.RunInitializer">
          <type api="T:AppStore.AppStore_XamlTypeInfo.XamlSystemBaseType" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IXamlType.RunInitializer">
          <type api="T:Windows.UI.Xaml.Markup.IXamlType" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.SetContentPropertyName(System.String)">
      <apidata name="SetContentPropertyName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="contentPropertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.SetIsArray">
      <apidata name="SetIsArray" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.SetIsBindable">
      <apidata name="SetIsBindable" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.SetIsLocalType">
      <apidata name="SetIsLocalType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.SetIsMarkupExtension">
      <apidata name="SetIsMarkupExtension" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.SetIsReturnTypeStub">
      <apidata name="SetIsReturnTypeStub" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.SetItemTypeName(System.String)">
      <apidata name="SetItemTypeName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="itemTypeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.AppStore_XamlTypeInfo.XamlUserType.SetKeyTypeName(System.String)">
      <apidata name="SetKeyTypeName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="keyTypeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.AppStore_XamlTypeInfo" />
        <type api="T:AppStore.AppStore_XamlTypeInfo.XamlUserType" ref="true" />
      </containers>
    </api>
    <api id="N:AppStore.Common">
      <apidata name="AppStore.Common" group="namespace" />
      <elements>
        <element api="T:AppStore.Common.AppCommon" />
        <element api="T:AppStore.Common.AppReader" />
        <element api="T:AppStore.Common.NavigationHelper" />
        <element api="T:AppStore.Common.LoadStateEventHandler" />
        <element api="T:AppStore.Common.SaveStateEventHandler" />
        <element api="T:AppStore.Common.LoadStateEventArgs" />
        <element api="T:AppStore.Common.SaveStateEventArgs" />
        <element api="T:AppStore.Common.ObservableDictionary" />
        <element api="T:AppStore.Common.ObservableDictionary.ObservableDictionaryChangedEventArgs" />
        <element api="T:AppStore.Common.RelayCommand" />
        <element api="T:AppStore.Common.SuspensionManager" />
        <element api="T:AppStore.Common.SuspensionManagerException" />
      </elements>
    </api>
    <api id="T:AppStore.Common.AppCommon">
      <apidata name="AppCommon" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:AppStore.Common.AppCommon.ComposeEmail" />
        <element api="M:AppStore.Common.AppCommon.RegisterForShare" />
        <element api="M:AppStore.Common.AppCommon.ShareTextHandler(Windows.ApplicationModel.DataTransfer.DataTransferManager,Windows.ApplicationModel.DataTransfer.DataRequestedEventArgs)" />
        <element api="M:AppStore.Common.AppCommon.#ctor" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
      </containers>
    </api>
    <api id="M:AppStore.Common.AppCommon.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.AppCommon" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.AppCommon.ComposeEmail">
      <apidata name="ComposeEmail" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.AppCommon" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.AppCommon.RegisterForShare">
      <apidata name="RegisterForShare" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.AppCommon" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.AppCommon.ShareTextHandler(Windows.ApplicationModel.DataTransfer.DataTransferManager,Windows.ApplicationModel.DataTransfer.DataRequestedEventArgs)">
      <apidata name="ShareTextHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:Windows.ApplicationModel.DataTransfer.DataTransferManager" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.ApplicationModel.DataTransfer.DataRequestedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.AppCommon" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.Common.AppReader">
      <apidata name="AppReader" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:AppStore.Common.AppReader.readInfoFile(System.String)" />
        <element api="M:AppStore.Common.AppReader.readQuizFile(System.String)" />
        <element api="M:AppStore.Common.AppReader.readSpellingsFile(System.String)" />
        <element api="M:AppStore.Common.AppReader.readFlashFile(System.String)" />
        <element api="M:AppStore.Common.AppReader.#ctor" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
      </containers>
    </api>
    <api id="M:AppStore.Common.AppReader.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.AppReader" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.AppReader.readFlashFile(System.String)">
      <apidata name="readFlashFile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.AppReader" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.AppReader.readInfoFile(System.String)">
      <apidata name="readInfoFile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.AppReader" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.AppReader.readQuizFile(System.String)">
      <apidata name="readQuizFile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.AppReader" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.AppReader.readSpellingsFile(System.String)">
      <apidata name="readSpellingsFile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.AppReader" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.Common.LoadStateEventArgs">
      <apidata name="LoadStateEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:AppStore.Common.LoadStateEventArgs.#ctor(System.Object,System.Collections.Generic.Dictionary{System.String,System.Object})" />
        <element api="P:AppStore.Common.LoadStateEventArgs.NavigationParameter" />
        <element api="P:AppStore.Common.LoadStateEventArgs.PageState" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
      </containers>
    </api>
    <api id="M:AppStore.Common.LoadStateEventArgs.#ctor(System.Object,System.Collections.Generic.Dictionary{System.String,System.Object})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="navigationParameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="pageState">
          <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.LoadStateEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Common.LoadStateEventArgs.NavigationParameter">
      <apidata name="NavigationParameter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_NavigationParameter" />
      <setter name="set_NavigationParameter" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.LoadStateEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Common.LoadStateEventArgs.PageState">
      <apidata name="PageState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_PageState" />
      <setter name="set_PageState" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.LoadStateEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.Common.LoadStateEventHandler">
      <apidata name="LoadStateEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:AppStore.Common.LoadStateEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
      </containers>
    </api>
    <api id="T:AppStore.Common.NavigationHelper">
      <apidata name="NavigationHelper" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:AppStore.Common.NavigationHelper._goBackCommand" />
        <element api="F:AppStore.Common.NavigationHelper._goForwardCommand" />
        <element api="F:AppStore.Common.NavigationHelper._pageKey" />
        <element api="M:AppStore.Common.NavigationHelper.#ctor(Windows.UI.Xaml.Controls.Page)" />
        <element api="M:AppStore.Common.NavigationHelper.CanGoBack" />
        <element api="M:AppStore.Common.NavigationHelper.CanGoForward" />
        <element api="M:AppStore.Common.NavigationHelper.GoBack" />
        <element api="M:AppStore.Common.NavigationHelper.GoForward" />
        <element api="M:AppStore.Common.NavigationHelper.HardwareButtons_BackPressed(System.Object,Windows.Phone.UI.Input.BackPressedEventArgs)" />
        <element api="M:AppStore.Common.NavigationHelper.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.Common.NavigationHelper.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="P:AppStore.Common.NavigationHelper.Page" />
        <element api="P:AppStore.Common.NavigationHelper.Frame" />
        <element api="P:AppStore.Common.NavigationHelper.GoBackCommand" />
        <element api="P:AppStore.Common.NavigationHelper.GoForwardCommand" />
        <element api="E:AppStore.Common.NavigationHelper.LoadState" />
        <element api="E:AppStore.Common.NavigationHelper.SaveState" />
        <element api="M:Windows.UI.Xaml.DependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ReadLocalValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetAnimationBaseValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.DependencyObject.Dispatcher">
          <apidata name="Dispatcher" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Dispatcher" />
          <returns>
            <type api="T:Windows.UI.Core.CoreDispatcher" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IDependencyObject.Dispatcher">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
      </containers>
    </api>
    <api id="M:AppStore.Common.NavigationHelper.#ctor(Windows.UI.Xaml.Controls.Page)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="page">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Common.NavigationHelper._goBackCommand">
      <apidata name="_goBackCommand" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Common.RelayCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Common.NavigationHelper._goForwardCommand">
      <apidata name="_goForwardCommand" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Common.RelayCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Common.NavigationHelper._pageKey">
      <apidata name="_pageKey" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.NavigationHelper.CanGoBack">
      <apidata name="CanGoBack" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.NavigationHelper.CanGoForward">
      <apidata name="CanGoForward" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Common.NavigationHelper.Frame">
      <apidata name="Frame" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Frame" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Frame" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.NavigationHelper.GoBack">
      <apidata name="GoBack" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Common.NavigationHelper.GoBackCommand">
      <apidata name="GoBackCommand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_GoBackCommand" />
      <setter name="set_GoBackCommand" />
      <returns>
        <type api="T:AppStore.Common.RelayCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.NavigationHelper.GoForward">
      <apidata name="GoForward" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Common.NavigationHelper.GoForwardCommand">
      <apidata name="GoForwardCommand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GoForwardCommand" />
      <returns>
        <type api="T:AppStore.Common.RelayCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.NavigationHelper.HardwareButtons_BackPressed(System.Object,Windows.Phone.UI.Input.BackPressedEventArgs)">
      <apidata name="HardwareButtons_BackPressed" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.Phone.UI.Input.BackPressedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </containers>
    </api>
    <api id="E:AppStore.Common.NavigationHelper.LoadState">
      <apidata name="LoadState" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_LoadState" />
      <remover name="remove_LoadState" />
      <eventhandler>
        <type api="T:AppStore.Common.LoadStateEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:AppStore.Common.LoadStateEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.NavigationHelper.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedFrom" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.NavigationHelper.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Common.NavigationHelper.Page">
      <apidata name="Page" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Page" />
      <setter name="set_Page" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </containers>
    </api>
    <api id="E:AppStore.Common.NavigationHelper.SaveState">
      <apidata name="SaveState" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SaveState" />
      <remover name="remove_SaveState" />
      <eventhandler>
        <type api="T:AppStore.Common.SaveStateEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:AppStore.Common.SaveStateEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.Common.ObservableDictionary">
      <apidata name="ObservableDictionary" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.Foundation.Collections.IObservableMap`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="F:AppStore.Common.ObservableDictionary._dictionary" />
        <element api="M:AppStore.Common.ObservableDictionary.InvokeMapChanged(Windows.Foundation.Collections.CollectionChange,System.String)" />
        <element api="M:AppStore.Common.ObservableDictionary.Add(System.String,System.Object)" />
        <element api="M:AppStore.Common.ObservableDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})" />
        <element api="M:AppStore.Common.ObservableDictionary.Remove(System.String)" />
        <element api="M:AppStore.Common.ObservableDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})" />
        <element api="M:AppStore.Common.ObservableDictionary.Clear" />
        <element api="M:AppStore.Common.ObservableDictionary.ContainsKey(System.String)" />
        <element api="M:AppStore.Common.ObservableDictionary.TryGetValue(System.String,System.Object@)" />
        <element api="M:AppStore.Common.ObservableDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})" />
        <element api="M:AppStore.Common.ObservableDictionary.GetEnumerator" />
        <element api="M:AppStore.Common.ObservableDictionary.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:AppStore.Common.ObservableDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)" />
        <element api="M:AppStore.Common.ObservableDictionary.#ctor" />
        <element api="P:AppStore.Common.ObservableDictionary.Item(System.String)" />
        <element api="P:AppStore.Common.ObservableDictionary.Keys" />
        <element api="P:AppStore.Common.ObservableDictionary.Values" />
        <element api="P:AppStore.Common.ObservableDictionary.Count" />
        <element api="P:AppStore.Common.ObservableDictionary.IsReadOnly" />
        <element api="E:AppStore.Common.ObservableDictionary.MapChanged" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
      </containers>
    </api>
    <api id="M:AppStore.Common.ObservableDictionary.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Common.ObservableDictionary._dictionary">
      <apidata name="_dictionary" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.ObservableDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.ObservableDictionary.Add(System.String,System.Object)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.ObservableDictionary.Clear">
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Clear">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.ObservableDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.ObservableDictionary.ContainsKey(System.String)">
      <apidata name="ContainsKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.ObservableDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="arrayIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Common.ObservableDictionary.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.Count">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.ObservableDictionary.GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.ObservableDictionary.InvokeMapChanged(Windows.Foundation.Collections.CollectionChange,System.String)">
      <apidata name="InvokeMapChanged" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="change">
          <type api="T:Windows.Foundation.Collections.CollectionChange" ref="false" />
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Common.ObservableDictionary.IsReadOnly">
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Common.ObservableDictionary.Item(System.String)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Common.ObservableDictionary.Keys">
      <apidata name="Keys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Keys" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IDictionary`2.Keys">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </containers>
    </api>
    <api id="E:AppStore.Common.ObservableDictionary.MapChanged">
      <apidata name="MapChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_MapChanged" />
      <remover name="remove_MapChanged" />
      <eventhandler>
        <type api="T:Windows.Foundation.Collections.MapChangedEventHandler`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.ObservableDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.ObservableDictionary.Remove(System.String)">
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.ObservableDictionary.System#Collections#IEnumerable#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.ObservableDictionary.TryGetValue(System.String,System.Object@)">
      <apidata name="TryGetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value" out="true">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Common.ObservableDictionary.Values">
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Values" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IDictionary`2.Values">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.Common.ObservableDictionary.ObservableDictionaryChangedEventArgs">
      <apidata name="ObservableDictionaryChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="private" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.Foundation.Collections.IMapChangedEventArgs`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:AppStore.Common.ObservableDictionary.ObservableDictionaryChangedEventArgs.#ctor(Windows.Foundation.Collections.CollectionChange,System.String)" />
        <element api="P:AppStore.Common.ObservableDictionary.ObservableDictionaryChangedEventArgs.CollectionChange" />
        <element api="P:AppStore.Common.ObservableDictionary.ObservableDictionaryChangedEventArgs.Key" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.ObservableDictionary.ObservableDictionaryChangedEventArgs.#ctor(Windows.Foundation.Collections.CollectionChange,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="change">
          <type api="T:Windows.Foundation.Collections.CollectionChange" ref="false" />
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.ObservableDictionary.ObservableDictionaryChangedEventArgs" ref="true">
          <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:AppStore.Common.ObservableDictionary.ObservableDictionaryChangedEventArgs.CollectionChange">
      <apidata name="CollectionChange" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_CollectionChange" />
      <setter name="set_CollectionChange" />
      <returns>
        <type api="T:Windows.Foundation.Collections.CollectionChange" ref="false" />
      </returns>
      <implements>
        <member api="P:Windows.Foundation.Collections.IMapChangedEventArgs`1.CollectionChange">
          <type api="T:Windows.Foundation.Collections.IMapChangedEventArgs`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.ObservableDictionary.ObservableDictionaryChangedEventArgs" ref="true">
          <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:AppStore.Common.ObservableDictionary.ObservableDictionaryChangedEventArgs.Key">
      <apidata name="Key" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Key" />
      <setter name="set_Key" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Windows.Foundation.Collections.IMapChangedEventArgs`1.Key">
          <type api="T:Windows.Foundation.Collections.IMapChangedEventArgs`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.ObservableDictionary.ObservableDictionaryChangedEventArgs" ref="true">
          <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:AppStore.Common.RelayCommand">
      <apidata name="RelayCommand" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Input.ICommand" ref="true" />
      </implements>
      <elements>
        <element api="F:AppStore.Common.RelayCommand._execute" />
        <element api="F:AppStore.Common.RelayCommand._canExecute" />
        <element api="M:AppStore.Common.RelayCommand.#ctor(System.Action)" />
        <element api="M:AppStore.Common.RelayCommand.#ctor(System.Action,System.Func{System.Boolean})" />
        <element api="M:AppStore.Common.RelayCommand.CanExecute(System.Object)" />
        <element api="M:AppStore.Common.RelayCommand.Execute(System.Object)" />
        <element api="M:AppStore.Common.RelayCommand.RaiseCanExecuteChanged" />
        <element api="E:AppStore.Common.RelayCommand.CanExecuteChanged" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
      </containers>
    </api>
    <api id="M:AppStore.Common.RelayCommand.#ctor(System.Action)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="execute">
          <type api="T:System.Action" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.RelayCommand" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.RelayCommand.#ctor(System.Action,System.Func{System.Boolean})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="execute">
          <type api="T:System.Action" ref="true" />
        </parameter>
        <parameter name="canExecute">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.RelayCommand" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Common.RelayCommand._canExecute">
      <apidata name="_canExecute" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Func`1" ref="true">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.RelayCommand" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Common.RelayCommand._execute">
      <apidata name="_execute" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Action" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.RelayCommand" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.RelayCommand.CanExecute(System.Object)">
      <apidata name="CanExecute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Windows.Input.ICommand.CanExecute(System.Object)">
          <type api="T:System.Windows.Input.ICommand" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.RelayCommand" ref="true" />
      </containers>
    </api>
    <api id="E:AppStore.Common.RelayCommand.CanExecuteChanged">
      <apidata name="CanExecuteChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_CanExecuteChanged" />
      <remover name="remove_CanExecuteChanged" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.Windows.Input.ICommand.CanExecuteChanged">
          <type api="T:System.Windows.Input.ICommand" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.RelayCommand" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.RelayCommand.Execute(System.Object)">
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Windows.Input.ICommand.Execute(System.Object)">
          <type api="T:System.Windows.Input.ICommand" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.RelayCommand" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.RelayCommand.RaiseCanExecuteChanged">
      <apidata name="RaiseCanExecuteChanged" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.RelayCommand" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.Common.SaveStateEventArgs">
      <apidata name="SaveStateEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:AppStore.Common.SaveStateEventArgs.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})" />
        <element api="P:AppStore.Common.SaveStateEventArgs.PageState" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
      </containers>
    </api>
    <api id="M:AppStore.Common.SaveStateEventArgs.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="pageState">
          <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.SaveStateEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Common.SaveStateEventArgs.PageState">
      <apidata name="PageState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_PageState" />
      <setter name="set_PageState" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.SaveStateEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.Common.SaveStateEventHandler">
      <apidata name="SaveStateEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:AppStore.Common.SaveStateEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
      </containers>
    </api>
    <api id="T:AppStore.Common.SuspensionManager">
      <apidata name="SuspensionManager" group="type" subgroup="class" />
      <typedata visibility="assembly" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:AppStore.Common.SuspensionManager._sessionState" />
        <element api="F:AppStore.Common.SuspensionManager._knownTypes" />
        <element api="F:AppStore.Common.SuspensionManager.sessionStateFilename" />
        <element api="F:AppStore.Common.SuspensionManager.FrameSessionStateKeyProperty" />
        <element api="F:AppStore.Common.SuspensionManager.FrameSessionBaseKeyProperty" />
        <element api="F:AppStore.Common.SuspensionManager.FrameSessionStateProperty" />
        <element api="F:AppStore.Common.SuspensionManager._registeredFrames" />
        <element api="M:AppStore.Common.SuspensionManager.SaveAsync" />
        <element api="M:AppStore.Common.SuspensionManager.RestoreAsync(System.String)" />
        <element api="M:AppStore.Common.SuspensionManager.RegisterFrame(Windows.UI.Xaml.Controls.Frame,System.String,System.String)" />
        <element api="M:AppStore.Common.SuspensionManager.UnregisterFrame(Windows.UI.Xaml.Controls.Frame)" />
        <element api="M:AppStore.Common.SuspensionManager.SessionStateForFrame(Windows.UI.Xaml.Controls.Frame)" />
        <element api="M:AppStore.Common.SuspensionManager.RestoreFrameNavigationState(Windows.UI.Xaml.Controls.Frame)" />
        <element api="M:AppStore.Common.SuspensionManager.SaveFrameNavigationState(Windows.UI.Xaml.Controls.Frame)" />
        <element api="M:AppStore.Common.SuspensionManager.#ctor" />
        <element api="M:AppStore.Common.SuspensionManager.#cctor" />
        <element api="P:AppStore.Common.SuspensionManager.SessionState" />
        <element api="P:AppStore.Common.SuspensionManager.KnownTypes" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
      </containers>
    </api>
    <api id="M:AppStore.Common.SuspensionManager.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.SuspensionManager" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.SuspensionManager.#cctor">
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.SuspensionManager" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Common.SuspensionManager._knownTypes">
      <apidata name="_knownTypes" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.SuspensionManager" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Common.SuspensionManager._registeredFrames">
      <apidata name="_registeredFrames" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.WeakReference`1" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.Controls.Frame" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.SuspensionManager" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Common.SuspensionManager._sessionState">
      <apidata name="_sessionState" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.SuspensionManager" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Common.SuspensionManager.FrameSessionBaseKeyProperty">
      <apidata name="FrameSessionBaseKeyProperty" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.SuspensionManager" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Common.SuspensionManager.FrameSessionStateKeyProperty">
      <apidata name="FrameSessionStateKeyProperty" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.SuspensionManager" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Common.SuspensionManager.FrameSessionStateProperty">
      <apidata name="FrameSessionStateProperty" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.SuspensionManager" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Common.SuspensionManager.KnownTypes">
      <apidata name="KnownTypes" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_KnownTypes" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.SuspensionManager" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.SuspensionManager.RegisterFrame(Windows.UI.Xaml.Controls.Frame,System.String,System.String)">
      <apidata name="RegisterFrame" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="frame">
          <type api="T:Windows.UI.Xaml.Controls.Frame" ref="true" />
        </parameter>
        <parameter name="sessionStateKey">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sessionBaseKey" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.SuspensionManager" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.SuspensionManager.RestoreAsync(System.String)">
      <apidata name="RestoreAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sessionBaseKey" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.SuspensionManager" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.SuspensionManager.RestoreFrameNavigationState(Windows.UI.Xaml.Controls.Frame)">
      <apidata name="RestoreFrameNavigationState" group="member" subgroup="method" />
      <memberdata visibility="private" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="frame">
          <type api="T:Windows.UI.Xaml.Controls.Frame" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.SuspensionManager" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.SuspensionManager.SaveAsync">
      <apidata name="SaveAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.SuspensionManager" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.SuspensionManager.SaveFrameNavigationState(Windows.UI.Xaml.Controls.Frame)">
      <apidata name="SaveFrameNavigationState" group="member" subgroup="method" />
      <memberdata visibility="private" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="frame">
          <type api="T:Windows.UI.Xaml.Controls.Frame" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.SuspensionManager" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Common.SuspensionManager.SessionState">
      <apidata name="SessionState" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SessionState" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.SuspensionManager" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Common.SuspensionManager.sessionStateFilename">
      <apidata name="sessionStateFilename" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>_sessionState.xml</value>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.SuspensionManager" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.SuspensionManager.SessionStateForFrame(Windows.UI.Xaml.Controls.Frame)">
      <apidata name="SessionStateForFrame" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="frame">
          <type api="T:Windows.UI.Xaml.Controls.Frame" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.SuspensionManager" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.SuspensionManager.UnregisterFrame(Windows.UI.Xaml.Controls.Frame)">
      <apidata name="UnregisterFrame" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="frame">
          <type api="T:Windows.UI.Xaml.Controls.Frame" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.SuspensionManager" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.Common.SuspensionManagerException">
      <apidata name="SuspensionManagerException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:AppStore.Common.SuspensionManagerException.#ctor" />
        <element api="M:AppStore.Common.SuspensionManagerException.#ctor(System.Exception)" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
      </containers>
    </api>
    <api id="M:AppStore.Common.SuspensionManagerException.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.SuspensionManagerException" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Common.SuspensionManagerException.#ctor(System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Common" />
        <type api="T:AppStore.Common.SuspensionManagerException" ref="true" />
      </containers>
    </api>
    <api id="N:AppStore.Models">
      <apidata name="AppStore.Models" group="namespace" />
      <elements>
        <element api="T:AppStore.Models.AppInstance" />
        <element api="T:AppStore.Models.AppList" />
        <element api="T:AppStore.Models.Apps" />
        <element api="T:AppStore.Models.Card" />
        <element api="T:AppStore.Models.Categories" />
        <element api="T:AppStore.Models.CategoryInstance" />
        <element api="T:AppStore.Models.FlashModel" />
        <element api="T:AppStore.Models.InfoModel" />
        <element api="T:AppStore.Models.MenuItem" />
        <element api="T:AppStore.Models.Question" />
        <element api="T:AppStore.Models.QuizModel" />
        <element api="T:AppStore.Models.Resources" />
        <element api="T:AppStore.Models.SpellingsModel" />
        <element api="T:AppStore.Models.WordModel" />
      </elements>
    </api>
    <api id="T:AppStore.Models.AppInstance">
      <apidata name="AppInstance" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:AppStore.Models.AppInstance.app" />
        <element api="F:AppStore.Models.AppInstance.installed" />
        <element api="M:AppStore.Models.AppInstance.#ctor" />
        <element api="M:AppStore.Models.AppInstance.#cctor" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
      </containers>
    </api>
    <api id="M:AppStore.Models.AppInstance.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.AppInstance" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.AppInstance.#cctor">
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.AppInstance" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.AppInstance.app">
      <apidata name="app" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Models.Apps" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.AppInstance" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.AppInstance.installed">
      <apidata name="installed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.AppInstance" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.Models.AppList">
      <apidata name="AppList" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:AppStore.Models.AppList.obAppList" />
        <element api="F:AppStore.Models.AppList.myappList" />
        <element api="F:AppStore.Models.AppList.appList" />
        <element api="M:AppStore.Models.AppList.getAppList" />
        <element api="M:AppStore.Models.AppList.getMyAppList" />
        <element api="M:AppStore.Models.AppList.#ctor" />
        <element api="M:AppStore.Models.AppList.#cctor" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
      </containers>
    </api>
    <api id="M:AppStore.Models.AppList.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.AppList" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.AppList.#cctor">
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.AppList" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.AppList.appList">
      <apidata name="appList" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:AppStore.Models.Apps" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.AppList" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.AppList.getAppList">
      <apidata name="getAppList" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:AppStore.Models.AppList" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.AppList" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.AppList.getMyAppList">
      <apidata name="getMyAppList" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:AppStore.Models.AppList" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.AppList" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.AppList.myappList">
      <apidata name="myappList" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:AppStore.Models.Apps" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.AppList" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.AppList.obAppList">
      <apidata name="obAppList" group="member" subgroup="field" />
      <memberdata visibility="private" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Models.AppList" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.AppList" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.Models.Apps">
      <apidata name="Apps" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:AppStore.Models.Apps.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String,System.String)" />
        <element api="P:AppStore.Models.Apps.Name" />
        <element api="P:AppStore.Models.Apps.Author" />
        <element api="P:AppStore.Models.Apps.AuthorEmail" />
        <element api="P:AppStore.Models.Apps.Description" />
        <element api="P:AppStore.Models.Apps.AppIcon" />
        <element api="P:AppStore.Models.Apps.Category" />
        <element api="P:AppStore.Models.Apps.Screenshots" />
        <element api="P:AppStore.Models.Apps.Type" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
      </containers>
    </api>
    <api id="M:AppStore.Models.Apps.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="author">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="authoremail">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="appicon">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="screenshots">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="type">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Apps" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Models.Apps.AppIcon">
      <apidata name="AppIcon" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AppIcon" />
      <setter name="set_AppIcon" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Apps" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Models.Apps.Author">
      <apidata name="Author" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Author" />
      <setter name="set_Author" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Apps" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Models.Apps.AuthorEmail">
      <apidata name="AuthorEmail" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AuthorEmail" />
      <setter name="set_AuthorEmail" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Apps" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Models.Apps.Category">
      <apidata name="Category" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Category" />
      <setter name="set_Category" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Apps" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Models.Apps.Description">
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Description" />
      <setter name="set_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Apps" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Models.Apps.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Apps" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Models.Apps.Screenshots">
      <apidata name="Screenshots" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Screenshots" />
      <setter name="set_Screenshots" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Apps" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Models.Apps.Type">
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Apps" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.Models.Card">
      <apidata name="Card" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:AppStore.Models.Card.mQuestion" />
        <element api="F:AppStore.Models.Card.mAnswer" />
        <element api="F:AppStore.Models.Card.mHint" />
        <element api="F:AppStore.Models.Card.mImagePath" />
        <element api="M:AppStore.Models.Card.#ctor(System.String,System.String,System.String,System.String)" />
        <element api="M:AppStore.Models.Card.getQuestion" />
        <element api="M:AppStore.Models.Card.setQuestion(System.String)" />
        <element api="M:AppStore.Models.Card.getAnswer" />
        <element api="M:AppStore.Models.Card.setAnswer(System.String)" />
        <element api="M:AppStore.Models.Card.getHint" />
        <element api="M:AppStore.Models.Card.setHint(System.String)" />
        <element api="M:AppStore.Models.Card.getImagePath" />
        <element api="M:AppStore.Models.Card.setImagePath(System.String)" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
      </containers>
    </api>
    <api id="M:AppStore.Models.Card.#ctor(System.String,System.String,System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="question">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="answer">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="hint">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="imagePath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Card" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.Card.getAnswer">
      <apidata name="getAnswer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Card" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.Card.getHint">
      <apidata name="getHint" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Card" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.Card.getImagePath">
      <apidata name="getImagePath" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Card" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.Card.getQuestion">
      <apidata name="getQuestion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Card" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.Card.mAnswer">
      <apidata name="mAnswer" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Card" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.Card.mHint">
      <apidata name="mHint" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Card" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.Card.mImagePath">
      <apidata name="mImagePath" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Card" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.Card.mQuestion">
      <apidata name="mQuestion" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Card" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.Card.setAnswer(System.String)">
      <apidata name="setAnswer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mAnswer">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Card" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.Card.setHint(System.String)">
      <apidata name="setHint" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mHint">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Card" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.Card.setImagePath(System.String)">
      <apidata name="setImagePath" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mImagePath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Card" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.Card.setQuestion(System.String)">
      <apidata name="setQuestion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mQuestion">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Card" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.Models.Categories">
      <apidata name="Categories" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:AppStore.Models.Categories.#ctor(System.String,System.String)" />
        <element api="P:AppStore.Models.Categories.Background" />
        <element api="P:AppStore.Models.Categories.Name" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
      </containers>
    </api>
    <api id="M:AppStore.Models.Categories.#ctor(System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="mName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mBackground">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Categories" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Models.Categories.Background">
      <apidata name="Background" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Background" />
      <setter name="set_Background" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Categories" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Models.Categories.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Categories" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.Models.CategoryInstance">
      <apidata name="CategoryInstance" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:AppStore.Models.CategoryInstance.category" />
        <element api="M:AppStore.Models.CategoryInstance.#ctor" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
      </containers>
    </api>
    <api id="M:AppStore.Models.CategoryInstance.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.CategoryInstance" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.CategoryInstance.category">
      <apidata name="category" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Models.Categories" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.CategoryInstance" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.Models.FlashModel">
      <apidata name="FlashModel" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:AppStore.Models.FlashModel.mFlashName" />
        <element api="F:AppStore.Models.FlashModel.mFlashAuthor" />
        <element api="F:AppStore.Models.FlashModel.mFlashVersion" />
        <element api="F:AppStore.Models.FlashModel.mFlashDescription" />
        <element api="F:AppStore.Models.FlashModel.mFlashAuthorEmail" />
        <element api="F:AppStore.Models.FlashModel.mCardList" />
        <element api="F:AppStore.Models.FlashModel.mFlashModel" />
        <element api="M:AppStore.Models.FlashModel.getInstance" />
        <element api="M:AppStore.Models.FlashModel.getFlashAuthor" />
        <element api="M:AppStore.Models.FlashModel.setFlashAuthor(System.String)" />
        <element api="M:AppStore.Models.FlashModel.getFlashName" />
        <element api="M:AppStore.Models.FlashModel.setFlashName(System.String)" />
        <element api="M:AppStore.Models.FlashModel.getCardList" />
        <element api="M:AppStore.Models.FlashModel.setCardList(System.Collections.Generic.List{AppStore.Models.Card})" />
        <element api="M:AppStore.Models.FlashModel.getFlashDescription" />
        <element api="M:AppStore.Models.FlashModel.setFlashDescription(System.String)" />
        <element api="M:AppStore.Models.FlashModel.getFlashAuthorEmail" />
        <element api="M:AppStore.Models.FlashModel.setFlashAuthorEmail(System.String)" />
        <element api="M:AppStore.Models.FlashModel.getFlashVersion" />
        <element api="M:AppStore.Models.FlashModel.setFlashVersion(System.String)" />
        <element api="M:AppStore.Models.FlashModel.#ctor" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
      </containers>
    </api>
    <api id="M:AppStore.Models.FlashModel.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.FlashModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.FlashModel.getCardList">
      <apidata name="getCardList" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:AppStore.Models.Card" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.FlashModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.FlashModel.getFlashAuthor">
      <apidata name="getFlashAuthor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.FlashModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.FlashModel.getFlashAuthorEmail">
      <apidata name="getFlashAuthorEmail" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.FlashModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.FlashModel.getFlashDescription">
      <apidata name="getFlashDescription" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.FlashModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.FlashModel.getFlashName">
      <apidata name="getFlashName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.FlashModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.FlashModel.getFlashVersion">
      <apidata name="getFlashVersion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.FlashModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.FlashModel.getInstance">
      <apidata name="getInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:AppStore.Models.FlashModel" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.FlashModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.FlashModel.mCardList">
      <apidata name="mCardList" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:AppStore.Models.Card" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.FlashModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.FlashModel.mFlashAuthor">
      <apidata name="mFlashAuthor" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.FlashModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.FlashModel.mFlashAuthorEmail">
      <apidata name="mFlashAuthorEmail" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.FlashModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.FlashModel.mFlashDescription">
      <apidata name="mFlashDescription" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.FlashModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.FlashModel.mFlashModel">
      <apidata name="mFlashModel" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Models.FlashModel" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.FlashModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.FlashModel.mFlashName">
      <apidata name="mFlashName" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.FlashModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.FlashModel.mFlashVersion">
      <apidata name="mFlashVersion" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.FlashModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.FlashModel.setCardList(System.Collections.Generic.List{AppStore.Models.Card})">
      <apidata name="setCardList" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mCardList">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:AppStore.Models.Card" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.FlashModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.FlashModel.setFlashAuthor(System.String)">
      <apidata name="setFlashAuthor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mFlashAuthor">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.FlashModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.FlashModel.setFlashAuthorEmail(System.String)">
      <apidata name="setFlashAuthorEmail" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mFlashAuthorEmail">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.FlashModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.FlashModel.setFlashDescription(System.String)">
      <apidata name="setFlashDescription" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mFlashDescription">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.FlashModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.FlashModel.setFlashName(System.String)">
      <apidata name="setFlashName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mFlashName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.FlashModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.FlashModel.setFlashVersion(System.String)">
      <apidata name="setFlashVersion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mFlashVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.FlashModel" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.Models.InfoModel">
      <apidata name="InfoModel" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:AppStore.Models.InfoModel.mInfoName" />
        <element api="F:AppStore.Models.InfoModel.mInfoVersion" />
        <element api="F:AppStore.Models.InfoModel.mInfoDescription" />
        <element api="F:AppStore.Models.InfoModel.mInfoAuthor" />
        <element api="F:AppStore.Models.InfoModel.mInfoAuthorEmail" />
        <element api="F:AppStore.Models.InfoModel.mInfoTitleList" />
        <element api="F:AppStore.Models.InfoModel.mInfoDescriptionList" />
        <element api="F:AppStore.Models.InfoModel.mModel" />
        <element api="M:AppStore.Models.InfoModel.getInstance" />
        <element api="M:AppStore.Models.InfoModel.getInfoDescriptionList" />
        <element api="M:AppStore.Models.InfoModel.setInfoDescriptionList(System.Collections.Generic.List{System.String})" />
        <element api="M:AppStore.Models.InfoModel.getInfoAuthor" />
        <element api="M:AppStore.Models.InfoModel.setInfoAuthorEmail(System.String)" />
        <element api="M:AppStore.Models.InfoModel.getInfoDescription" />
        <element api="M:AppStore.Models.InfoModel.setInfoDescription(System.String)" />
        <element api="M:AppStore.Models.InfoModel.getInfoAuthorEmail" />
        <element api="M:AppStore.Models.InfoModel.setInfoAuthor(System.String)" />
        <element api="M:AppStore.Models.InfoModel.getInfoName" />
        <element api="M:AppStore.Models.InfoModel.setInfoName(System.String)" />
        <element api="M:AppStore.Models.InfoModel.getInfoVersion" />
        <element api="M:AppStore.Models.InfoModel.setInfoVersion(System.String)" />
        <element api="M:AppStore.Models.InfoModel.getInfoTitleList" />
        <element api="M:AppStore.Models.InfoModel.setInfoTitleList(System.Collections.Generic.List{System.String})" />
        <element api="M:AppStore.Models.InfoModel.#ctor" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
      </containers>
    </api>
    <api id="M:AppStore.Models.InfoModel.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.InfoModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.InfoModel.getInfoAuthor">
      <apidata name="getInfoAuthor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.InfoModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.InfoModel.getInfoAuthorEmail">
      <apidata name="getInfoAuthorEmail" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.InfoModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.InfoModel.getInfoDescription">
      <apidata name="getInfoDescription" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.InfoModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.InfoModel.getInfoDescriptionList">
      <apidata name="getInfoDescriptionList" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.InfoModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.InfoModel.getInfoName">
      <apidata name="getInfoName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.InfoModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.InfoModel.getInfoTitleList">
      <apidata name="getInfoTitleList" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.InfoModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.InfoModel.getInfoVersion">
      <apidata name="getInfoVersion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.InfoModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.InfoModel.getInstance">
      <apidata name="getInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:AppStore.Models.InfoModel" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.InfoModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.InfoModel.mInfoAuthor">
      <apidata name="mInfoAuthor" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.InfoModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.InfoModel.mInfoAuthorEmail">
      <apidata name="mInfoAuthorEmail" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.InfoModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.InfoModel.mInfoDescription">
      <apidata name="mInfoDescription" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.InfoModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.InfoModel.mInfoDescriptionList">
      <apidata name="mInfoDescriptionList" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.InfoModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.InfoModel.mInfoName">
      <apidata name="mInfoName" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.InfoModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.InfoModel.mInfoTitleList">
      <apidata name="mInfoTitleList" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.InfoModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.InfoModel.mInfoVersion">
      <apidata name="mInfoVersion" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.InfoModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.InfoModel.mModel">
      <apidata name="mModel" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Models.InfoModel" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.InfoModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.InfoModel.setInfoAuthor(System.String)">
      <apidata name="setInfoAuthor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mInfoAuthor">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.InfoModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.InfoModel.setInfoAuthorEmail(System.String)">
      <apidata name="setInfoAuthorEmail" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mInfoAuthorEmail">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.InfoModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.InfoModel.setInfoDescription(System.String)">
      <apidata name="setInfoDescription" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mInfoDescription">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.InfoModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.InfoModel.setInfoDescriptionList(System.Collections.Generic.List{System.String})">
      <apidata name="setInfoDescriptionList" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mInfoDescriptionList">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.InfoModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.InfoModel.setInfoName(System.String)">
      <apidata name="setInfoName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mInfoName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.InfoModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.InfoModel.setInfoTitleList(System.Collections.Generic.List{System.String})">
      <apidata name="setInfoTitleList" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mInfoTitleList">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.InfoModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.InfoModel.setInfoVersion(System.String)">
      <apidata name="setInfoVersion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mInfoVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.InfoModel" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.Models.MenuItem">
      <apidata name="MenuItem" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:AppStore.Models.MenuItem.#ctor(System.String,System.String)" />
        <element api="P:AppStore.Models.MenuItem.Icon" />
        <element api="P:AppStore.Models.MenuItem.Title" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
      </containers>
    </api>
    <api id="M:AppStore.Models.MenuItem.#ctor(System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="mTitle">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mIcon">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.MenuItem" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Models.MenuItem.Icon">
      <apidata name="Icon" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Icon" />
      <setter name="set_Icon" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.MenuItem" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Models.MenuItem.Title">
      <apidata name="Title" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Title" />
      <setter name="set_Title" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.MenuItem" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.Models.Question">
      <apidata name="Question" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:AppStore.Models.Question.mQuestion" />
        <element api="F:AppStore.Models.Question.mAnswerOption" />
        <element api="F:AppStore.Models.Question.mOptionNumber" />
        <element api="M:AppStore.Models.Question.getQuestion" />
        <element api="M:AppStore.Models.Question.setQuestion(System.String)" />
        <element api="M:AppStore.Models.Question.getAnswerOption" />
        <element api="M:AppStore.Models.Question.setAnswerOption(System.Collections.Generic.List{System.String})" />
        <element api="M:AppStore.Models.Question.getOptionNumber" />
        <element api="M:AppStore.Models.Question.setOptionNumber(System.Int32)" />
        <element api="M:AppStore.Models.Question.#ctor" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
      </containers>
    </api>
    <api id="M:AppStore.Models.Question.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Question" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.Question.getAnswerOption">
      <apidata name="getAnswerOption" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Question" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.Question.getOptionNumber">
      <apidata name="getOptionNumber" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Question" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.Question.getQuestion">
      <apidata name="getQuestion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Question" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.Question.mAnswerOption">
      <apidata name="mAnswerOption" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Question" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.Question.mOptionNumber">
      <apidata name="mOptionNumber" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Question" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.Question.mQuestion">
      <apidata name="mQuestion" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Question" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.Question.setAnswerOption(System.Collections.Generic.List{System.String})">
      <apidata name="setAnswerOption" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mAnswerOption">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Question" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.Question.setOptionNumber(System.Int32)">
      <apidata name="setOptionNumber" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mOptionNumber">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Question" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.Question.setQuestion(System.String)">
      <apidata name="setQuestion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mQuestion">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Question" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.Models.QuizModel">
      <apidata name="QuizModel" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:AppStore.Models.QuizModel.mQuizName" />
        <element api="F:AppStore.Models.QuizModel.mQuizAuthor" />
        <element api="F:AppStore.Models.QuizModel.mQuizDescription" />
        <element api="F:AppStore.Models.QuizModel.mQuizVersion" />
        <element api="F:AppStore.Models.QuizModel.mQuizAuthorEmail" />
        <element api="F:AppStore.Models.QuizModel.mQueAnsList" />
        <element api="F:AppStore.Models.QuizModel.totalCorrect" />
        <element api="F:AppStore.Models.QuizModel.totalWrong" />
        <element api="F:AppStore.Models.QuizModel.mQuizModel" />
        <element api="M:AppStore.Models.QuizModel.clearInstance" />
        <element api="M:AppStore.Models.QuizModel.getInstance" />
        <element api="M:AppStore.Models.QuizModel.getQueAnsList" />
        <element api="M:AppStore.Models.QuizModel.setQueAnsList(System.Collections.Generic.List{AppStore.Models.Question})" />
        <element api="M:AppStore.Models.QuizModel.getQuizAuthor" />
        <element api="M:AppStore.Models.QuizModel.setQuizAuthor(System.String)" />
        <element api="M:AppStore.Models.QuizModel.getQuizDescription" />
        <element api="M:AppStore.Models.QuizModel.setQuizDescription(System.String)" />
        <element api="M:AppStore.Models.QuizModel.getQuizAuthorEmail" />
        <element api="M:AppStore.Models.QuizModel.setQuizAuthorEmail(System.String)" />
        <element api="M:AppStore.Models.QuizModel.getQuizVersion" />
        <element api="M:AppStore.Models.QuizModel.setQuizVersion(System.String)" />
        <element api="M:AppStore.Models.QuizModel.getQuizName" />
        <element api="M:AppStore.Models.QuizModel.setQuizName(System.String)" />
        <element api="M:AppStore.Models.QuizModel.getTotalWrong" />
        <element api="M:AppStore.Models.QuizModel.setTotalWrong(System.Int32)" />
        <element api="M:AppStore.Models.QuizModel.getTotalCorrect" />
        <element api="M:AppStore.Models.QuizModel.setTotalCorrect(System.Int32)" />
        <element api="M:AppStore.Models.QuizModel.#ctor" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
      </containers>
    </api>
    <api id="M:AppStore.Models.QuizModel.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.QuizModel.clearInstance">
      <apidata name="clearInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.QuizModel.getInstance">
      <apidata name="getInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.QuizModel.getQueAnsList">
      <apidata name="getQueAnsList" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:AppStore.Models.Question" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.QuizModel.getQuizAuthor">
      <apidata name="getQuizAuthor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.QuizModel.getQuizAuthorEmail">
      <apidata name="getQuizAuthorEmail" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.QuizModel.getQuizDescription">
      <apidata name="getQuizDescription" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.QuizModel.getQuizName">
      <apidata name="getQuizName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.QuizModel.getQuizVersion">
      <apidata name="getQuizVersion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.QuizModel.getTotalCorrect">
      <apidata name="getTotalCorrect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.QuizModel.getTotalWrong">
      <apidata name="getTotalWrong" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.QuizModel.mQueAnsList">
      <apidata name="mQueAnsList" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:AppStore.Models.Question" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.QuizModel.mQuizAuthor">
      <apidata name="mQuizAuthor" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.QuizModel.mQuizAuthorEmail">
      <apidata name="mQuizAuthorEmail" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.QuizModel.mQuizDescription">
      <apidata name="mQuizDescription" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.QuizModel.mQuizModel">
      <apidata name="mQuizModel" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.QuizModel.mQuizName">
      <apidata name="mQuizName" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.QuizModel.mQuizVersion">
      <apidata name="mQuizVersion" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.QuizModel.setQueAnsList(System.Collections.Generic.List{AppStore.Models.Question})">
      <apidata name="setQueAnsList" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mQueAnsList">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:AppStore.Models.Question" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.QuizModel.setQuizAuthor(System.String)">
      <apidata name="setQuizAuthor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mQuizAuthor">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.QuizModel.setQuizAuthorEmail(System.String)">
      <apidata name="setQuizAuthorEmail" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mQuizAuthorEmail">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.QuizModel.setQuizDescription(System.String)">
      <apidata name="setQuizDescription" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mQuizDescription">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.QuizModel.setQuizName(System.String)">
      <apidata name="setQuizName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mQuizName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.QuizModel.setQuizVersion(System.String)">
      <apidata name="setQuizVersion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mQuizVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.QuizModel.setTotalCorrect(System.Int32)">
      <apidata name="setTotalCorrect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="totalCorrect">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.QuizModel.setTotalWrong(System.Int32)">
      <apidata name="setTotalWrong" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="totalWrong">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.QuizModel.totalCorrect">
      <apidata name="totalCorrect" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.QuizModel.totalWrong">
      <apidata name="totalWrong" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.Models.Resources">
      <apidata name="Resources" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:AppStore.Models.Resources.CategoryName" />
        <element api="F:AppStore.Models.Resources.CategoryImage" />
        <element api="M:AppStore.Models.Resources.getCategoriesList" />
        <element api="M:AppStore.Models.Resources.#ctor" />
        <element api="M:AppStore.Models.Resources.#cctor" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
      </containers>
    </api>
    <api id="M:AppStore.Models.Resources.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Resources" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.Resources.#cctor">
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Resources" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.Resources.CategoryImage">
      <apidata name="CategoryImage" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Resources" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.Resources.CategoryName">
      <apidata name="CategoryName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Resources" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.Resources.getCategoriesList">
      <apidata name="getCategoriesList" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:AppStore.Models.Categories" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.Resources" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.Models.SpellingsModel">
      <apidata name="SpellingsModel" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:AppStore.Models.SpellingsModel.mPuzzleName" />
        <element api="F:AppStore.Models.SpellingsModel.mPuzzleAuthor" />
        <element api="F:AppStore.Models.SpellingsModel.mPuzzleAuthorEmail" />
        <element api="F:AppStore.Models.SpellingsModel.mPuzzleVersion" />
        <element api="F:AppStore.Models.SpellingsModel.mPuzzleDescription" />
        <element api="F:AppStore.Models.SpellingsModel.mSpellingsList" />
        <element api="F:AppStore.Models.SpellingsModel.totalCorrect" />
        <element api="F:AppStore.Models.SpellingsModel.totalWrong" />
        <element api="F:AppStore.Models.SpellingsModel.activeCount" />
        <element api="F:AppStore.Models.SpellingsModel.mSpellingsModel" />
        <element api="M:AppStore.Models.SpellingsModel.clearInstance" />
        <element api="M:AppStore.Models.SpellingsModel.getInstance" />
        <element api="M:AppStore.Models.SpellingsModel.getPuzzleName" />
        <element api="M:AppStore.Models.SpellingsModel.setPuzzleName(System.String)" />
        <element api="M:AppStore.Models.SpellingsModel.getPuzzleDescription" />
        <element api="M:AppStore.Models.SpellingsModel.setPuzzleDescription(System.String)" />
        <element api="M:AppStore.Models.SpellingsModel.getPuzzleAuthorEmail" />
        <element api="M:AppStore.Models.SpellingsModel.setPuzzleAuthorEmail(System.String)" />
        <element api="M:AppStore.Models.SpellingsModel.getPuzzleVersion" />
        <element api="M:AppStore.Models.SpellingsModel.setPuzzleVersion(System.String)" />
        <element api="M:AppStore.Models.SpellingsModel.getPuzzleAuthor" />
        <element api="M:AppStore.Models.SpellingsModel.setPuzzleAuthor(System.String)" />
        <element api="M:AppStore.Models.SpellingsModel.getSpellingsList" />
        <element api="M:AppStore.Models.SpellingsModel.setSpellingsList(System.Collections.Generic.List{AppStore.Models.WordModel})" />
        <element api="M:AppStore.Models.SpellingsModel.getTotalCorrect" />
        <element api="M:AppStore.Models.SpellingsModel.setTotalCorrect(System.Int32)" />
        <element api="M:AppStore.Models.SpellingsModel.getTotalWrong" />
        <element api="M:AppStore.Models.SpellingsModel.setTotalWrong(System.Int32)" />
        <element api="M:AppStore.Models.SpellingsModel.getActiveCount" />
        <element api="M:AppStore.Models.SpellingsModel.setActiveCount(System.Int32)" />
        <element api="M:AppStore.Models.SpellingsModel.#ctor" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
      </containers>
    </api>
    <api id="M:AppStore.Models.SpellingsModel.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.SpellingsModel.activeCount">
      <apidata name="activeCount" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.SpellingsModel.clearInstance">
      <apidata name="clearInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.SpellingsModel.getActiveCount">
      <apidata name="getActiveCount" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.SpellingsModel.getInstance">
      <apidata name="getInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.SpellingsModel.getPuzzleAuthor">
      <apidata name="getPuzzleAuthor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.SpellingsModel.getPuzzleAuthorEmail">
      <apidata name="getPuzzleAuthorEmail" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.SpellingsModel.getPuzzleDescription">
      <apidata name="getPuzzleDescription" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.SpellingsModel.getPuzzleName">
      <apidata name="getPuzzleName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.SpellingsModel.getPuzzleVersion">
      <apidata name="getPuzzleVersion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.SpellingsModel.getSpellingsList">
      <apidata name="getSpellingsList" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:AppStore.Models.WordModel" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.SpellingsModel.getTotalCorrect">
      <apidata name="getTotalCorrect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.SpellingsModel.getTotalWrong">
      <apidata name="getTotalWrong" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.SpellingsModel.mPuzzleAuthor">
      <apidata name="mPuzzleAuthor" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.SpellingsModel.mPuzzleAuthorEmail">
      <apidata name="mPuzzleAuthorEmail" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.SpellingsModel.mPuzzleDescription">
      <apidata name="mPuzzleDescription" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.SpellingsModel.mPuzzleName">
      <apidata name="mPuzzleName" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.SpellingsModel.mPuzzleVersion">
      <apidata name="mPuzzleVersion" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.SpellingsModel.mSpellingsList">
      <apidata name="mSpellingsList" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:AppStore.Models.WordModel" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.SpellingsModel.mSpellingsModel">
      <apidata name="mSpellingsModel" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.SpellingsModel.setActiveCount(System.Int32)">
      <apidata name="setActiveCount" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activeCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.SpellingsModel.setPuzzleAuthor(System.String)">
      <apidata name="setPuzzleAuthor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mPuzzleAuthor">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.SpellingsModel.setPuzzleAuthorEmail(System.String)">
      <apidata name="setPuzzleAuthorEmail" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mPuzzleAuthorEmail">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.SpellingsModel.setPuzzleDescription(System.String)">
      <apidata name="setPuzzleDescription" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mPuzzleDescription">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.SpellingsModel.setPuzzleName(System.String)">
      <apidata name="setPuzzleName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mPuzzleName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.SpellingsModel.setPuzzleVersion(System.String)">
      <apidata name="setPuzzleVersion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mPuzzleVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.SpellingsModel.setSpellingsList(System.Collections.Generic.List{AppStore.Models.WordModel})">
      <apidata name="setSpellingsList" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mSpellingsList">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:AppStore.Models.WordModel" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.SpellingsModel.setTotalCorrect(System.Int32)">
      <apidata name="setTotalCorrect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="totalCorrect">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.SpellingsModel.setTotalWrong(System.Int32)">
      <apidata name="setTotalWrong" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="totalWrong">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.SpellingsModel.totalCorrect">
      <apidata name="totalCorrect" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.SpellingsModel.totalWrong">
      <apidata name="totalWrong" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.Models.WordModel">
      <apidata name="WordModel" group="type" subgroup="class" />
      <typedata visibility="assembly" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:AppStore.Models.WordModel.mWord" />
        <element api="F:AppStore.Models.WordModel.mDescription" />
        <element api="M:AppStore.Models.WordModel.#ctor(System.String,System.String)" />
        <element api="M:AppStore.Models.WordModel.getWord" />
        <element api="M:AppStore.Models.WordModel.setWord(System.String)" />
        <element api="M:AppStore.Models.WordModel.getDescription" />
        <element api="M:AppStore.Models.WordModel.setDescription(System.String)" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
      </containers>
    </api>
    <api id="M:AppStore.Models.WordModel.#ctor(System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="word">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.WordModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.WordModel.getDescription">
      <apidata name="getDescription" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.WordModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.WordModel.getWord">
      <apidata name="getWord" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.WordModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.WordModel.mDescription">
      <apidata name="mDescription" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.WordModel" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Models.WordModel.mWord">
      <apidata name="mWord" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.WordModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.WordModel.setDescription(System.String)">
      <apidata name="setDescription" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mDescription">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.WordModel" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Models.WordModel.setWord(System.String)">
      <apidata name="setWord" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mWord">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Models" />
        <type api="T:AppStore.Models.WordModel" ref="true" />
      </containers>
    </api>
    <api id="N:AppStore.Templates">
      <apidata name="AppStore.Templates" group="namespace" />
      <elements>
        <element api="T:AppStore.Templates.FlashCardPage" />
        <element api="T:AppStore.Templates.InfoDetailPage" />
        <element api="T:AppStore.Templates.InfoPage" />
        <element api="T:AppStore.Templates.QuizPage" />
        <element api="T:AppStore.Templates.ScorePage" />
        <element api="T:AppStore.Templates.SpellingsPage" />
        <element api="T:AppStore.Templates.StartPage" />
        <element api="T:AppStore.Templates.WordInfoPage" />
      </elements>
    </api>
    <api id="T:AppStore.Templates.FlashCardPage">
      <apidata name="FlashCardPage" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="F:AppStore.Templates.FlashCardPage.navigationHelper" />
        <element api="F:AppStore.Templates.FlashCardPage.defaultViewModel" />
        <element api="F:AppStore.Templates.FlashCardPage.flash" />
        <element api="F:AppStore.Templates.FlashCardPage.iQuestionIndex" />
        <element api="F:AppStore.Templates.FlashCardPage.isFlipped" />
        <element api="F:AppStore.Templates.FlashCardPage.LayoutRoot" />
        <element api="F:AppStore.Templates.FlashCardPage.ContentRoot" />
        <element api="F:AppStore.Templates.FlashCardPage.FlashNumber" />
        <element api="F:AppStore.Templates.FlashCardPage.FlashQuestion" />
        <element api="F:AppStore.Templates.FlashCardPage.frontCard" />
        <element api="F:AppStore.Templates.FlashCardPage.backCard" />
        <element api="F:AppStore.Templates.FlashCardPage.FlashHint" />
        <element api="F:AppStore.Templates.FlashCardPage.Previous" />
        <element api="F:AppStore.Templates.FlashCardPage.Flip" />
        <element api="F:AppStore.Templates.FlashCardPage.Next" />
        <element api="F:AppStore.Templates.FlashCardPage.FlashText" />
        <element api="F:AppStore.Templates.FlashCardPage.FlashCard" />
        <element api="F:AppStore.Templates.FlashCardPage.pageTitle" />
        <element api="F:AppStore.Templates.FlashCardPage.VisualStateGroup" />
        <element api="F:AppStore.Templates.FlashCardPage.FlipCardFront" />
        <element api="F:AppStore.Templates.FlashCardPage.FlipCardBack" />
        <element api="F:AppStore.Templates.FlashCardPage._contentLoaded" />
        <element api="M:AppStore.Templates.FlashCardPage.#ctor" />
        <element api="M:AppStore.Templates.FlashCardPage.NavigationHelper_LoadState(System.Object,AppStore.Common.LoadStateEventArgs)" />
        <element api="M:AppStore.Templates.FlashCardPage.NavigationHelper_SaveState(System.Object,AppStore.Common.SaveStateEventArgs)" />
        <element api="M:AppStore.Templates.FlashCardPage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.Templates.FlashCardPage.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.Templates.FlashCardPage.Previous_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.Templates.FlashCardPage.Flip_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.Templates.FlashCardPage.Next_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.Templates.FlashCardPage.populateQuestion(System.Int32)" />
        <element api="M:AppStore.Templates.FlashCardPage.base64image(System.String)" />
        <element api="M:AppStore.Templates.FlashCardPage.InitializeComponent" />
        <element api="M:AppStore.Templates.FlashCardPage.Connect(System.Int32,System.Object)" />
        <element api="P:AppStore.Templates.FlashCardPage.NavigationHelper" />
        <element api="P:AppStore.Templates.FlashCardPage.DefaultViewModel" />
        <element api="M:Windows.UI.Xaml.Controls.Page.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
          <apidata name="OnNavigatingFrom" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IPageOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.TopAppBar">
          <apidata name="TopAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TopAppBar" />
          <setter name="set_TopAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.TopAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.NavigationCacheMode">
          <apidata name="NavigationCacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_NavigationCacheMode" />
          <setter name="set_NavigationCacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Navigation.NavigationCacheMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.NavigationCacheMode">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.BottomAppBar">
          <apidata name="BottomAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BottomAppBar" />
          <setter name="set_BottomAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.BottomAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.Frame">
          <apidata name="Frame" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Frame" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.Frame" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.Frame">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.UserControl.Content">
          <apidata name="Content" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Content" />
          <setter name="set_Content" />
          <returns>
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IUserControl.Content">
              <type api="T:Windows.UI.Xaml.Controls.IUserControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.ApplyTemplate">
          <apidata name="ApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.ApplyTemplate">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.Focus(Windows.UI.Xaml.FocusState)">
          <apidata name="Focus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.Focus(Windows.UI.Xaml.FocusState)">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerEntered" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerPressed" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerMoved" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerReleased" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerExited" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCaptureLost" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCanceled" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerWheelChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
          <apidata name="OnTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
          <apidata name="OnDoubleTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
          <apidata name="OnHolding" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
          <apidata name="OnRightTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
          <apidata name="OnManipulationStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
          <apidata name="OnManipulationInertiaStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
          <apidata name="OnManipulationStarted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
          <apidata name="OnManipulationDelta" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
          <apidata name="OnManipulationCompleted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnGotFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnLostFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDrop(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDrop(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.GetTemplateChild(System.String)">
          <apidata name="GetTemplateChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="childName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlProtected.GetTemplateChild(System.String)">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStyle">
          <apidata name="FontStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStyle" />
          <setter name="set_FontStyle" />
          <returns>
            <type api="T:Windows.UI.Text.FontStyle" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStyle">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStretch">
          <apidata name="FontStretch" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStretch" />
          <setter name="set_FontStretch" />
          <returns>
            <type api="T:Windows.UI.Text.FontStretch" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStretch">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontSize">
          <apidata name="FontSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontSize" />
          <setter name="set_FontSize" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontSize">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontFamily">
          <apidata name="FontFamily" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontFamily" />
          <setter name="set_FontFamily" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.FontFamily" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontFamily">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontWeight">
          <apidata name="FontWeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontWeight" />
          <setter name="set_FontWeight" />
          <returns>
            <type api="T:Windows.UI.Text.FontWeight" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontWeight">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.CharacterSpacing">
          <apidata name="CharacterSpacing" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CharacterSpacing" />
          <setter name="set_CharacterSpacing" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.CharacterSpacing">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderThickness">
          <apidata name="BorderThickness" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderThickness" />
          <setter name="set_BorderThickness" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderThickness">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderBrush">
          <apidata name="BorderBrush" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderBrush" />
          <setter name="set_BorderBrush" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderBrush">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Background">
          <apidata name="Background" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Background" />
          <setter name="set_Background" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Background">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Foreground">
          <apidata name="Foreground" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Foreground" />
          <setter name="set_Foreground" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Foreground">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.VerticalContentAlignment">
          <apidata name="VerticalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalContentAlignment" />
          <setter name="set_VerticalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.VerticalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Template">
          <apidata name="Template" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Template" />
          <setter name="set_Template" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.ControlTemplate" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Template">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabNavigation">
          <apidata name="TabNavigation" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabNavigation" />
          <setter name="set_TabNavigation" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.KeyboardNavigationMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabNavigation">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabIndex">
          <apidata name="TabIndex" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabIndex" />
          <setter name="set_TabIndex" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabIndex">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Padding">
          <apidata name="Padding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Padding" />
          <setter name="set_Padding" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Padding">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTabStop">
          <apidata name="IsTabStop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTabStop" />
          <setter name="set_IsTabStop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsTabStop">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsEnabled">
          <apidata name="IsEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsEnabled" />
          <setter name="set_IsEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.HorizontalContentAlignment">
          <apidata name="HorizontalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalContentAlignment" />
          <setter name="set_HorizontalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.HorizontalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FocusState">
          <apidata name="FocusState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_FocusState" />
          <returns>
            <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FocusState">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.DefaultStyleKey">
          <apidata name="DefaultStyleKey" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DefaultStyleKey" />
          <setter name="set_DefaultStyleKey" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControlProtected.DefaultStyleKey">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTextScaleFactorEnabled">
          <apidata name="IsTextScaleFactorEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTextScaleFactorEnabled" />
          <setter name="set_IsTextScaleFactorEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl2.IsTextScaleFactorEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.Controls.Control.IsEnabledChanged">
          <apidata name="IsEnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsEnabledChanged" />
          <remover name="remove_IsEnabledChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.Controls.IControl.IsEnabledChanged">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.FindName(System.String)">
          <apidata name="FindName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="name" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.FindName(System.String)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="binding" in="true">
              <type api="T:Windows.UI.Xaml.Data.BindingBase" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetBindingExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Data.BindingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement2.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.MeasureOverride(Windows.Foundation.Size)">
          <apidata name="MeasureOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.MeasureOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.ArrangeOverride(Windows.Foundation.Size)">
          <apidata name="ArrangeOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="finalSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.ArrangeOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.OnApplyTemplate">
          <apidata name="OnApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.OnApplyTemplate">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GoToElementStateCore(System.String,System.Boolean)">
          <apidata name="GoToElementStateCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="stateName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="useTransitions" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides2.GoToElementStateCore(System.String,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Margin">
          <apidata name="Margin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Margin" />
          <setter name="set_Margin" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Margin">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Language">
          <apidata name="Language" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Language" />
          <setter name="set_Language" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Language">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.HorizontalAlignment">
          <apidata name="HorizontalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalAlignment" />
          <setter name="set_HorizontalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.HorizontalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.FlowDirection">
          <apidata name="FlowDirection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FlowDirection" />
          <setter name="set_FlowDirection" />
          <returns>
            <type api="T:Windows.UI.Xaml.FlowDirection" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.FlowDirection">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.DataContext">
          <apidata name="DataContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DataContext" />
          <setter name="set_DataContext" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.DataContext">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.VerticalAlignment">
          <apidata name="VerticalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalAlignment" />
          <setter name="set_VerticalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.VerticalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxWidth">
          <apidata name="MaxWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxWidth" />
          <setter name="set_MaxWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxHeight">
          <apidata name="MaxHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxHeight" />
          <setter name="set_MaxHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Height">
          <apidata name="Height" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Height" />
          <setter name="set_Height" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Height">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinHeight">
          <apidata name="MinHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinHeight" />
          <setter name="set_MinHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Width">
          <apidata name="Width" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Width" />
          <setter name="set_Width" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Width">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Tag">
          <apidata name="Tag" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Tag" />
          <setter name="set_Tag" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Tag">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Style">
          <apidata name="Style" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Style" />
          <setter name="set_Style" />
          <returns>
            <type api="T:Windows.UI.Xaml.Style" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Style">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Resources">
          <apidata name="Resources" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Resources" />
          <setter name="set_Resources" />
          <returns>
            <type api="T:Windows.UI.Xaml.ResourceDictionary" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Resources">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Name">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinWidth">
          <apidata name="MinWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinWidth" />
          <setter name="set_MinWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualWidth">
          <apidata name="ActualWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.BaseUri">
          <apidata name="BaseUri" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_BaseUri" />
          <returns>
            <type api="T:System.Uri" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.BaseUri">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Parent">
          <apidata name="Parent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Parent" />
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Parent">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Triggers">
          <apidata name="Triggers" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Triggers" />
          <returns>
            <type api="T:Windows.UI.Xaml.TriggerCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Triggers">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualHeight">
          <apidata name="ActualHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.RequestedTheme">
          <apidata name="RequestedTheme" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestedTheme" />
          <setter name="set_RequestedTheme" />
          <returns>
            <type api="T:Windows.UI.Xaml.ElementTheme" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement2.RequestedTheme">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.LayoutUpdated">
          <apidata name="LayoutUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LayoutUpdated" />
          <remover name="remove_LayoutUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Object" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.LayoutUpdated">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Loaded">
          <apidata name="Loaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Loaded" />
          <remover name="remove_Loaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Loaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.SizeChanged">
          <apidata name="SizeChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_SizeChanged" />
          <remover name="remove_SizeChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.SizeChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.SizeChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.SizeChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Unloaded">
          <apidata name="Unloaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Unloaded" />
          <remover name="remove_Unloaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Unloaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.DataContextChanged">
          <apidata name="DataContextChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DataContextChanged" />
          <remover name="remove_DataContextChanged" />
          <eventhandler>
            <type api="T:Windows.Foundation.TypedEventHandler`2" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
                <type api="T:Windows.UI.Xaml.DataContextChangedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement2.DataContextChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Measure(Windows.Foundation.Size)">
          <apidata name="Measure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Measure(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Arrange(Windows.Foundation.Rect)">
          <apidata name="Arrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="finalRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Arrange(Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="CapturePointer" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="ReleasePointerCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCaptures">
          <apidata name="ReleasePointerCaptures" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="handledEventsToo" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
          <apidata name="RemoveHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
          <apidata name="TransformToVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="visual" in="true">
              <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Media.GeneralTransform" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateMeasure">
          <apidata name="InvalidateMeasure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateMeasure">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateArrange">
          <apidata name="InvalidateArrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateArrange">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.UpdateLayout">
          <apidata name="UpdateLayout" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.UpdateLayout">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CancelDirectManipulations">
          <apidata name="CancelDirectManipulations" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement2.CancelDirectManipulations">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnCreateAutomationPeer">
          <apidata name="OnCreateAutomationPeer" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:Windows.UI.Xaml.Automation.Peers.AutomationPeer" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnCreateAutomationPeer">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnDisconnectVisualChildren">
          <apidata name="OnDisconnectVisualChildren" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnDisconnectVisualChildren">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
          <apidata name="FindSubElementsForTouchTargeting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="point" in="true">
              <type api="T:Windows.Foundation.Point" ref="false" />
            </parameter>
            <parameter name="boundingRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:Windows.Foundation.Point" ref="false" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CompositeMode">
          <apidata name="CompositeMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CompositeMode" />
          <setter name="set_CompositeMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.ElementCompositeMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement2.CompositeMode">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.ManipulationMode">
          <apidata name="ManipulationMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_ManipulationMode" />
          <setter name="set_ManipulationMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.ManipulationModes" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.ManipulationMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsTapEnabled">
          <apidata name="IsTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTapEnabled" />
          <setter name="set_IsTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsRightTapEnabled">
          <apidata name="IsRightTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsRightTapEnabled" />
          <setter name="set_IsRightTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsRightTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHoldingEnabled">
          <apidata name="IsHoldingEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHoldingEnabled" />
          <setter name="set_IsHoldingEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHoldingEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHitTestVisible">
          <apidata name="IsHitTestVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHitTestVisible" />
          <setter name="set_IsHitTestVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHitTestVisible">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsDoubleTapEnabled">
          <apidata name="IsDoubleTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsDoubleTapEnabled" />
          <setter name="set_IsDoubleTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsDoubleTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Clip">
          <apidata name="Clip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Clip" />
          <setter name="set_Clip" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.RectangleGeometry" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Clip">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CacheMode">
          <apidata name="CacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CacheMode" />
          <setter name="set_CacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.CacheMode" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.CacheMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Opacity">
          <apidata name="Opacity" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Opacity" />
          <setter name="set_Opacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Opacity">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.AllowDrop">
          <apidata name="AllowDrop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowDrop" />
          <setter name="set_AllowDrop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.AllowDrop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Visibility">
          <apidata name="Visibility" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Visibility" />
          <setter name="set_Visibility" />
          <returns>
            <type api="T:Windows.UI.Xaml.Visibility" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Visibility">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.UseLayoutRounding">
          <apidata name="UseLayoutRounding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_UseLayoutRounding" />
          <setter name="set_UseLayoutRounding" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.UseLayoutRounding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Transitions">
          <apidata name="Transitions" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Transitions" />
          <setter name="set_Transitions" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Animation.TransitionCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Transitions">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransformOrigin">
          <apidata name="RenderTransformOrigin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransformOrigin" />
          <setter name="set_RenderTransformOrigin" />
          <returns>
            <type api="T:Windows.Foundation.Point" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransformOrigin">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransform">
          <apidata name="RenderTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransform" />
          <setter name="set_RenderTransform" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Transform" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransform">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Projection">
          <apidata name="Projection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Projection" />
          <setter name="set_Projection" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Projection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Projection">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.DesiredSize">
          <apidata name="DesiredSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DesiredSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.DesiredSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.PointerCaptures">
          <apidata name="PointerCaptures" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_PointerCaptures" />
          <returns>
            <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.PointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderSize">
          <apidata name="RenderSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_RenderSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DoubleTapped">
          <apidata name="DoubleTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DoubleTapped" />
          <remover name="remove_DoubleTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DoubleTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragEnter">
          <apidata name="DragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragEnter" />
          <remover name="remove_DragEnter" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragEnter">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragLeave">
          <apidata name="DragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragLeave" />
          <remover name="remove_DragLeave" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragLeave">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragOver">
          <apidata name="DragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragOver" />
          <remover name="remove_DragOver" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragOver">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Drop">
          <apidata name="Drop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Drop" />
          <remover name="remove_Drop" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Drop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.GotFocus">
          <apidata name="GotFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotFocus" />
          <remover name="remove_GotFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.GotFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Holding">
          <apidata name="Holding" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Holding" />
          <remover name="remove_Holding" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.HoldingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Holding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyDown">
          <apidata name="KeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyDown" />
          <remover name="remove_KeyDown" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyDown">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyUp">
          <apidata name="KeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyUp" />
          <remover name="remove_KeyUp" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyUp">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.LostFocus">
          <apidata name="LostFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostFocus" />
          <remover name="remove_LostFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.LostFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationCompleted">
          <apidata name="ManipulationCompleted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationCompleted" />
          <remover name="remove_ManipulationCompleted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationCompleted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationDelta">
          <apidata name="ManipulationDelta" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationDelta" />
          <remover name="remove_ManipulationDelta" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationDelta">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationInertiaStarting">
          <apidata name="ManipulationInertiaStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationInertiaStarting" />
          <remover name="remove_ManipulationInertiaStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationInertiaStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarted">
          <apidata name="ManipulationStarted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarted" />
          <remover name="remove_ManipulationStarted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarting">
          <apidata name="ManipulationStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarting" />
          <remover name="remove_ManipulationStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCanceled">
          <apidata name="PointerCanceled" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCanceled" />
          <remover name="remove_PointerCanceled" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCanceled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCaptureLost">
          <apidata name="PointerCaptureLost" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCaptureLost" />
          <remover name="remove_PointerCaptureLost" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCaptureLost">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerEntered">
          <apidata name="PointerEntered" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerEntered" />
          <remover name="remove_PointerEntered" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerEntered">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerExited">
          <apidata name="PointerExited" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerExited" />
          <remover name="remove_PointerExited" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerExited">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerMoved">
          <apidata name="PointerMoved" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerMoved" />
          <remover name="remove_PointerMoved" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerMoved">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerPressed">
          <apidata name="PointerPressed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerPressed" />
          <remover name="remove_PointerPressed" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerPressed">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerReleased">
          <apidata name="PointerReleased" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerReleased" />
          <remover name="remove_PointerReleased" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerReleased">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerWheelChanged">
          <apidata name="PointerWheelChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerWheelChanged" />
          <remover name="remove_PointerWheelChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerWheelChanged">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.RightTapped">
          <apidata name="RightTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_RightTapped" />
          <remover name="remove_RightTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.RightTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.RightTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Tapped">
          <apidata name="Tapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Tapped" />
          <remover name="remove_Tapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.TappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Tapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ReadLocalValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetAnimationBaseValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.DependencyObject.Dispatcher">
          <apidata name="Dispatcher" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Dispatcher" />
          <returns>
            <type api="T:Windows.UI.Core.CoreDispatcher" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IDependencyObject.Dispatcher">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.FlashCardPage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.FlashCardPage._contentLoaded">
      <apidata name="_contentLoaded" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.FlashCardPage.backCard">
      <apidata name="backCard" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Border" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.FlashCardPage.base64image(System.String)">
      <apidata name="base64image" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="base64string">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:Windows.UI.Xaml.Media.Imaging.BitmapImage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.FlashCardPage.Connect(System.Int32,System.Object)">
      <apidata name="Connect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="connectionId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
          <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.FlashCardPage.ContentRoot">
      <apidata name="ContentRoot" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Grid" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.FlashCardPage.defaultViewModel">
      <apidata name="defaultViewModel" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Templates.FlashCardPage.DefaultViewModel">
      <apidata name="DefaultViewModel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultViewModel" />
      <returns>
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.FlashCardPage.flash">
      <apidata name="flash" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Models.FlashModel" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.FlashCardPage.FlashCard">
      <apidata name="FlashCard" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Image" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.FlashCardPage.FlashHint">
      <apidata name="FlashHint" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.FlashCardPage.FlashNumber">
      <apidata name="FlashNumber" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.FlashCardPage.FlashQuestion">
      <apidata name="FlashQuestion" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.FlashCardPage.FlashText">
      <apidata name="FlashText" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.FlashCardPage.Flip">
      <apidata name="Flip" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.FlashCardPage.Flip_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Flip_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.FlashCardPage.FlipCardBack">
      <apidata name="FlipCardBack" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.VisualState" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.FlashCardPage.FlipCardFront">
      <apidata name="FlipCardFront" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.VisualState" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.FlashCardPage.frontCard">
      <apidata name="frontCard" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Border" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.FlashCardPage.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.FlashCardPage.iQuestionIndex">
      <apidata name="iQuestionIndex" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.FlashCardPage.isFlipped">
      <apidata name="isFlipped" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.FlashCardPage.LayoutRoot">
      <apidata name="LayoutRoot" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Grid" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.FlashCardPage.navigationHelper">
      <apidata name="navigationHelper" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Templates.FlashCardPage.NavigationHelper">
      <apidata name="NavigationHelper" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NavigationHelper" />
      <returns>
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.FlashCardPage.NavigationHelper_LoadState(System.Object,AppStore.Common.LoadStateEventArgs)">
      <apidata name="NavigationHelper_LoadState" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:AppStore.Common.LoadStateEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.FlashCardPage.NavigationHelper_SaveState(System.Object,AppStore.Common.SaveStateEventArgs)">
      <apidata name="NavigationHelper_SaveState" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:AppStore.Common.SaveStateEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.FlashCardPage.Next">
      <apidata name="Next" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.FlashCardPage.Next_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Next_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.FlashCardPage.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedFrom" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.FlashCardPage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedTo" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.FlashCardPage.pageTitle">
      <apidata name="pageTitle" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.FlashCardPage.populateQuestion(System.Int32)">
      <apidata name="populateQuestion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.FlashCardPage.Previous">
      <apidata name="Previous" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.FlashCardPage.Previous_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Previous_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.FlashCardPage.VisualStateGroup">
      <apidata name="VisualStateGroup" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.VisualStateGroup" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.FlashCardPage" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.Templates.InfoDetailPage">
      <apidata name="InfoDetailPage" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="F:AppStore.Templates.InfoDetailPage.navigationHelper" />
        <element api="F:AppStore.Templates.InfoDetailPage.defaultViewModel" />
        <element api="F:AppStore.Templates.InfoDetailPage.LayoutRoot" />
        <element api="F:AppStore.Templates.InfoDetailPage.ContentRoot" />
        <element api="F:AppStore.Templates.InfoDetailPage.InfoTitle" />
        <element api="F:AppStore.Templates.InfoDetailPage.InfoDescription" />
        <element api="F:AppStore.Templates.InfoDetailPage.pageTitle" />
        <element api="F:AppStore.Templates.InfoDetailPage._contentLoaded" />
        <element api="M:AppStore.Templates.InfoDetailPage.#ctor" />
        <element api="M:AppStore.Templates.InfoDetailPage.NavigationHelper_LoadState(System.Object,AppStore.Common.LoadStateEventArgs)" />
        <element api="M:AppStore.Templates.InfoDetailPage.NavigationHelper_SaveState(System.Object,AppStore.Common.SaveStateEventArgs)" />
        <element api="M:AppStore.Templates.InfoDetailPage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.Templates.InfoDetailPage.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.Templates.InfoDetailPage.InitializeComponent" />
        <element api="M:AppStore.Templates.InfoDetailPage.Connect(System.Int32,System.Object)" />
        <element api="P:AppStore.Templates.InfoDetailPage.NavigationHelper" />
        <element api="P:AppStore.Templates.InfoDetailPage.DefaultViewModel" />
        <element api="M:Windows.UI.Xaml.Controls.Page.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
          <apidata name="OnNavigatingFrom" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IPageOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.TopAppBar">
          <apidata name="TopAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TopAppBar" />
          <setter name="set_TopAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.TopAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.NavigationCacheMode">
          <apidata name="NavigationCacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_NavigationCacheMode" />
          <setter name="set_NavigationCacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Navigation.NavigationCacheMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.NavigationCacheMode">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.BottomAppBar">
          <apidata name="BottomAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BottomAppBar" />
          <setter name="set_BottomAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.BottomAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.Frame">
          <apidata name="Frame" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Frame" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.Frame" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.Frame">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.UserControl.Content">
          <apidata name="Content" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Content" />
          <setter name="set_Content" />
          <returns>
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IUserControl.Content">
              <type api="T:Windows.UI.Xaml.Controls.IUserControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.ApplyTemplate">
          <apidata name="ApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.ApplyTemplate">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.Focus(Windows.UI.Xaml.FocusState)">
          <apidata name="Focus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.Focus(Windows.UI.Xaml.FocusState)">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerEntered" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerPressed" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerMoved" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerReleased" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerExited" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCaptureLost" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCanceled" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerWheelChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
          <apidata name="OnTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
          <apidata name="OnDoubleTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
          <apidata name="OnHolding" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
          <apidata name="OnRightTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
          <apidata name="OnManipulationStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
          <apidata name="OnManipulationInertiaStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
          <apidata name="OnManipulationStarted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
          <apidata name="OnManipulationDelta" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
          <apidata name="OnManipulationCompleted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnGotFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnLostFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDrop(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDrop(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.GetTemplateChild(System.String)">
          <apidata name="GetTemplateChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="childName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlProtected.GetTemplateChild(System.String)">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStyle">
          <apidata name="FontStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStyle" />
          <setter name="set_FontStyle" />
          <returns>
            <type api="T:Windows.UI.Text.FontStyle" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStyle">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStretch">
          <apidata name="FontStretch" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStretch" />
          <setter name="set_FontStretch" />
          <returns>
            <type api="T:Windows.UI.Text.FontStretch" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStretch">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontSize">
          <apidata name="FontSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontSize" />
          <setter name="set_FontSize" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontSize">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontFamily">
          <apidata name="FontFamily" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontFamily" />
          <setter name="set_FontFamily" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.FontFamily" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontFamily">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontWeight">
          <apidata name="FontWeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontWeight" />
          <setter name="set_FontWeight" />
          <returns>
            <type api="T:Windows.UI.Text.FontWeight" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontWeight">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.CharacterSpacing">
          <apidata name="CharacterSpacing" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CharacterSpacing" />
          <setter name="set_CharacterSpacing" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.CharacterSpacing">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderThickness">
          <apidata name="BorderThickness" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderThickness" />
          <setter name="set_BorderThickness" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderThickness">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderBrush">
          <apidata name="BorderBrush" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderBrush" />
          <setter name="set_BorderBrush" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderBrush">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Background">
          <apidata name="Background" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Background" />
          <setter name="set_Background" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Background">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Foreground">
          <apidata name="Foreground" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Foreground" />
          <setter name="set_Foreground" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Foreground">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.VerticalContentAlignment">
          <apidata name="VerticalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalContentAlignment" />
          <setter name="set_VerticalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.VerticalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Template">
          <apidata name="Template" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Template" />
          <setter name="set_Template" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.ControlTemplate" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Template">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabNavigation">
          <apidata name="TabNavigation" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabNavigation" />
          <setter name="set_TabNavigation" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.KeyboardNavigationMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabNavigation">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabIndex">
          <apidata name="TabIndex" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabIndex" />
          <setter name="set_TabIndex" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabIndex">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Padding">
          <apidata name="Padding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Padding" />
          <setter name="set_Padding" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Padding">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTabStop">
          <apidata name="IsTabStop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTabStop" />
          <setter name="set_IsTabStop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsTabStop">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsEnabled">
          <apidata name="IsEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsEnabled" />
          <setter name="set_IsEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.HorizontalContentAlignment">
          <apidata name="HorizontalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalContentAlignment" />
          <setter name="set_HorizontalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.HorizontalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FocusState">
          <apidata name="FocusState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_FocusState" />
          <returns>
            <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FocusState">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.DefaultStyleKey">
          <apidata name="DefaultStyleKey" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DefaultStyleKey" />
          <setter name="set_DefaultStyleKey" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControlProtected.DefaultStyleKey">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTextScaleFactorEnabled">
          <apidata name="IsTextScaleFactorEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTextScaleFactorEnabled" />
          <setter name="set_IsTextScaleFactorEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl2.IsTextScaleFactorEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.Controls.Control.IsEnabledChanged">
          <apidata name="IsEnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsEnabledChanged" />
          <remover name="remove_IsEnabledChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.Controls.IControl.IsEnabledChanged">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.FindName(System.String)">
          <apidata name="FindName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="name" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.FindName(System.String)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="binding" in="true">
              <type api="T:Windows.UI.Xaml.Data.BindingBase" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetBindingExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Data.BindingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement2.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.MeasureOverride(Windows.Foundation.Size)">
          <apidata name="MeasureOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.MeasureOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.ArrangeOverride(Windows.Foundation.Size)">
          <apidata name="ArrangeOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="finalSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.ArrangeOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.OnApplyTemplate">
          <apidata name="OnApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.OnApplyTemplate">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GoToElementStateCore(System.String,System.Boolean)">
          <apidata name="GoToElementStateCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="stateName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="useTransitions" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides2.GoToElementStateCore(System.String,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Margin">
          <apidata name="Margin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Margin" />
          <setter name="set_Margin" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Margin">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Language">
          <apidata name="Language" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Language" />
          <setter name="set_Language" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Language">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.HorizontalAlignment">
          <apidata name="HorizontalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalAlignment" />
          <setter name="set_HorizontalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.HorizontalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.FlowDirection">
          <apidata name="FlowDirection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FlowDirection" />
          <setter name="set_FlowDirection" />
          <returns>
            <type api="T:Windows.UI.Xaml.FlowDirection" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.FlowDirection">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.DataContext">
          <apidata name="DataContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DataContext" />
          <setter name="set_DataContext" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.DataContext">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.VerticalAlignment">
          <apidata name="VerticalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalAlignment" />
          <setter name="set_VerticalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.VerticalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxWidth">
          <apidata name="MaxWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxWidth" />
          <setter name="set_MaxWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxHeight">
          <apidata name="MaxHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxHeight" />
          <setter name="set_MaxHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Height">
          <apidata name="Height" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Height" />
          <setter name="set_Height" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Height">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinHeight">
          <apidata name="MinHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinHeight" />
          <setter name="set_MinHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Width">
          <apidata name="Width" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Width" />
          <setter name="set_Width" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Width">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Tag">
          <apidata name="Tag" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Tag" />
          <setter name="set_Tag" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Tag">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Style">
          <apidata name="Style" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Style" />
          <setter name="set_Style" />
          <returns>
            <type api="T:Windows.UI.Xaml.Style" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Style">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Resources">
          <apidata name="Resources" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Resources" />
          <setter name="set_Resources" />
          <returns>
            <type api="T:Windows.UI.Xaml.ResourceDictionary" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Resources">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Name">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinWidth">
          <apidata name="MinWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinWidth" />
          <setter name="set_MinWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualWidth">
          <apidata name="ActualWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.BaseUri">
          <apidata name="BaseUri" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_BaseUri" />
          <returns>
            <type api="T:System.Uri" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.BaseUri">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Parent">
          <apidata name="Parent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Parent" />
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Parent">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Triggers">
          <apidata name="Triggers" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Triggers" />
          <returns>
            <type api="T:Windows.UI.Xaml.TriggerCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Triggers">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualHeight">
          <apidata name="ActualHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.RequestedTheme">
          <apidata name="RequestedTheme" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestedTheme" />
          <setter name="set_RequestedTheme" />
          <returns>
            <type api="T:Windows.UI.Xaml.ElementTheme" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement2.RequestedTheme">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.LayoutUpdated">
          <apidata name="LayoutUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LayoutUpdated" />
          <remover name="remove_LayoutUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Object" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.LayoutUpdated">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Loaded">
          <apidata name="Loaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Loaded" />
          <remover name="remove_Loaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Loaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.SizeChanged">
          <apidata name="SizeChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_SizeChanged" />
          <remover name="remove_SizeChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.SizeChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.SizeChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.SizeChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Unloaded">
          <apidata name="Unloaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Unloaded" />
          <remover name="remove_Unloaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Unloaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.DataContextChanged">
          <apidata name="DataContextChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DataContextChanged" />
          <remover name="remove_DataContextChanged" />
          <eventhandler>
            <type api="T:Windows.Foundation.TypedEventHandler`2" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
                <type api="T:Windows.UI.Xaml.DataContextChangedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement2.DataContextChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Measure(Windows.Foundation.Size)">
          <apidata name="Measure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Measure(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Arrange(Windows.Foundation.Rect)">
          <apidata name="Arrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="finalRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Arrange(Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="CapturePointer" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="ReleasePointerCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCaptures">
          <apidata name="ReleasePointerCaptures" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="handledEventsToo" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
          <apidata name="RemoveHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
          <apidata name="TransformToVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="visual" in="true">
              <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Media.GeneralTransform" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateMeasure">
          <apidata name="InvalidateMeasure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateMeasure">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateArrange">
          <apidata name="InvalidateArrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateArrange">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.UpdateLayout">
          <apidata name="UpdateLayout" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.UpdateLayout">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CancelDirectManipulations">
          <apidata name="CancelDirectManipulations" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement2.CancelDirectManipulations">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnCreateAutomationPeer">
          <apidata name="OnCreateAutomationPeer" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:Windows.UI.Xaml.Automation.Peers.AutomationPeer" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnCreateAutomationPeer">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnDisconnectVisualChildren">
          <apidata name="OnDisconnectVisualChildren" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnDisconnectVisualChildren">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
          <apidata name="FindSubElementsForTouchTargeting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="point" in="true">
              <type api="T:Windows.Foundation.Point" ref="false" />
            </parameter>
            <parameter name="boundingRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:Windows.Foundation.Point" ref="false" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CompositeMode">
          <apidata name="CompositeMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CompositeMode" />
          <setter name="set_CompositeMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.ElementCompositeMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement2.CompositeMode">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.ManipulationMode">
          <apidata name="ManipulationMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_ManipulationMode" />
          <setter name="set_ManipulationMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.ManipulationModes" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.ManipulationMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsTapEnabled">
          <apidata name="IsTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTapEnabled" />
          <setter name="set_IsTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsRightTapEnabled">
          <apidata name="IsRightTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsRightTapEnabled" />
          <setter name="set_IsRightTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsRightTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHoldingEnabled">
          <apidata name="IsHoldingEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHoldingEnabled" />
          <setter name="set_IsHoldingEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHoldingEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHitTestVisible">
          <apidata name="IsHitTestVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHitTestVisible" />
          <setter name="set_IsHitTestVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHitTestVisible">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsDoubleTapEnabled">
          <apidata name="IsDoubleTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsDoubleTapEnabled" />
          <setter name="set_IsDoubleTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsDoubleTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Clip">
          <apidata name="Clip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Clip" />
          <setter name="set_Clip" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.RectangleGeometry" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Clip">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CacheMode">
          <apidata name="CacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CacheMode" />
          <setter name="set_CacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.CacheMode" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.CacheMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Opacity">
          <apidata name="Opacity" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Opacity" />
          <setter name="set_Opacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Opacity">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.AllowDrop">
          <apidata name="AllowDrop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowDrop" />
          <setter name="set_AllowDrop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.AllowDrop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Visibility">
          <apidata name="Visibility" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Visibility" />
          <setter name="set_Visibility" />
          <returns>
            <type api="T:Windows.UI.Xaml.Visibility" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Visibility">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.UseLayoutRounding">
          <apidata name="UseLayoutRounding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_UseLayoutRounding" />
          <setter name="set_UseLayoutRounding" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.UseLayoutRounding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Transitions">
          <apidata name="Transitions" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Transitions" />
          <setter name="set_Transitions" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Animation.TransitionCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Transitions">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransformOrigin">
          <apidata name="RenderTransformOrigin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransformOrigin" />
          <setter name="set_RenderTransformOrigin" />
          <returns>
            <type api="T:Windows.Foundation.Point" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransformOrigin">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransform">
          <apidata name="RenderTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransform" />
          <setter name="set_RenderTransform" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Transform" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransform">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Projection">
          <apidata name="Projection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Projection" />
          <setter name="set_Projection" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Projection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Projection">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.DesiredSize">
          <apidata name="DesiredSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DesiredSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.DesiredSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.PointerCaptures">
          <apidata name="PointerCaptures" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_PointerCaptures" />
          <returns>
            <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.PointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderSize">
          <apidata name="RenderSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_RenderSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DoubleTapped">
          <apidata name="DoubleTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DoubleTapped" />
          <remover name="remove_DoubleTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DoubleTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragEnter">
          <apidata name="DragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragEnter" />
          <remover name="remove_DragEnter" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragEnter">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragLeave">
          <apidata name="DragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragLeave" />
          <remover name="remove_DragLeave" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragLeave">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragOver">
          <apidata name="DragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragOver" />
          <remover name="remove_DragOver" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragOver">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Drop">
          <apidata name="Drop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Drop" />
          <remover name="remove_Drop" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Drop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.GotFocus">
          <apidata name="GotFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotFocus" />
          <remover name="remove_GotFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.GotFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Holding">
          <apidata name="Holding" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Holding" />
          <remover name="remove_Holding" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.HoldingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Holding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyDown">
          <apidata name="KeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyDown" />
          <remover name="remove_KeyDown" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyDown">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyUp">
          <apidata name="KeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyUp" />
          <remover name="remove_KeyUp" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyUp">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.LostFocus">
          <apidata name="LostFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostFocus" />
          <remover name="remove_LostFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.LostFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationCompleted">
          <apidata name="ManipulationCompleted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationCompleted" />
          <remover name="remove_ManipulationCompleted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationCompleted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationDelta">
          <apidata name="ManipulationDelta" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationDelta" />
          <remover name="remove_ManipulationDelta" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationDelta">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationInertiaStarting">
          <apidata name="ManipulationInertiaStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationInertiaStarting" />
          <remover name="remove_ManipulationInertiaStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationInertiaStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarted">
          <apidata name="ManipulationStarted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarted" />
          <remover name="remove_ManipulationStarted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarting">
          <apidata name="ManipulationStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarting" />
          <remover name="remove_ManipulationStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCanceled">
          <apidata name="PointerCanceled" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCanceled" />
          <remover name="remove_PointerCanceled" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCanceled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCaptureLost">
          <apidata name="PointerCaptureLost" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCaptureLost" />
          <remover name="remove_PointerCaptureLost" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCaptureLost">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerEntered">
          <apidata name="PointerEntered" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerEntered" />
          <remover name="remove_PointerEntered" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerEntered">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerExited">
          <apidata name="PointerExited" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerExited" />
          <remover name="remove_PointerExited" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerExited">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerMoved">
          <apidata name="PointerMoved" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerMoved" />
          <remover name="remove_PointerMoved" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerMoved">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerPressed">
          <apidata name="PointerPressed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerPressed" />
          <remover name="remove_PointerPressed" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerPressed">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerReleased">
          <apidata name="PointerReleased" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerReleased" />
          <remover name="remove_PointerReleased" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerReleased">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerWheelChanged">
          <apidata name="PointerWheelChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerWheelChanged" />
          <remover name="remove_PointerWheelChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerWheelChanged">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.RightTapped">
          <apidata name="RightTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_RightTapped" />
          <remover name="remove_RightTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.RightTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.RightTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Tapped">
          <apidata name="Tapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Tapped" />
          <remover name="remove_Tapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.TappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Tapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ReadLocalValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetAnimationBaseValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.DependencyObject.Dispatcher">
          <apidata name="Dispatcher" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Dispatcher" />
          <returns>
            <type api="T:Windows.UI.Core.CoreDispatcher" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IDependencyObject.Dispatcher">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.InfoDetailPage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoDetailPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.InfoDetailPage._contentLoaded">
      <apidata name="_contentLoaded" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoDetailPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.InfoDetailPage.Connect(System.Int32,System.Object)">
      <apidata name="Connect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="connectionId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
          <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoDetailPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.InfoDetailPage.ContentRoot">
      <apidata name="ContentRoot" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Grid" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoDetailPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.InfoDetailPage.defaultViewModel">
      <apidata name="defaultViewModel" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoDetailPage" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Templates.InfoDetailPage.DefaultViewModel">
      <apidata name="DefaultViewModel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultViewModel" />
      <returns>
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoDetailPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.InfoDetailPage.InfoDescription">
      <apidata name="InfoDescription" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoDetailPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.InfoDetailPage.InfoTitle">
      <apidata name="InfoTitle" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoDetailPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.InfoDetailPage.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoDetailPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.InfoDetailPage.LayoutRoot">
      <apidata name="LayoutRoot" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Grid" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoDetailPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.InfoDetailPage.navigationHelper">
      <apidata name="navigationHelper" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoDetailPage" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Templates.InfoDetailPage.NavigationHelper">
      <apidata name="NavigationHelper" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NavigationHelper" />
      <returns>
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoDetailPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.InfoDetailPage.NavigationHelper_LoadState(System.Object,AppStore.Common.LoadStateEventArgs)">
      <apidata name="NavigationHelper_LoadState" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:AppStore.Common.LoadStateEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoDetailPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.InfoDetailPage.NavigationHelper_SaveState(System.Object,AppStore.Common.SaveStateEventArgs)">
      <apidata name="NavigationHelper_SaveState" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:AppStore.Common.SaveStateEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoDetailPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.InfoDetailPage.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedFrom" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoDetailPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.InfoDetailPage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedTo" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoDetailPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.InfoDetailPage.pageTitle">
      <apidata name="pageTitle" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoDetailPage" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.Templates.InfoPage">
      <apidata name="InfoPage" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="F:AppStore.Templates.InfoPage.navigationHelper" />
        <element api="F:AppStore.Templates.InfoPage.defaultViewModel" />
        <element api="F:AppStore.Templates.InfoPage.info" />
        <element api="F:AppStore.Templates.InfoPage.infoTitle" />
        <element api="F:AppStore.Templates.InfoPage.selectionWordList" />
        <element api="F:AppStore.Templates.InfoPage.LayoutRoot" />
        <element api="F:AppStore.Templates.InfoPage.ContentRoot" />
        <element api="F:AppStore.Templates.InfoPage.InfoList" />
        <element api="F:AppStore.Templates.InfoPage.pageTitle" />
        <element api="F:AppStore.Templates.InfoPage._contentLoaded" />
        <element api="M:AppStore.Templates.InfoPage.#ctor" />
        <element api="M:AppStore.Templates.InfoPage.NavigationHelper_LoadState(System.Object,AppStore.Common.LoadStateEventArgs)" />
        <element api="M:AppStore.Templates.InfoPage.NavigationHelper_SaveState(System.Object,AppStore.Common.SaveStateEventArgs)" />
        <element api="M:AppStore.Templates.InfoPage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.Templates.InfoPage.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.Templates.InfoPage.InfoList_ContainerContentChanging(Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs)" />
        <element api="M:AppStore.Templates.InfoPage.InfoList_SelectionChanged(System.Object,Windows.UI.Xaml.Controls.SelectionChangedEventArgs)" />
        <element api="M:AppStore.Templates.InfoPage.InitializeComponent" />
        <element api="M:AppStore.Templates.InfoPage.Connect(System.Int32,System.Object)" />
        <element api="M:AppStore.Templates.InfoPage.#cctor" />
        <element api="P:AppStore.Templates.InfoPage.NavigationHelper" />
        <element api="P:AppStore.Templates.InfoPage.DefaultViewModel" />
        <element api="M:Windows.UI.Xaml.Controls.Page.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
          <apidata name="OnNavigatingFrom" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IPageOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.TopAppBar">
          <apidata name="TopAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TopAppBar" />
          <setter name="set_TopAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.TopAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.NavigationCacheMode">
          <apidata name="NavigationCacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_NavigationCacheMode" />
          <setter name="set_NavigationCacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Navigation.NavigationCacheMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.NavigationCacheMode">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.BottomAppBar">
          <apidata name="BottomAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BottomAppBar" />
          <setter name="set_BottomAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.BottomAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.Frame">
          <apidata name="Frame" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Frame" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.Frame" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.Frame">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.UserControl.Content">
          <apidata name="Content" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Content" />
          <setter name="set_Content" />
          <returns>
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IUserControl.Content">
              <type api="T:Windows.UI.Xaml.Controls.IUserControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.ApplyTemplate">
          <apidata name="ApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.ApplyTemplate">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.Focus(Windows.UI.Xaml.FocusState)">
          <apidata name="Focus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.Focus(Windows.UI.Xaml.FocusState)">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerEntered" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerPressed" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerMoved" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerReleased" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerExited" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCaptureLost" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCanceled" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerWheelChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
          <apidata name="OnTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
          <apidata name="OnDoubleTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
          <apidata name="OnHolding" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
          <apidata name="OnRightTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
          <apidata name="OnManipulationStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
          <apidata name="OnManipulationInertiaStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
          <apidata name="OnManipulationStarted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
          <apidata name="OnManipulationDelta" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
          <apidata name="OnManipulationCompleted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnGotFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnLostFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDrop(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDrop(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.GetTemplateChild(System.String)">
          <apidata name="GetTemplateChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="childName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlProtected.GetTemplateChild(System.String)">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStyle">
          <apidata name="FontStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStyle" />
          <setter name="set_FontStyle" />
          <returns>
            <type api="T:Windows.UI.Text.FontStyle" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStyle">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStretch">
          <apidata name="FontStretch" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStretch" />
          <setter name="set_FontStretch" />
          <returns>
            <type api="T:Windows.UI.Text.FontStretch" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStretch">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontSize">
          <apidata name="FontSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontSize" />
          <setter name="set_FontSize" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontSize">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontFamily">
          <apidata name="FontFamily" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontFamily" />
          <setter name="set_FontFamily" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.FontFamily" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontFamily">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontWeight">
          <apidata name="FontWeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontWeight" />
          <setter name="set_FontWeight" />
          <returns>
            <type api="T:Windows.UI.Text.FontWeight" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontWeight">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.CharacterSpacing">
          <apidata name="CharacterSpacing" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CharacterSpacing" />
          <setter name="set_CharacterSpacing" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.CharacterSpacing">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderThickness">
          <apidata name="BorderThickness" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderThickness" />
          <setter name="set_BorderThickness" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderThickness">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderBrush">
          <apidata name="BorderBrush" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderBrush" />
          <setter name="set_BorderBrush" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderBrush">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Background">
          <apidata name="Background" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Background" />
          <setter name="set_Background" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Background">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Foreground">
          <apidata name="Foreground" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Foreground" />
          <setter name="set_Foreground" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Foreground">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.VerticalContentAlignment">
          <apidata name="VerticalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalContentAlignment" />
          <setter name="set_VerticalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.VerticalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Template">
          <apidata name="Template" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Template" />
          <setter name="set_Template" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.ControlTemplate" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Template">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabNavigation">
          <apidata name="TabNavigation" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabNavigation" />
          <setter name="set_TabNavigation" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.KeyboardNavigationMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabNavigation">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabIndex">
          <apidata name="TabIndex" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabIndex" />
          <setter name="set_TabIndex" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabIndex">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Padding">
          <apidata name="Padding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Padding" />
          <setter name="set_Padding" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Padding">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTabStop">
          <apidata name="IsTabStop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTabStop" />
          <setter name="set_IsTabStop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsTabStop">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsEnabled">
          <apidata name="IsEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsEnabled" />
          <setter name="set_IsEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.HorizontalContentAlignment">
          <apidata name="HorizontalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalContentAlignment" />
          <setter name="set_HorizontalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.HorizontalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FocusState">
          <apidata name="FocusState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_FocusState" />
          <returns>
            <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FocusState">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.DefaultStyleKey">
          <apidata name="DefaultStyleKey" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DefaultStyleKey" />
          <setter name="set_DefaultStyleKey" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControlProtected.DefaultStyleKey">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTextScaleFactorEnabled">
          <apidata name="IsTextScaleFactorEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTextScaleFactorEnabled" />
          <setter name="set_IsTextScaleFactorEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl2.IsTextScaleFactorEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.Controls.Control.IsEnabledChanged">
          <apidata name="IsEnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsEnabledChanged" />
          <remover name="remove_IsEnabledChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.Controls.IControl.IsEnabledChanged">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.FindName(System.String)">
          <apidata name="FindName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="name" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.FindName(System.String)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="binding" in="true">
              <type api="T:Windows.UI.Xaml.Data.BindingBase" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetBindingExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Data.BindingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement2.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.MeasureOverride(Windows.Foundation.Size)">
          <apidata name="MeasureOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.MeasureOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.ArrangeOverride(Windows.Foundation.Size)">
          <apidata name="ArrangeOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="finalSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.ArrangeOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.OnApplyTemplate">
          <apidata name="OnApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.OnApplyTemplate">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GoToElementStateCore(System.String,System.Boolean)">
          <apidata name="GoToElementStateCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="stateName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="useTransitions" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides2.GoToElementStateCore(System.String,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Margin">
          <apidata name="Margin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Margin" />
          <setter name="set_Margin" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Margin">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Language">
          <apidata name="Language" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Language" />
          <setter name="set_Language" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Language">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.HorizontalAlignment">
          <apidata name="HorizontalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalAlignment" />
          <setter name="set_HorizontalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.HorizontalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.FlowDirection">
          <apidata name="FlowDirection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FlowDirection" />
          <setter name="set_FlowDirection" />
          <returns>
            <type api="T:Windows.UI.Xaml.FlowDirection" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.FlowDirection">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.DataContext">
          <apidata name="DataContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DataContext" />
          <setter name="set_DataContext" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.DataContext">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.VerticalAlignment">
          <apidata name="VerticalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalAlignment" />
          <setter name="set_VerticalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.VerticalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxWidth">
          <apidata name="MaxWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxWidth" />
          <setter name="set_MaxWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxHeight">
          <apidata name="MaxHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxHeight" />
          <setter name="set_MaxHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Height">
          <apidata name="Height" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Height" />
          <setter name="set_Height" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Height">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinHeight">
          <apidata name="MinHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinHeight" />
          <setter name="set_MinHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Width">
          <apidata name="Width" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Width" />
          <setter name="set_Width" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Width">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Tag">
          <apidata name="Tag" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Tag" />
          <setter name="set_Tag" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Tag">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Style">
          <apidata name="Style" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Style" />
          <setter name="set_Style" />
          <returns>
            <type api="T:Windows.UI.Xaml.Style" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Style">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Resources">
          <apidata name="Resources" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Resources" />
          <setter name="set_Resources" />
          <returns>
            <type api="T:Windows.UI.Xaml.ResourceDictionary" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Resources">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Name">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinWidth">
          <apidata name="MinWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinWidth" />
          <setter name="set_MinWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualWidth">
          <apidata name="ActualWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.BaseUri">
          <apidata name="BaseUri" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_BaseUri" />
          <returns>
            <type api="T:System.Uri" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.BaseUri">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Parent">
          <apidata name="Parent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Parent" />
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Parent">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Triggers">
          <apidata name="Triggers" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Triggers" />
          <returns>
            <type api="T:Windows.UI.Xaml.TriggerCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Triggers">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualHeight">
          <apidata name="ActualHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.RequestedTheme">
          <apidata name="RequestedTheme" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestedTheme" />
          <setter name="set_RequestedTheme" />
          <returns>
            <type api="T:Windows.UI.Xaml.ElementTheme" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement2.RequestedTheme">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.LayoutUpdated">
          <apidata name="LayoutUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LayoutUpdated" />
          <remover name="remove_LayoutUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Object" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.LayoutUpdated">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Loaded">
          <apidata name="Loaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Loaded" />
          <remover name="remove_Loaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Loaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.SizeChanged">
          <apidata name="SizeChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_SizeChanged" />
          <remover name="remove_SizeChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.SizeChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.SizeChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.SizeChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Unloaded">
          <apidata name="Unloaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Unloaded" />
          <remover name="remove_Unloaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Unloaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.DataContextChanged">
          <apidata name="DataContextChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DataContextChanged" />
          <remover name="remove_DataContextChanged" />
          <eventhandler>
            <type api="T:Windows.Foundation.TypedEventHandler`2" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
                <type api="T:Windows.UI.Xaml.DataContextChangedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement2.DataContextChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Measure(Windows.Foundation.Size)">
          <apidata name="Measure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Measure(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Arrange(Windows.Foundation.Rect)">
          <apidata name="Arrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="finalRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Arrange(Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="CapturePointer" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="ReleasePointerCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCaptures">
          <apidata name="ReleasePointerCaptures" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="handledEventsToo" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
          <apidata name="RemoveHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
          <apidata name="TransformToVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="visual" in="true">
              <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Media.GeneralTransform" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateMeasure">
          <apidata name="InvalidateMeasure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateMeasure">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateArrange">
          <apidata name="InvalidateArrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateArrange">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.UpdateLayout">
          <apidata name="UpdateLayout" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.UpdateLayout">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CancelDirectManipulations">
          <apidata name="CancelDirectManipulations" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement2.CancelDirectManipulations">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnCreateAutomationPeer">
          <apidata name="OnCreateAutomationPeer" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:Windows.UI.Xaml.Automation.Peers.AutomationPeer" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnCreateAutomationPeer">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnDisconnectVisualChildren">
          <apidata name="OnDisconnectVisualChildren" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnDisconnectVisualChildren">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
          <apidata name="FindSubElementsForTouchTargeting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="point" in="true">
              <type api="T:Windows.Foundation.Point" ref="false" />
            </parameter>
            <parameter name="boundingRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:Windows.Foundation.Point" ref="false" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CompositeMode">
          <apidata name="CompositeMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CompositeMode" />
          <setter name="set_CompositeMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.ElementCompositeMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement2.CompositeMode">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.ManipulationMode">
          <apidata name="ManipulationMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_ManipulationMode" />
          <setter name="set_ManipulationMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.ManipulationModes" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.ManipulationMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsTapEnabled">
          <apidata name="IsTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTapEnabled" />
          <setter name="set_IsTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsRightTapEnabled">
          <apidata name="IsRightTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsRightTapEnabled" />
          <setter name="set_IsRightTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsRightTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHoldingEnabled">
          <apidata name="IsHoldingEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHoldingEnabled" />
          <setter name="set_IsHoldingEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHoldingEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHitTestVisible">
          <apidata name="IsHitTestVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHitTestVisible" />
          <setter name="set_IsHitTestVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHitTestVisible">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsDoubleTapEnabled">
          <apidata name="IsDoubleTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsDoubleTapEnabled" />
          <setter name="set_IsDoubleTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsDoubleTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Clip">
          <apidata name="Clip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Clip" />
          <setter name="set_Clip" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.RectangleGeometry" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Clip">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CacheMode">
          <apidata name="CacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CacheMode" />
          <setter name="set_CacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.CacheMode" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.CacheMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Opacity">
          <apidata name="Opacity" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Opacity" />
          <setter name="set_Opacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Opacity">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.AllowDrop">
          <apidata name="AllowDrop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowDrop" />
          <setter name="set_AllowDrop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.AllowDrop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Visibility">
          <apidata name="Visibility" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Visibility" />
          <setter name="set_Visibility" />
          <returns>
            <type api="T:Windows.UI.Xaml.Visibility" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Visibility">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.UseLayoutRounding">
          <apidata name="UseLayoutRounding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_UseLayoutRounding" />
          <setter name="set_UseLayoutRounding" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.UseLayoutRounding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Transitions">
          <apidata name="Transitions" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Transitions" />
          <setter name="set_Transitions" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Animation.TransitionCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Transitions">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransformOrigin">
          <apidata name="RenderTransformOrigin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransformOrigin" />
          <setter name="set_RenderTransformOrigin" />
          <returns>
            <type api="T:Windows.Foundation.Point" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransformOrigin">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransform">
          <apidata name="RenderTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransform" />
          <setter name="set_RenderTransform" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Transform" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransform">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Projection">
          <apidata name="Projection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Projection" />
          <setter name="set_Projection" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Projection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Projection">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.DesiredSize">
          <apidata name="DesiredSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DesiredSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.DesiredSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.PointerCaptures">
          <apidata name="PointerCaptures" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_PointerCaptures" />
          <returns>
            <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.PointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderSize">
          <apidata name="RenderSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_RenderSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DoubleTapped">
          <apidata name="DoubleTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DoubleTapped" />
          <remover name="remove_DoubleTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DoubleTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragEnter">
          <apidata name="DragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragEnter" />
          <remover name="remove_DragEnter" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragEnter">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragLeave">
          <apidata name="DragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragLeave" />
          <remover name="remove_DragLeave" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragLeave">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragOver">
          <apidata name="DragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragOver" />
          <remover name="remove_DragOver" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragOver">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Drop">
          <apidata name="Drop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Drop" />
          <remover name="remove_Drop" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Drop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.GotFocus">
          <apidata name="GotFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotFocus" />
          <remover name="remove_GotFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.GotFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Holding">
          <apidata name="Holding" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Holding" />
          <remover name="remove_Holding" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.HoldingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Holding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyDown">
          <apidata name="KeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyDown" />
          <remover name="remove_KeyDown" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyDown">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyUp">
          <apidata name="KeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyUp" />
          <remover name="remove_KeyUp" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyUp">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.LostFocus">
          <apidata name="LostFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostFocus" />
          <remover name="remove_LostFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.LostFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationCompleted">
          <apidata name="ManipulationCompleted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationCompleted" />
          <remover name="remove_ManipulationCompleted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationCompleted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationDelta">
          <apidata name="ManipulationDelta" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationDelta" />
          <remover name="remove_ManipulationDelta" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationDelta">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationInertiaStarting">
          <apidata name="ManipulationInertiaStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationInertiaStarting" />
          <remover name="remove_ManipulationInertiaStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationInertiaStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarted">
          <apidata name="ManipulationStarted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarted" />
          <remover name="remove_ManipulationStarted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarting">
          <apidata name="ManipulationStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarting" />
          <remover name="remove_ManipulationStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCanceled">
          <apidata name="PointerCanceled" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCanceled" />
          <remover name="remove_PointerCanceled" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCanceled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCaptureLost">
          <apidata name="PointerCaptureLost" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCaptureLost" />
          <remover name="remove_PointerCaptureLost" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCaptureLost">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerEntered">
          <apidata name="PointerEntered" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerEntered" />
          <remover name="remove_PointerEntered" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerEntered">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerExited">
          <apidata name="PointerExited" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerExited" />
          <remover name="remove_PointerExited" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerExited">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerMoved">
          <apidata name="PointerMoved" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerMoved" />
          <remover name="remove_PointerMoved" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerMoved">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerPressed">
          <apidata name="PointerPressed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerPressed" />
          <remover name="remove_PointerPressed" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerPressed">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerReleased">
          <apidata name="PointerReleased" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerReleased" />
          <remover name="remove_PointerReleased" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerReleased">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerWheelChanged">
          <apidata name="PointerWheelChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerWheelChanged" />
          <remover name="remove_PointerWheelChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerWheelChanged">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.RightTapped">
          <apidata name="RightTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_RightTapped" />
          <remover name="remove_RightTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.RightTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.RightTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Tapped">
          <apidata name="Tapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Tapped" />
          <remover name="remove_Tapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.TappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Tapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ReadLocalValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetAnimationBaseValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.DependencyObject.Dispatcher">
          <apidata name="Dispatcher" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Dispatcher" />
          <returns>
            <type api="T:Windows.UI.Core.CoreDispatcher" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IDependencyObject.Dispatcher">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.InfoPage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.InfoPage.#cctor">
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.InfoPage._contentLoaded">
      <apidata name="_contentLoaded" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.InfoPage.Connect(System.Int32,System.Object)">
      <apidata name="Connect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="connectionId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
          <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.InfoPage.ContentRoot">
      <apidata name="ContentRoot" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Grid" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.InfoPage.defaultViewModel">
      <apidata name="defaultViewModel" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoPage" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Templates.InfoPage.DefaultViewModel">
      <apidata name="DefaultViewModel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultViewModel" />
      <returns>
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.InfoPage.info">
      <apidata name="info" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Models.InfoModel" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.InfoPage.InfoList">
      <apidata name="InfoList" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.ListView" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.InfoPage.InfoList_ContainerContentChanging(Windows.UI.Xaml.Controls.ListViewBase,Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs)">
      <apidata name="InfoList_ContainerContentChanging" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:Windows.UI.Xaml.Controls.ListViewBase" ref="true" />
        </parameter>
        <parameter name="args">
          <type api="T:Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.InfoPage.InfoList_SelectionChanged(System.Object,Windows.UI.Xaml.Controls.SelectionChangedEventArgs)">
      <apidata name="InfoList_SelectionChanged" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Controls.SelectionChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.InfoPage.infoTitle">
      <apidata name="infoTitle" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.InfoPage.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.InfoPage.LayoutRoot">
      <apidata name="LayoutRoot" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Grid" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.InfoPage.navigationHelper">
      <apidata name="navigationHelper" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoPage" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Templates.InfoPage.NavigationHelper">
      <apidata name="NavigationHelper" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NavigationHelper" />
      <returns>
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.InfoPage.NavigationHelper_LoadState(System.Object,AppStore.Common.LoadStateEventArgs)">
      <apidata name="NavigationHelper_LoadState" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:AppStore.Common.LoadStateEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.InfoPage.NavigationHelper_SaveState(System.Object,AppStore.Common.SaveStateEventArgs)">
      <apidata name="NavigationHelper_SaveState" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:AppStore.Common.SaveStateEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.InfoPage.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedFrom" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.InfoPage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedTo" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.InfoPage.pageTitle">
      <apidata name="pageTitle" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.InfoPage.selectionWordList">
      <apidata name="selectionWordList" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.InfoPage" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.Templates.QuizPage">
      <apidata name="QuizPage" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="F:AppStore.Templates.QuizPage.navigationHelper" />
        <element api="F:AppStore.Templates.QuizPage.defaultViewModel" />
        <element api="F:AppStore.Templates.QuizPage.quiz" />
        <element api="F:AppStore.Templates.QuizPage.iQuestionIndex" />
        <element api="F:AppStore.Templates.QuizPage.iCurrentCorrectAnswer" />
        <element api="F:AppStore.Templates.QuizPage.iNumberofQuestions" />
        <element api="F:AppStore.Templates.QuizPage.LayoutRoot" />
        <element api="F:AppStore.Templates.QuizPage.ContentRoot" />
        <element api="F:AppStore.Templates.QuizPage.QuestionContent" />
        <element api="F:AppStore.Templates.QuizPage.QuestionNumber" />
        <element api="F:AppStore.Templates.QuizPage.Question" />
        <element api="F:AppStore.Templates.QuizPage.Option1" />
        <element api="F:AppStore.Templates.QuizPage.Option2" />
        <element api="F:AppStore.Templates.QuizPage.Option3" />
        <element api="F:AppStore.Templates.QuizPage.Option4" />
        <element api="F:AppStore.Templates.QuizPage.Skip" />
        <element api="F:AppStore.Templates.QuizPage.Next" />
        <element api="F:AppStore.Templates.QuizPage.pageTitle" />
        <element api="F:AppStore.Templates.QuizPage._contentLoaded" />
        <element api="M:AppStore.Templates.QuizPage.#ctor" />
        <element api="M:AppStore.Templates.QuizPage.NavigationHelper_LoadState(System.Object,AppStore.Common.LoadStateEventArgs)" />
        <element api="M:AppStore.Templates.QuizPage.NavigationHelper_SaveState(System.Object,AppStore.Common.SaveStateEventArgs)" />
        <element api="M:AppStore.Templates.QuizPage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.Templates.QuizPage.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.Templates.QuizPage.Options_Checked(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.Templates.QuizPage.Next_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.Templates.QuizPage.populateQuestion(System.Int32)" />
        <element api="M:AppStore.Templates.QuizPage.InitializeComponent" />
        <element api="M:AppStore.Templates.QuizPage.Connect(System.Int32,System.Object)" />
        <element api="P:AppStore.Templates.QuizPage.NavigationHelper" />
        <element api="P:AppStore.Templates.QuizPage.DefaultViewModel" />
        <element api="M:Windows.UI.Xaml.Controls.Page.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
          <apidata name="OnNavigatingFrom" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IPageOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.TopAppBar">
          <apidata name="TopAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TopAppBar" />
          <setter name="set_TopAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.TopAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.NavigationCacheMode">
          <apidata name="NavigationCacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_NavigationCacheMode" />
          <setter name="set_NavigationCacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Navigation.NavigationCacheMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.NavigationCacheMode">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.BottomAppBar">
          <apidata name="BottomAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BottomAppBar" />
          <setter name="set_BottomAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.BottomAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.Frame">
          <apidata name="Frame" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Frame" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.Frame" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.Frame">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.UserControl.Content">
          <apidata name="Content" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Content" />
          <setter name="set_Content" />
          <returns>
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IUserControl.Content">
              <type api="T:Windows.UI.Xaml.Controls.IUserControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.ApplyTemplate">
          <apidata name="ApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.ApplyTemplate">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.Focus(Windows.UI.Xaml.FocusState)">
          <apidata name="Focus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.Focus(Windows.UI.Xaml.FocusState)">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerEntered" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerPressed" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerMoved" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerReleased" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerExited" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCaptureLost" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCanceled" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerWheelChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
          <apidata name="OnTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
          <apidata name="OnDoubleTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
          <apidata name="OnHolding" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
          <apidata name="OnRightTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
          <apidata name="OnManipulationStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
          <apidata name="OnManipulationInertiaStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
          <apidata name="OnManipulationStarted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
          <apidata name="OnManipulationDelta" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
          <apidata name="OnManipulationCompleted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnGotFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnLostFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDrop(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDrop(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.GetTemplateChild(System.String)">
          <apidata name="GetTemplateChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="childName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlProtected.GetTemplateChild(System.String)">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStyle">
          <apidata name="FontStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStyle" />
          <setter name="set_FontStyle" />
          <returns>
            <type api="T:Windows.UI.Text.FontStyle" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStyle">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStretch">
          <apidata name="FontStretch" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStretch" />
          <setter name="set_FontStretch" />
          <returns>
            <type api="T:Windows.UI.Text.FontStretch" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStretch">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontSize">
          <apidata name="FontSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontSize" />
          <setter name="set_FontSize" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontSize">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontFamily">
          <apidata name="FontFamily" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontFamily" />
          <setter name="set_FontFamily" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.FontFamily" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontFamily">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontWeight">
          <apidata name="FontWeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontWeight" />
          <setter name="set_FontWeight" />
          <returns>
            <type api="T:Windows.UI.Text.FontWeight" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontWeight">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.CharacterSpacing">
          <apidata name="CharacterSpacing" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CharacterSpacing" />
          <setter name="set_CharacterSpacing" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.CharacterSpacing">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderThickness">
          <apidata name="BorderThickness" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderThickness" />
          <setter name="set_BorderThickness" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderThickness">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderBrush">
          <apidata name="BorderBrush" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderBrush" />
          <setter name="set_BorderBrush" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderBrush">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Background">
          <apidata name="Background" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Background" />
          <setter name="set_Background" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Background">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Foreground">
          <apidata name="Foreground" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Foreground" />
          <setter name="set_Foreground" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Foreground">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.VerticalContentAlignment">
          <apidata name="VerticalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalContentAlignment" />
          <setter name="set_VerticalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.VerticalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Template">
          <apidata name="Template" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Template" />
          <setter name="set_Template" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.ControlTemplate" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Template">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabNavigation">
          <apidata name="TabNavigation" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabNavigation" />
          <setter name="set_TabNavigation" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.KeyboardNavigationMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabNavigation">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabIndex">
          <apidata name="TabIndex" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabIndex" />
          <setter name="set_TabIndex" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabIndex">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Padding">
          <apidata name="Padding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Padding" />
          <setter name="set_Padding" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Padding">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTabStop">
          <apidata name="IsTabStop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTabStop" />
          <setter name="set_IsTabStop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsTabStop">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsEnabled">
          <apidata name="IsEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsEnabled" />
          <setter name="set_IsEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.HorizontalContentAlignment">
          <apidata name="HorizontalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalContentAlignment" />
          <setter name="set_HorizontalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.HorizontalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FocusState">
          <apidata name="FocusState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_FocusState" />
          <returns>
            <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FocusState">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.DefaultStyleKey">
          <apidata name="DefaultStyleKey" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DefaultStyleKey" />
          <setter name="set_DefaultStyleKey" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControlProtected.DefaultStyleKey">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTextScaleFactorEnabled">
          <apidata name="IsTextScaleFactorEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTextScaleFactorEnabled" />
          <setter name="set_IsTextScaleFactorEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl2.IsTextScaleFactorEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.Controls.Control.IsEnabledChanged">
          <apidata name="IsEnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsEnabledChanged" />
          <remover name="remove_IsEnabledChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.Controls.IControl.IsEnabledChanged">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.FindName(System.String)">
          <apidata name="FindName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="name" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.FindName(System.String)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="binding" in="true">
              <type api="T:Windows.UI.Xaml.Data.BindingBase" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetBindingExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Data.BindingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement2.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.MeasureOverride(Windows.Foundation.Size)">
          <apidata name="MeasureOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.MeasureOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.ArrangeOverride(Windows.Foundation.Size)">
          <apidata name="ArrangeOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="finalSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.ArrangeOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.OnApplyTemplate">
          <apidata name="OnApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.OnApplyTemplate">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GoToElementStateCore(System.String,System.Boolean)">
          <apidata name="GoToElementStateCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="stateName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="useTransitions" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides2.GoToElementStateCore(System.String,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Margin">
          <apidata name="Margin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Margin" />
          <setter name="set_Margin" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Margin">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Language">
          <apidata name="Language" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Language" />
          <setter name="set_Language" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Language">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.HorizontalAlignment">
          <apidata name="HorizontalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalAlignment" />
          <setter name="set_HorizontalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.HorizontalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.FlowDirection">
          <apidata name="FlowDirection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FlowDirection" />
          <setter name="set_FlowDirection" />
          <returns>
            <type api="T:Windows.UI.Xaml.FlowDirection" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.FlowDirection">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.DataContext">
          <apidata name="DataContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DataContext" />
          <setter name="set_DataContext" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.DataContext">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.VerticalAlignment">
          <apidata name="VerticalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalAlignment" />
          <setter name="set_VerticalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.VerticalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxWidth">
          <apidata name="MaxWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxWidth" />
          <setter name="set_MaxWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxHeight">
          <apidata name="MaxHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxHeight" />
          <setter name="set_MaxHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Height">
          <apidata name="Height" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Height" />
          <setter name="set_Height" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Height">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinHeight">
          <apidata name="MinHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinHeight" />
          <setter name="set_MinHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Width">
          <apidata name="Width" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Width" />
          <setter name="set_Width" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Width">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Tag">
          <apidata name="Tag" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Tag" />
          <setter name="set_Tag" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Tag">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Style">
          <apidata name="Style" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Style" />
          <setter name="set_Style" />
          <returns>
            <type api="T:Windows.UI.Xaml.Style" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Style">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Resources">
          <apidata name="Resources" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Resources" />
          <setter name="set_Resources" />
          <returns>
            <type api="T:Windows.UI.Xaml.ResourceDictionary" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Resources">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Name">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinWidth">
          <apidata name="MinWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinWidth" />
          <setter name="set_MinWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualWidth">
          <apidata name="ActualWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.BaseUri">
          <apidata name="BaseUri" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_BaseUri" />
          <returns>
            <type api="T:System.Uri" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.BaseUri">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Parent">
          <apidata name="Parent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Parent" />
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Parent">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Triggers">
          <apidata name="Triggers" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Triggers" />
          <returns>
            <type api="T:Windows.UI.Xaml.TriggerCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Triggers">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualHeight">
          <apidata name="ActualHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.RequestedTheme">
          <apidata name="RequestedTheme" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestedTheme" />
          <setter name="set_RequestedTheme" />
          <returns>
            <type api="T:Windows.UI.Xaml.ElementTheme" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement2.RequestedTheme">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.LayoutUpdated">
          <apidata name="LayoutUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LayoutUpdated" />
          <remover name="remove_LayoutUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Object" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.LayoutUpdated">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Loaded">
          <apidata name="Loaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Loaded" />
          <remover name="remove_Loaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Loaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.SizeChanged">
          <apidata name="SizeChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_SizeChanged" />
          <remover name="remove_SizeChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.SizeChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.SizeChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.SizeChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Unloaded">
          <apidata name="Unloaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Unloaded" />
          <remover name="remove_Unloaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Unloaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.DataContextChanged">
          <apidata name="DataContextChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DataContextChanged" />
          <remover name="remove_DataContextChanged" />
          <eventhandler>
            <type api="T:Windows.Foundation.TypedEventHandler`2" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
                <type api="T:Windows.UI.Xaml.DataContextChangedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement2.DataContextChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Measure(Windows.Foundation.Size)">
          <apidata name="Measure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Measure(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Arrange(Windows.Foundation.Rect)">
          <apidata name="Arrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="finalRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Arrange(Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="CapturePointer" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="ReleasePointerCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCaptures">
          <apidata name="ReleasePointerCaptures" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="handledEventsToo" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
          <apidata name="RemoveHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
          <apidata name="TransformToVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="visual" in="true">
              <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Media.GeneralTransform" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateMeasure">
          <apidata name="InvalidateMeasure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateMeasure">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateArrange">
          <apidata name="InvalidateArrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateArrange">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.UpdateLayout">
          <apidata name="UpdateLayout" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.UpdateLayout">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CancelDirectManipulations">
          <apidata name="CancelDirectManipulations" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement2.CancelDirectManipulations">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnCreateAutomationPeer">
          <apidata name="OnCreateAutomationPeer" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:Windows.UI.Xaml.Automation.Peers.AutomationPeer" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnCreateAutomationPeer">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnDisconnectVisualChildren">
          <apidata name="OnDisconnectVisualChildren" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnDisconnectVisualChildren">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
          <apidata name="FindSubElementsForTouchTargeting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="point" in="true">
              <type api="T:Windows.Foundation.Point" ref="false" />
            </parameter>
            <parameter name="boundingRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:Windows.Foundation.Point" ref="false" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CompositeMode">
          <apidata name="CompositeMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CompositeMode" />
          <setter name="set_CompositeMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.ElementCompositeMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement2.CompositeMode">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.ManipulationMode">
          <apidata name="ManipulationMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_ManipulationMode" />
          <setter name="set_ManipulationMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.ManipulationModes" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.ManipulationMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsTapEnabled">
          <apidata name="IsTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTapEnabled" />
          <setter name="set_IsTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsRightTapEnabled">
          <apidata name="IsRightTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsRightTapEnabled" />
          <setter name="set_IsRightTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsRightTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHoldingEnabled">
          <apidata name="IsHoldingEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHoldingEnabled" />
          <setter name="set_IsHoldingEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHoldingEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHitTestVisible">
          <apidata name="IsHitTestVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHitTestVisible" />
          <setter name="set_IsHitTestVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHitTestVisible">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsDoubleTapEnabled">
          <apidata name="IsDoubleTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsDoubleTapEnabled" />
          <setter name="set_IsDoubleTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsDoubleTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Clip">
          <apidata name="Clip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Clip" />
          <setter name="set_Clip" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.RectangleGeometry" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Clip">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CacheMode">
          <apidata name="CacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CacheMode" />
          <setter name="set_CacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.CacheMode" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.CacheMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Opacity">
          <apidata name="Opacity" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Opacity" />
          <setter name="set_Opacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Opacity">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.AllowDrop">
          <apidata name="AllowDrop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowDrop" />
          <setter name="set_AllowDrop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.AllowDrop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Visibility">
          <apidata name="Visibility" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Visibility" />
          <setter name="set_Visibility" />
          <returns>
            <type api="T:Windows.UI.Xaml.Visibility" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Visibility">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.UseLayoutRounding">
          <apidata name="UseLayoutRounding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_UseLayoutRounding" />
          <setter name="set_UseLayoutRounding" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.UseLayoutRounding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Transitions">
          <apidata name="Transitions" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Transitions" />
          <setter name="set_Transitions" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Animation.TransitionCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Transitions">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransformOrigin">
          <apidata name="RenderTransformOrigin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransformOrigin" />
          <setter name="set_RenderTransformOrigin" />
          <returns>
            <type api="T:Windows.Foundation.Point" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransformOrigin">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransform">
          <apidata name="RenderTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransform" />
          <setter name="set_RenderTransform" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Transform" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransform">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Projection">
          <apidata name="Projection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Projection" />
          <setter name="set_Projection" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Projection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Projection">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.DesiredSize">
          <apidata name="DesiredSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DesiredSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.DesiredSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.PointerCaptures">
          <apidata name="PointerCaptures" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_PointerCaptures" />
          <returns>
            <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.PointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderSize">
          <apidata name="RenderSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_RenderSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DoubleTapped">
          <apidata name="DoubleTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DoubleTapped" />
          <remover name="remove_DoubleTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DoubleTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragEnter">
          <apidata name="DragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragEnter" />
          <remover name="remove_DragEnter" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragEnter">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragLeave">
          <apidata name="DragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragLeave" />
          <remover name="remove_DragLeave" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragLeave">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragOver">
          <apidata name="DragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragOver" />
          <remover name="remove_DragOver" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragOver">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Drop">
          <apidata name="Drop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Drop" />
          <remover name="remove_Drop" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Drop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.GotFocus">
          <apidata name="GotFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotFocus" />
          <remover name="remove_GotFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.GotFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Holding">
          <apidata name="Holding" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Holding" />
          <remover name="remove_Holding" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.HoldingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Holding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyDown">
          <apidata name="KeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyDown" />
          <remover name="remove_KeyDown" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyDown">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyUp">
          <apidata name="KeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyUp" />
          <remover name="remove_KeyUp" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyUp">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.LostFocus">
          <apidata name="LostFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostFocus" />
          <remover name="remove_LostFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.LostFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationCompleted">
          <apidata name="ManipulationCompleted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationCompleted" />
          <remover name="remove_ManipulationCompleted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationCompleted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationDelta">
          <apidata name="ManipulationDelta" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationDelta" />
          <remover name="remove_ManipulationDelta" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationDelta">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationInertiaStarting">
          <apidata name="ManipulationInertiaStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationInertiaStarting" />
          <remover name="remove_ManipulationInertiaStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationInertiaStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarted">
          <apidata name="ManipulationStarted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarted" />
          <remover name="remove_ManipulationStarted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarting">
          <apidata name="ManipulationStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarting" />
          <remover name="remove_ManipulationStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCanceled">
          <apidata name="PointerCanceled" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCanceled" />
          <remover name="remove_PointerCanceled" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCanceled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCaptureLost">
          <apidata name="PointerCaptureLost" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCaptureLost" />
          <remover name="remove_PointerCaptureLost" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCaptureLost">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerEntered">
          <apidata name="PointerEntered" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerEntered" />
          <remover name="remove_PointerEntered" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerEntered">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerExited">
          <apidata name="PointerExited" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerExited" />
          <remover name="remove_PointerExited" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerExited">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerMoved">
          <apidata name="PointerMoved" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerMoved" />
          <remover name="remove_PointerMoved" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerMoved">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerPressed">
          <apidata name="PointerPressed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerPressed" />
          <remover name="remove_PointerPressed" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerPressed">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerReleased">
          <apidata name="PointerReleased" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerReleased" />
          <remover name="remove_PointerReleased" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerReleased">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerWheelChanged">
          <apidata name="PointerWheelChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerWheelChanged" />
          <remover name="remove_PointerWheelChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerWheelChanged">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.RightTapped">
          <apidata name="RightTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_RightTapped" />
          <remover name="remove_RightTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.RightTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.RightTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Tapped">
          <apidata name="Tapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Tapped" />
          <remover name="remove_Tapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.TappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Tapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ReadLocalValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetAnimationBaseValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.DependencyObject.Dispatcher">
          <apidata name="Dispatcher" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Dispatcher" />
          <returns>
            <type api="T:Windows.UI.Core.CoreDispatcher" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IDependencyObject.Dispatcher">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.QuizPage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.QuizPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.QuizPage._contentLoaded">
      <apidata name="_contentLoaded" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.QuizPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.QuizPage.Connect(System.Int32,System.Object)">
      <apidata name="Connect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="connectionId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
          <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.QuizPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.QuizPage.ContentRoot">
      <apidata name="ContentRoot" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Grid" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.QuizPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.QuizPage.defaultViewModel">
      <apidata name="defaultViewModel" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.QuizPage" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Templates.QuizPage.DefaultViewModel">
      <apidata name="DefaultViewModel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultViewModel" />
      <returns>
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.QuizPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.QuizPage.iCurrentCorrectAnswer">
      <apidata name="iCurrentCorrectAnswer" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.QuizPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.QuizPage.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.QuizPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.QuizPage.iNumberofQuestions">
      <apidata name="iNumberofQuestions" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.QuizPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.QuizPage.iQuestionIndex">
      <apidata name="iQuestionIndex" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.QuizPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.QuizPage.LayoutRoot">
      <apidata name="LayoutRoot" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Grid" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.QuizPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.QuizPage.navigationHelper">
      <apidata name="navigationHelper" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.QuizPage" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Templates.QuizPage.NavigationHelper">
      <apidata name="NavigationHelper" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NavigationHelper" />
      <returns>
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.QuizPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.QuizPage.NavigationHelper_LoadState(System.Object,AppStore.Common.LoadStateEventArgs)">
      <apidata name="NavigationHelper_LoadState" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:AppStore.Common.LoadStateEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.QuizPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.QuizPage.NavigationHelper_SaveState(System.Object,AppStore.Common.SaveStateEventArgs)">
      <apidata name="NavigationHelper_SaveState" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:AppStore.Common.SaveStateEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.QuizPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.QuizPage.Next">
      <apidata name="Next" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.QuizPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.QuizPage.Next_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Next_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.QuizPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.QuizPage.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedFrom" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.QuizPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.QuizPage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedTo" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.QuizPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.QuizPage.Option1">
      <apidata name="Option1" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.RadioButton" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.QuizPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.QuizPage.Option2">
      <apidata name="Option2" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.RadioButton" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.QuizPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.QuizPage.Option3">
      <apidata name="Option3" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.RadioButton" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.QuizPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.QuizPage.Option4">
      <apidata name="Option4" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.RadioButton" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.QuizPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.QuizPage.Options_Checked(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Options_Checked" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.QuizPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.QuizPage.pageTitle">
      <apidata name="pageTitle" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.QuizPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.QuizPage.populateQuestion(System.Int32)">
      <apidata name="populateQuestion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.QuizPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.QuizPage.Question">
      <apidata name="Question" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.QuizPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.QuizPage.QuestionContent">
      <apidata name="QuestionContent" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.StackPanel" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.QuizPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.QuizPage.QuestionNumber">
      <apidata name="QuestionNumber" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.QuizPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.QuizPage.quiz">
      <apidata name="quiz" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.QuizPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.QuizPage.Skip">
      <apidata name="Skip" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.QuizPage" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.Templates.ScorePage">
      <apidata name="ScorePage" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="F:AppStore.Templates.ScorePage.navigationHelper" />
        <element api="F:AppStore.Templates.ScorePage.defaultViewModel" />
        <element api="F:AppStore.Templates.ScorePage.puzzle" />
        <element api="F:AppStore.Templates.ScorePage.quiz" />
        <element api="F:AppStore.Templates.ScorePage.LayoutRoot" />
        <element api="F:AppStore.Templates.ScorePage.ContentRoot" />
        <element api="F:AppStore.Templates.ScorePage.ScoreText" />
        <element api="F:AppStore.Templates.ScorePage.TotalCorrect" />
        <element api="F:AppStore.Templates.ScorePage.TotalWrong" />
        <element api="F:AppStore.Templates.ScorePage.TotalUnanswered" />
        <element api="F:AppStore.Templates.ScorePage.Quit" />
        <element api="F:AppStore.Templates.ScorePage.Restart" />
        <element api="F:AppStore.Templates.ScorePage.pageTitle" />
        <element api="F:AppStore.Templates.ScorePage._contentLoaded" />
        <element api="M:AppStore.Templates.ScorePage.#ctor" />
        <element api="M:AppStore.Templates.ScorePage.NavigationHelper_LoadState(System.Object,AppStore.Common.LoadStateEventArgs)" />
        <element api="M:AppStore.Templates.ScorePage.NavigationHelper_SaveState(System.Object,AppStore.Common.SaveStateEventArgs)" />
        <element api="M:AppStore.Templates.ScorePage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.Templates.ScorePage.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.Templates.ScorePage.Restart_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.Templates.ScorePage.Quit_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.Templates.ScorePage.InitializeComponent" />
        <element api="M:AppStore.Templates.ScorePage.Connect(System.Int32,System.Object)" />
        <element api="P:AppStore.Templates.ScorePage.NavigationHelper" />
        <element api="P:AppStore.Templates.ScorePage.DefaultViewModel" />
        <element api="M:Windows.UI.Xaml.Controls.Page.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
          <apidata name="OnNavigatingFrom" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IPageOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.TopAppBar">
          <apidata name="TopAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TopAppBar" />
          <setter name="set_TopAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.TopAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.NavigationCacheMode">
          <apidata name="NavigationCacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_NavigationCacheMode" />
          <setter name="set_NavigationCacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Navigation.NavigationCacheMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.NavigationCacheMode">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.BottomAppBar">
          <apidata name="BottomAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BottomAppBar" />
          <setter name="set_BottomAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.BottomAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.Frame">
          <apidata name="Frame" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Frame" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.Frame" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.Frame">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.UserControl.Content">
          <apidata name="Content" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Content" />
          <setter name="set_Content" />
          <returns>
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IUserControl.Content">
              <type api="T:Windows.UI.Xaml.Controls.IUserControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.ApplyTemplate">
          <apidata name="ApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.ApplyTemplate">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.Focus(Windows.UI.Xaml.FocusState)">
          <apidata name="Focus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.Focus(Windows.UI.Xaml.FocusState)">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerEntered" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerPressed" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerMoved" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerReleased" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerExited" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCaptureLost" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCanceled" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerWheelChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
          <apidata name="OnTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
          <apidata name="OnDoubleTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
          <apidata name="OnHolding" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
          <apidata name="OnRightTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
          <apidata name="OnManipulationStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
          <apidata name="OnManipulationInertiaStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
          <apidata name="OnManipulationStarted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
          <apidata name="OnManipulationDelta" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
          <apidata name="OnManipulationCompleted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnGotFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnLostFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDrop(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDrop(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.GetTemplateChild(System.String)">
          <apidata name="GetTemplateChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="childName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlProtected.GetTemplateChild(System.String)">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStyle">
          <apidata name="FontStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStyle" />
          <setter name="set_FontStyle" />
          <returns>
            <type api="T:Windows.UI.Text.FontStyle" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStyle">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStretch">
          <apidata name="FontStretch" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStretch" />
          <setter name="set_FontStretch" />
          <returns>
            <type api="T:Windows.UI.Text.FontStretch" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStretch">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontSize">
          <apidata name="FontSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontSize" />
          <setter name="set_FontSize" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontSize">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontFamily">
          <apidata name="FontFamily" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontFamily" />
          <setter name="set_FontFamily" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.FontFamily" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontFamily">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontWeight">
          <apidata name="FontWeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontWeight" />
          <setter name="set_FontWeight" />
          <returns>
            <type api="T:Windows.UI.Text.FontWeight" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontWeight">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.CharacterSpacing">
          <apidata name="CharacterSpacing" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CharacterSpacing" />
          <setter name="set_CharacterSpacing" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.CharacterSpacing">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderThickness">
          <apidata name="BorderThickness" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderThickness" />
          <setter name="set_BorderThickness" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderThickness">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderBrush">
          <apidata name="BorderBrush" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderBrush" />
          <setter name="set_BorderBrush" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderBrush">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Background">
          <apidata name="Background" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Background" />
          <setter name="set_Background" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Background">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Foreground">
          <apidata name="Foreground" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Foreground" />
          <setter name="set_Foreground" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Foreground">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.VerticalContentAlignment">
          <apidata name="VerticalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalContentAlignment" />
          <setter name="set_VerticalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.VerticalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Template">
          <apidata name="Template" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Template" />
          <setter name="set_Template" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.ControlTemplate" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Template">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabNavigation">
          <apidata name="TabNavigation" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabNavigation" />
          <setter name="set_TabNavigation" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.KeyboardNavigationMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabNavigation">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabIndex">
          <apidata name="TabIndex" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabIndex" />
          <setter name="set_TabIndex" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabIndex">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Padding">
          <apidata name="Padding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Padding" />
          <setter name="set_Padding" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Padding">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTabStop">
          <apidata name="IsTabStop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTabStop" />
          <setter name="set_IsTabStop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsTabStop">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsEnabled">
          <apidata name="IsEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsEnabled" />
          <setter name="set_IsEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.HorizontalContentAlignment">
          <apidata name="HorizontalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalContentAlignment" />
          <setter name="set_HorizontalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.HorizontalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FocusState">
          <apidata name="FocusState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_FocusState" />
          <returns>
            <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FocusState">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.DefaultStyleKey">
          <apidata name="DefaultStyleKey" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DefaultStyleKey" />
          <setter name="set_DefaultStyleKey" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControlProtected.DefaultStyleKey">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTextScaleFactorEnabled">
          <apidata name="IsTextScaleFactorEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTextScaleFactorEnabled" />
          <setter name="set_IsTextScaleFactorEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl2.IsTextScaleFactorEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.Controls.Control.IsEnabledChanged">
          <apidata name="IsEnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsEnabledChanged" />
          <remover name="remove_IsEnabledChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.Controls.IControl.IsEnabledChanged">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.FindName(System.String)">
          <apidata name="FindName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="name" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.FindName(System.String)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="binding" in="true">
              <type api="T:Windows.UI.Xaml.Data.BindingBase" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetBindingExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Data.BindingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement2.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.MeasureOverride(Windows.Foundation.Size)">
          <apidata name="MeasureOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.MeasureOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.ArrangeOverride(Windows.Foundation.Size)">
          <apidata name="ArrangeOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="finalSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.ArrangeOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.OnApplyTemplate">
          <apidata name="OnApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.OnApplyTemplate">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GoToElementStateCore(System.String,System.Boolean)">
          <apidata name="GoToElementStateCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="stateName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="useTransitions" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides2.GoToElementStateCore(System.String,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Margin">
          <apidata name="Margin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Margin" />
          <setter name="set_Margin" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Margin">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Language">
          <apidata name="Language" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Language" />
          <setter name="set_Language" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Language">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.HorizontalAlignment">
          <apidata name="HorizontalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalAlignment" />
          <setter name="set_HorizontalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.HorizontalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.FlowDirection">
          <apidata name="FlowDirection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FlowDirection" />
          <setter name="set_FlowDirection" />
          <returns>
            <type api="T:Windows.UI.Xaml.FlowDirection" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.FlowDirection">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.DataContext">
          <apidata name="DataContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DataContext" />
          <setter name="set_DataContext" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.DataContext">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.VerticalAlignment">
          <apidata name="VerticalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalAlignment" />
          <setter name="set_VerticalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.VerticalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxWidth">
          <apidata name="MaxWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxWidth" />
          <setter name="set_MaxWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxHeight">
          <apidata name="MaxHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxHeight" />
          <setter name="set_MaxHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Height">
          <apidata name="Height" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Height" />
          <setter name="set_Height" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Height">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinHeight">
          <apidata name="MinHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinHeight" />
          <setter name="set_MinHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Width">
          <apidata name="Width" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Width" />
          <setter name="set_Width" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Width">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Tag">
          <apidata name="Tag" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Tag" />
          <setter name="set_Tag" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Tag">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Style">
          <apidata name="Style" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Style" />
          <setter name="set_Style" />
          <returns>
            <type api="T:Windows.UI.Xaml.Style" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Style">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Resources">
          <apidata name="Resources" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Resources" />
          <setter name="set_Resources" />
          <returns>
            <type api="T:Windows.UI.Xaml.ResourceDictionary" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Resources">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Name">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinWidth">
          <apidata name="MinWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinWidth" />
          <setter name="set_MinWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualWidth">
          <apidata name="ActualWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.BaseUri">
          <apidata name="BaseUri" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_BaseUri" />
          <returns>
            <type api="T:System.Uri" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.BaseUri">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Parent">
          <apidata name="Parent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Parent" />
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Parent">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Triggers">
          <apidata name="Triggers" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Triggers" />
          <returns>
            <type api="T:Windows.UI.Xaml.TriggerCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Triggers">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualHeight">
          <apidata name="ActualHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.RequestedTheme">
          <apidata name="RequestedTheme" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestedTheme" />
          <setter name="set_RequestedTheme" />
          <returns>
            <type api="T:Windows.UI.Xaml.ElementTheme" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement2.RequestedTheme">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.LayoutUpdated">
          <apidata name="LayoutUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LayoutUpdated" />
          <remover name="remove_LayoutUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Object" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.LayoutUpdated">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Loaded">
          <apidata name="Loaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Loaded" />
          <remover name="remove_Loaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Loaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.SizeChanged">
          <apidata name="SizeChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_SizeChanged" />
          <remover name="remove_SizeChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.SizeChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.SizeChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.SizeChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Unloaded">
          <apidata name="Unloaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Unloaded" />
          <remover name="remove_Unloaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Unloaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.DataContextChanged">
          <apidata name="DataContextChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DataContextChanged" />
          <remover name="remove_DataContextChanged" />
          <eventhandler>
            <type api="T:Windows.Foundation.TypedEventHandler`2" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
                <type api="T:Windows.UI.Xaml.DataContextChangedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement2.DataContextChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Measure(Windows.Foundation.Size)">
          <apidata name="Measure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Measure(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Arrange(Windows.Foundation.Rect)">
          <apidata name="Arrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="finalRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Arrange(Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="CapturePointer" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="ReleasePointerCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCaptures">
          <apidata name="ReleasePointerCaptures" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="handledEventsToo" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
          <apidata name="RemoveHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
          <apidata name="TransformToVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="visual" in="true">
              <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Media.GeneralTransform" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateMeasure">
          <apidata name="InvalidateMeasure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateMeasure">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateArrange">
          <apidata name="InvalidateArrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateArrange">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.UpdateLayout">
          <apidata name="UpdateLayout" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.UpdateLayout">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CancelDirectManipulations">
          <apidata name="CancelDirectManipulations" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement2.CancelDirectManipulations">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnCreateAutomationPeer">
          <apidata name="OnCreateAutomationPeer" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:Windows.UI.Xaml.Automation.Peers.AutomationPeer" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnCreateAutomationPeer">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnDisconnectVisualChildren">
          <apidata name="OnDisconnectVisualChildren" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnDisconnectVisualChildren">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
          <apidata name="FindSubElementsForTouchTargeting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="point" in="true">
              <type api="T:Windows.Foundation.Point" ref="false" />
            </parameter>
            <parameter name="boundingRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:Windows.Foundation.Point" ref="false" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CompositeMode">
          <apidata name="CompositeMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CompositeMode" />
          <setter name="set_CompositeMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.ElementCompositeMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement2.CompositeMode">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.ManipulationMode">
          <apidata name="ManipulationMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_ManipulationMode" />
          <setter name="set_ManipulationMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.ManipulationModes" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.ManipulationMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsTapEnabled">
          <apidata name="IsTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTapEnabled" />
          <setter name="set_IsTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsRightTapEnabled">
          <apidata name="IsRightTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsRightTapEnabled" />
          <setter name="set_IsRightTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsRightTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHoldingEnabled">
          <apidata name="IsHoldingEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHoldingEnabled" />
          <setter name="set_IsHoldingEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHoldingEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHitTestVisible">
          <apidata name="IsHitTestVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHitTestVisible" />
          <setter name="set_IsHitTestVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHitTestVisible">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsDoubleTapEnabled">
          <apidata name="IsDoubleTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsDoubleTapEnabled" />
          <setter name="set_IsDoubleTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsDoubleTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Clip">
          <apidata name="Clip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Clip" />
          <setter name="set_Clip" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.RectangleGeometry" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Clip">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CacheMode">
          <apidata name="CacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CacheMode" />
          <setter name="set_CacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.CacheMode" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.CacheMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Opacity">
          <apidata name="Opacity" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Opacity" />
          <setter name="set_Opacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Opacity">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.AllowDrop">
          <apidata name="AllowDrop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowDrop" />
          <setter name="set_AllowDrop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.AllowDrop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Visibility">
          <apidata name="Visibility" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Visibility" />
          <setter name="set_Visibility" />
          <returns>
            <type api="T:Windows.UI.Xaml.Visibility" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Visibility">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.UseLayoutRounding">
          <apidata name="UseLayoutRounding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_UseLayoutRounding" />
          <setter name="set_UseLayoutRounding" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.UseLayoutRounding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Transitions">
          <apidata name="Transitions" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Transitions" />
          <setter name="set_Transitions" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Animation.TransitionCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Transitions">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransformOrigin">
          <apidata name="RenderTransformOrigin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransformOrigin" />
          <setter name="set_RenderTransformOrigin" />
          <returns>
            <type api="T:Windows.Foundation.Point" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransformOrigin">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransform">
          <apidata name="RenderTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransform" />
          <setter name="set_RenderTransform" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Transform" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransform">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Projection">
          <apidata name="Projection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Projection" />
          <setter name="set_Projection" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Projection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Projection">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.DesiredSize">
          <apidata name="DesiredSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DesiredSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.DesiredSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.PointerCaptures">
          <apidata name="PointerCaptures" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_PointerCaptures" />
          <returns>
            <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.PointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderSize">
          <apidata name="RenderSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_RenderSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DoubleTapped">
          <apidata name="DoubleTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DoubleTapped" />
          <remover name="remove_DoubleTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DoubleTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragEnter">
          <apidata name="DragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragEnter" />
          <remover name="remove_DragEnter" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragEnter">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragLeave">
          <apidata name="DragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragLeave" />
          <remover name="remove_DragLeave" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragLeave">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragOver">
          <apidata name="DragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragOver" />
          <remover name="remove_DragOver" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragOver">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Drop">
          <apidata name="Drop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Drop" />
          <remover name="remove_Drop" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Drop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.GotFocus">
          <apidata name="GotFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotFocus" />
          <remover name="remove_GotFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.GotFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Holding">
          <apidata name="Holding" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Holding" />
          <remover name="remove_Holding" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.HoldingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Holding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyDown">
          <apidata name="KeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyDown" />
          <remover name="remove_KeyDown" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyDown">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyUp">
          <apidata name="KeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyUp" />
          <remover name="remove_KeyUp" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyUp">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.LostFocus">
          <apidata name="LostFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostFocus" />
          <remover name="remove_LostFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.LostFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationCompleted">
          <apidata name="ManipulationCompleted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationCompleted" />
          <remover name="remove_ManipulationCompleted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationCompleted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationDelta">
          <apidata name="ManipulationDelta" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationDelta" />
          <remover name="remove_ManipulationDelta" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationDelta">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationInertiaStarting">
          <apidata name="ManipulationInertiaStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationInertiaStarting" />
          <remover name="remove_ManipulationInertiaStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationInertiaStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarted">
          <apidata name="ManipulationStarted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarted" />
          <remover name="remove_ManipulationStarted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarting">
          <apidata name="ManipulationStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarting" />
          <remover name="remove_ManipulationStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCanceled">
          <apidata name="PointerCanceled" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCanceled" />
          <remover name="remove_PointerCanceled" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCanceled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCaptureLost">
          <apidata name="PointerCaptureLost" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCaptureLost" />
          <remover name="remove_PointerCaptureLost" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCaptureLost">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerEntered">
          <apidata name="PointerEntered" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerEntered" />
          <remover name="remove_PointerEntered" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerEntered">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerExited">
          <apidata name="PointerExited" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerExited" />
          <remover name="remove_PointerExited" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerExited">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerMoved">
          <apidata name="PointerMoved" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerMoved" />
          <remover name="remove_PointerMoved" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerMoved">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerPressed">
          <apidata name="PointerPressed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerPressed" />
          <remover name="remove_PointerPressed" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerPressed">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerReleased">
          <apidata name="PointerReleased" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerReleased" />
          <remover name="remove_PointerReleased" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerReleased">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerWheelChanged">
          <apidata name="PointerWheelChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerWheelChanged" />
          <remover name="remove_PointerWheelChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerWheelChanged">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.RightTapped">
          <apidata name="RightTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_RightTapped" />
          <remover name="remove_RightTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.RightTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.RightTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Tapped">
          <apidata name="Tapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Tapped" />
          <remover name="remove_Tapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.TappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Tapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ReadLocalValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetAnimationBaseValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.DependencyObject.Dispatcher">
          <apidata name="Dispatcher" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Dispatcher" />
          <returns>
            <type api="T:Windows.UI.Core.CoreDispatcher" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IDependencyObject.Dispatcher">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.ScorePage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.ScorePage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.ScorePage._contentLoaded">
      <apidata name="_contentLoaded" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.ScorePage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.ScorePage.Connect(System.Int32,System.Object)">
      <apidata name="Connect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="connectionId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
          <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.ScorePage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.ScorePage.ContentRoot">
      <apidata name="ContentRoot" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Grid" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.ScorePage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.ScorePage.defaultViewModel">
      <apidata name="defaultViewModel" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.ScorePage" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Templates.ScorePage.DefaultViewModel">
      <apidata name="DefaultViewModel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultViewModel" />
      <returns>
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.ScorePage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.ScorePage.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.ScorePage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.ScorePage.LayoutRoot">
      <apidata name="LayoutRoot" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Grid" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.ScorePage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.ScorePage.navigationHelper">
      <apidata name="navigationHelper" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.ScorePage" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Templates.ScorePage.NavigationHelper">
      <apidata name="NavigationHelper" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NavigationHelper" />
      <returns>
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.ScorePage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.ScorePage.NavigationHelper_LoadState(System.Object,AppStore.Common.LoadStateEventArgs)">
      <apidata name="NavigationHelper_LoadState" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:AppStore.Common.LoadStateEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.ScorePage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.ScorePage.NavigationHelper_SaveState(System.Object,AppStore.Common.SaveStateEventArgs)">
      <apidata name="NavigationHelper_SaveState" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:AppStore.Common.SaveStateEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.ScorePage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.ScorePage.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedFrom" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.ScorePage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.ScorePage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedTo" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.ScorePage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.ScorePage.pageTitle">
      <apidata name="pageTitle" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.ScorePage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.ScorePage.puzzle">
      <apidata name="puzzle" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.ScorePage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.ScorePage.Quit">
      <apidata name="Quit" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.ScorePage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.ScorePage.Quit_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Quit_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.ScorePage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.ScorePage.quiz">
      <apidata name="quiz" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Models.QuizModel" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.ScorePage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.ScorePage.Restart">
      <apidata name="Restart" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.ScorePage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.ScorePage.Restart_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Restart_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.ScorePage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.ScorePage.ScoreText">
      <apidata name="ScoreText" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.ScorePage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.ScorePage.TotalCorrect">
      <apidata name="TotalCorrect" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.ScorePage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.ScorePage.TotalUnanswered">
      <apidata name="TotalUnanswered" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.ScorePage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.ScorePage.TotalWrong">
      <apidata name="TotalWrong" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.ScorePage" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.Templates.SpellingsPage">
      <apidata name="SpellingsPage" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="F:AppStore.Templates.SpellingsPage.navigationHelper" />
        <element api="F:AppStore.Templates.SpellingsPage.defaultViewModel" />
        <element api="F:AppStore.Templates.SpellingsPage.puzzle" />
        <element api="F:AppStore.Templates.SpellingsPage.LayoutRoot" />
        <element api="F:AppStore.Templates.SpellingsPage.ContentRoot" />
        <element api="F:AppStore.Templates.SpellingsPage.PuzzleNumber" />
        <element api="F:AppStore.Templates.SpellingsPage.Listen" />
        <element api="F:AppStore.Templates.SpellingsPage.player" />
        <element api="F:AppStore.Templates.SpellingsPage.Spell" />
        <element api="F:AppStore.Templates.SpellingsPage.Next" />
        <element api="F:AppStore.Templates.SpellingsPage.Female" />
        <element api="F:AppStore.Templates.SpellingsPage.Male" />
        <element api="F:AppStore.Templates.SpellingsPage.pageTitle" />
        <element api="F:AppStore.Templates.SpellingsPage._contentLoaded" />
        <element api="M:AppStore.Templates.SpellingsPage.#ctor" />
        <element api="M:AppStore.Templates.SpellingsPage.NavigationHelper_LoadState(System.Object,AppStore.Common.LoadStateEventArgs)" />
        <element api="M:AppStore.Templates.SpellingsPage.NavigationHelper_SaveState(System.Object,AppStore.Common.SaveStateEventArgs)" />
        <element api="M:AppStore.Templates.SpellingsPage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.Templates.SpellingsPage.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.Templates.SpellingsPage.Spell_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.Templates.SpellingsPage.Next_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.Templates.SpellingsPage.Listen_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.Templates.SpellingsPage.InitializeComponent" />
        <element api="M:AppStore.Templates.SpellingsPage.Connect(System.Int32,System.Object)" />
        <element api="P:AppStore.Templates.SpellingsPage.NavigationHelper" />
        <element api="P:AppStore.Templates.SpellingsPage.DefaultViewModel" />
        <element api="M:Windows.UI.Xaml.Controls.Page.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
          <apidata name="OnNavigatingFrom" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IPageOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.TopAppBar">
          <apidata name="TopAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TopAppBar" />
          <setter name="set_TopAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.TopAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.NavigationCacheMode">
          <apidata name="NavigationCacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_NavigationCacheMode" />
          <setter name="set_NavigationCacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Navigation.NavigationCacheMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.NavigationCacheMode">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.BottomAppBar">
          <apidata name="BottomAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BottomAppBar" />
          <setter name="set_BottomAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.BottomAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.Frame">
          <apidata name="Frame" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Frame" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.Frame" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.Frame">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.UserControl.Content">
          <apidata name="Content" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Content" />
          <setter name="set_Content" />
          <returns>
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IUserControl.Content">
              <type api="T:Windows.UI.Xaml.Controls.IUserControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.ApplyTemplate">
          <apidata name="ApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.ApplyTemplate">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.Focus(Windows.UI.Xaml.FocusState)">
          <apidata name="Focus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.Focus(Windows.UI.Xaml.FocusState)">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerEntered" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerPressed" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerMoved" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerReleased" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerExited" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCaptureLost" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCanceled" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerWheelChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
          <apidata name="OnTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
          <apidata name="OnDoubleTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
          <apidata name="OnHolding" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
          <apidata name="OnRightTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
          <apidata name="OnManipulationStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
          <apidata name="OnManipulationInertiaStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
          <apidata name="OnManipulationStarted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
          <apidata name="OnManipulationDelta" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
          <apidata name="OnManipulationCompleted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnGotFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnLostFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDrop(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDrop(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.GetTemplateChild(System.String)">
          <apidata name="GetTemplateChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="childName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlProtected.GetTemplateChild(System.String)">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStyle">
          <apidata name="FontStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStyle" />
          <setter name="set_FontStyle" />
          <returns>
            <type api="T:Windows.UI.Text.FontStyle" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStyle">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStretch">
          <apidata name="FontStretch" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStretch" />
          <setter name="set_FontStretch" />
          <returns>
            <type api="T:Windows.UI.Text.FontStretch" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStretch">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontSize">
          <apidata name="FontSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontSize" />
          <setter name="set_FontSize" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontSize">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontFamily">
          <apidata name="FontFamily" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontFamily" />
          <setter name="set_FontFamily" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.FontFamily" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontFamily">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontWeight">
          <apidata name="FontWeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontWeight" />
          <setter name="set_FontWeight" />
          <returns>
            <type api="T:Windows.UI.Text.FontWeight" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontWeight">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.CharacterSpacing">
          <apidata name="CharacterSpacing" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CharacterSpacing" />
          <setter name="set_CharacterSpacing" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.CharacterSpacing">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderThickness">
          <apidata name="BorderThickness" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderThickness" />
          <setter name="set_BorderThickness" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderThickness">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderBrush">
          <apidata name="BorderBrush" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderBrush" />
          <setter name="set_BorderBrush" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderBrush">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Background">
          <apidata name="Background" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Background" />
          <setter name="set_Background" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Background">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Foreground">
          <apidata name="Foreground" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Foreground" />
          <setter name="set_Foreground" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Foreground">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.VerticalContentAlignment">
          <apidata name="VerticalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalContentAlignment" />
          <setter name="set_VerticalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.VerticalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Template">
          <apidata name="Template" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Template" />
          <setter name="set_Template" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.ControlTemplate" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Template">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabNavigation">
          <apidata name="TabNavigation" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabNavigation" />
          <setter name="set_TabNavigation" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.KeyboardNavigationMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabNavigation">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabIndex">
          <apidata name="TabIndex" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabIndex" />
          <setter name="set_TabIndex" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabIndex">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Padding">
          <apidata name="Padding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Padding" />
          <setter name="set_Padding" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Padding">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTabStop">
          <apidata name="IsTabStop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTabStop" />
          <setter name="set_IsTabStop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsTabStop">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsEnabled">
          <apidata name="IsEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsEnabled" />
          <setter name="set_IsEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.HorizontalContentAlignment">
          <apidata name="HorizontalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalContentAlignment" />
          <setter name="set_HorizontalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.HorizontalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FocusState">
          <apidata name="FocusState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_FocusState" />
          <returns>
            <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FocusState">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.DefaultStyleKey">
          <apidata name="DefaultStyleKey" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DefaultStyleKey" />
          <setter name="set_DefaultStyleKey" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControlProtected.DefaultStyleKey">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTextScaleFactorEnabled">
          <apidata name="IsTextScaleFactorEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTextScaleFactorEnabled" />
          <setter name="set_IsTextScaleFactorEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl2.IsTextScaleFactorEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.Controls.Control.IsEnabledChanged">
          <apidata name="IsEnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsEnabledChanged" />
          <remover name="remove_IsEnabledChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.Controls.IControl.IsEnabledChanged">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.FindName(System.String)">
          <apidata name="FindName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="name" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.FindName(System.String)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="binding" in="true">
              <type api="T:Windows.UI.Xaml.Data.BindingBase" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetBindingExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Data.BindingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement2.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.MeasureOverride(Windows.Foundation.Size)">
          <apidata name="MeasureOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.MeasureOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.ArrangeOverride(Windows.Foundation.Size)">
          <apidata name="ArrangeOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="finalSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.ArrangeOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.OnApplyTemplate">
          <apidata name="OnApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.OnApplyTemplate">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GoToElementStateCore(System.String,System.Boolean)">
          <apidata name="GoToElementStateCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="stateName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="useTransitions" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides2.GoToElementStateCore(System.String,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Margin">
          <apidata name="Margin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Margin" />
          <setter name="set_Margin" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Margin">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Language">
          <apidata name="Language" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Language" />
          <setter name="set_Language" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Language">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.HorizontalAlignment">
          <apidata name="HorizontalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalAlignment" />
          <setter name="set_HorizontalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.HorizontalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.FlowDirection">
          <apidata name="FlowDirection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FlowDirection" />
          <setter name="set_FlowDirection" />
          <returns>
            <type api="T:Windows.UI.Xaml.FlowDirection" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.FlowDirection">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.DataContext">
          <apidata name="DataContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DataContext" />
          <setter name="set_DataContext" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.DataContext">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.VerticalAlignment">
          <apidata name="VerticalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalAlignment" />
          <setter name="set_VerticalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.VerticalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxWidth">
          <apidata name="MaxWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxWidth" />
          <setter name="set_MaxWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxHeight">
          <apidata name="MaxHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxHeight" />
          <setter name="set_MaxHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Height">
          <apidata name="Height" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Height" />
          <setter name="set_Height" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Height">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinHeight">
          <apidata name="MinHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinHeight" />
          <setter name="set_MinHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Width">
          <apidata name="Width" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Width" />
          <setter name="set_Width" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Width">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Tag">
          <apidata name="Tag" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Tag" />
          <setter name="set_Tag" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Tag">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Style">
          <apidata name="Style" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Style" />
          <setter name="set_Style" />
          <returns>
            <type api="T:Windows.UI.Xaml.Style" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Style">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Resources">
          <apidata name="Resources" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Resources" />
          <setter name="set_Resources" />
          <returns>
            <type api="T:Windows.UI.Xaml.ResourceDictionary" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Resources">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Name">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinWidth">
          <apidata name="MinWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinWidth" />
          <setter name="set_MinWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualWidth">
          <apidata name="ActualWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.BaseUri">
          <apidata name="BaseUri" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_BaseUri" />
          <returns>
            <type api="T:System.Uri" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.BaseUri">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Parent">
          <apidata name="Parent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Parent" />
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Parent">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Triggers">
          <apidata name="Triggers" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Triggers" />
          <returns>
            <type api="T:Windows.UI.Xaml.TriggerCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Triggers">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualHeight">
          <apidata name="ActualHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.RequestedTheme">
          <apidata name="RequestedTheme" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestedTheme" />
          <setter name="set_RequestedTheme" />
          <returns>
            <type api="T:Windows.UI.Xaml.ElementTheme" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement2.RequestedTheme">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.LayoutUpdated">
          <apidata name="LayoutUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LayoutUpdated" />
          <remover name="remove_LayoutUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Object" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.LayoutUpdated">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Loaded">
          <apidata name="Loaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Loaded" />
          <remover name="remove_Loaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Loaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.SizeChanged">
          <apidata name="SizeChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_SizeChanged" />
          <remover name="remove_SizeChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.SizeChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.SizeChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.SizeChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Unloaded">
          <apidata name="Unloaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Unloaded" />
          <remover name="remove_Unloaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Unloaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.DataContextChanged">
          <apidata name="DataContextChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DataContextChanged" />
          <remover name="remove_DataContextChanged" />
          <eventhandler>
            <type api="T:Windows.Foundation.TypedEventHandler`2" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
                <type api="T:Windows.UI.Xaml.DataContextChangedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement2.DataContextChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Measure(Windows.Foundation.Size)">
          <apidata name="Measure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Measure(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Arrange(Windows.Foundation.Rect)">
          <apidata name="Arrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="finalRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Arrange(Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="CapturePointer" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="ReleasePointerCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCaptures">
          <apidata name="ReleasePointerCaptures" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="handledEventsToo" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
          <apidata name="RemoveHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
          <apidata name="TransformToVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="visual" in="true">
              <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Media.GeneralTransform" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateMeasure">
          <apidata name="InvalidateMeasure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateMeasure">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateArrange">
          <apidata name="InvalidateArrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateArrange">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.UpdateLayout">
          <apidata name="UpdateLayout" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.UpdateLayout">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CancelDirectManipulations">
          <apidata name="CancelDirectManipulations" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement2.CancelDirectManipulations">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnCreateAutomationPeer">
          <apidata name="OnCreateAutomationPeer" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:Windows.UI.Xaml.Automation.Peers.AutomationPeer" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnCreateAutomationPeer">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnDisconnectVisualChildren">
          <apidata name="OnDisconnectVisualChildren" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnDisconnectVisualChildren">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
          <apidata name="FindSubElementsForTouchTargeting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="point" in="true">
              <type api="T:Windows.Foundation.Point" ref="false" />
            </parameter>
            <parameter name="boundingRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:Windows.Foundation.Point" ref="false" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CompositeMode">
          <apidata name="CompositeMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CompositeMode" />
          <setter name="set_CompositeMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.ElementCompositeMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement2.CompositeMode">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.ManipulationMode">
          <apidata name="ManipulationMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_ManipulationMode" />
          <setter name="set_ManipulationMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.ManipulationModes" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.ManipulationMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsTapEnabled">
          <apidata name="IsTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTapEnabled" />
          <setter name="set_IsTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsRightTapEnabled">
          <apidata name="IsRightTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsRightTapEnabled" />
          <setter name="set_IsRightTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsRightTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHoldingEnabled">
          <apidata name="IsHoldingEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHoldingEnabled" />
          <setter name="set_IsHoldingEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHoldingEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHitTestVisible">
          <apidata name="IsHitTestVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHitTestVisible" />
          <setter name="set_IsHitTestVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHitTestVisible">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsDoubleTapEnabled">
          <apidata name="IsDoubleTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsDoubleTapEnabled" />
          <setter name="set_IsDoubleTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsDoubleTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Clip">
          <apidata name="Clip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Clip" />
          <setter name="set_Clip" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.RectangleGeometry" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Clip">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CacheMode">
          <apidata name="CacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CacheMode" />
          <setter name="set_CacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.CacheMode" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.CacheMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Opacity">
          <apidata name="Opacity" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Opacity" />
          <setter name="set_Opacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Opacity">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.AllowDrop">
          <apidata name="AllowDrop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowDrop" />
          <setter name="set_AllowDrop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.AllowDrop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Visibility">
          <apidata name="Visibility" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Visibility" />
          <setter name="set_Visibility" />
          <returns>
            <type api="T:Windows.UI.Xaml.Visibility" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Visibility">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.UseLayoutRounding">
          <apidata name="UseLayoutRounding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_UseLayoutRounding" />
          <setter name="set_UseLayoutRounding" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.UseLayoutRounding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Transitions">
          <apidata name="Transitions" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Transitions" />
          <setter name="set_Transitions" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Animation.TransitionCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Transitions">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransformOrigin">
          <apidata name="RenderTransformOrigin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransformOrigin" />
          <setter name="set_RenderTransformOrigin" />
          <returns>
            <type api="T:Windows.Foundation.Point" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransformOrigin">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransform">
          <apidata name="RenderTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransform" />
          <setter name="set_RenderTransform" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Transform" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransform">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Projection">
          <apidata name="Projection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Projection" />
          <setter name="set_Projection" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Projection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Projection">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.DesiredSize">
          <apidata name="DesiredSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DesiredSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.DesiredSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.PointerCaptures">
          <apidata name="PointerCaptures" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_PointerCaptures" />
          <returns>
            <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.PointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderSize">
          <apidata name="RenderSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_RenderSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DoubleTapped">
          <apidata name="DoubleTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DoubleTapped" />
          <remover name="remove_DoubleTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DoubleTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragEnter">
          <apidata name="DragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragEnter" />
          <remover name="remove_DragEnter" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragEnter">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragLeave">
          <apidata name="DragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragLeave" />
          <remover name="remove_DragLeave" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragLeave">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragOver">
          <apidata name="DragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragOver" />
          <remover name="remove_DragOver" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragOver">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Drop">
          <apidata name="Drop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Drop" />
          <remover name="remove_Drop" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Drop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.GotFocus">
          <apidata name="GotFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotFocus" />
          <remover name="remove_GotFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.GotFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Holding">
          <apidata name="Holding" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Holding" />
          <remover name="remove_Holding" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.HoldingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Holding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyDown">
          <apidata name="KeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyDown" />
          <remover name="remove_KeyDown" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyDown">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyUp">
          <apidata name="KeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyUp" />
          <remover name="remove_KeyUp" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyUp">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.LostFocus">
          <apidata name="LostFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostFocus" />
          <remover name="remove_LostFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.LostFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationCompleted">
          <apidata name="ManipulationCompleted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationCompleted" />
          <remover name="remove_ManipulationCompleted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationCompleted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationDelta">
          <apidata name="ManipulationDelta" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationDelta" />
          <remover name="remove_ManipulationDelta" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationDelta">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationInertiaStarting">
          <apidata name="ManipulationInertiaStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationInertiaStarting" />
          <remover name="remove_ManipulationInertiaStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationInertiaStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarted">
          <apidata name="ManipulationStarted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarted" />
          <remover name="remove_ManipulationStarted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarting">
          <apidata name="ManipulationStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarting" />
          <remover name="remove_ManipulationStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCanceled">
          <apidata name="PointerCanceled" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCanceled" />
          <remover name="remove_PointerCanceled" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCanceled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCaptureLost">
          <apidata name="PointerCaptureLost" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCaptureLost" />
          <remover name="remove_PointerCaptureLost" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCaptureLost">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerEntered">
          <apidata name="PointerEntered" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerEntered" />
          <remover name="remove_PointerEntered" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerEntered">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerExited">
          <apidata name="PointerExited" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerExited" />
          <remover name="remove_PointerExited" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerExited">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerMoved">
          <apidata name="PointerMoved" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerMoved" />
          <remover name="remove_PointerMoved" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerMoved">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerPressed">
          <apidata name="PointerPressed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerPressed" />
          <remover name="remove_PointerPressed" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerPressed">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerReleased">
          <apidata name="PointerReleased" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerReleased" />
          <remover name="remove_PointerReleased" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerReleased">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerWheelChanged">
          <apidata name="PointerWheelChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerWheelChanged" />
          <remover name="remove_PointerWheelChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerWheelChanged">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.RightTapped">
          <apidata name="RightTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_RightTapped" />
          <remover name="remove_RightTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.RightTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.RightTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Tapped">
          <apidata name="Tapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Tapped" />
          <remover name="remove_Tapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.TappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Tapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ReadLocalValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetAnimationBaseValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.DependencyObject.Dispatcher">
          <apidata name="Dispatcher" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Dispatcher" />
          <returns>
            <type api="T:Windows.UI.Core.CoreDispatcher" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IDependencyObject.Dispatcher">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.SpellingsPage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.SpellingsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.SpellingsPage._contentLoaded">
      <apidata name="_contentLoaded" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.SpellingsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.SpellingsPage.Connect(System.Int32,System.Object)">
      <apidata name="Connect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="connectionId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
          <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.SpellingsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.SpellingsPage.ContentRoot">
      <apidata name="ContentRoot" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Grid" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.SpellingsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.SpellingsPage.defaultViewModel">
      <apidata name="defaultViewModel" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.SpellingsPage" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Templates.SpellingsPage.DefaultViewModel">
      <apidata name="DefaultViewModel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultViewModel" />
      <returns>
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.SpellingsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.SpellingsPage.Female">
      <apidata name="Female" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.RadioButton" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.SpellingsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.SpellingsPage.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.SpellingsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.SpellingsPage.LayoutRoot">
      <apidata name="LayoutRoot" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Grid" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.SpellingsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.SpellingsPage.Listen">
      <apidata name="Listen" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.SpellingsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.SpellingsPage.Listen_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Listen_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.SpellingsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.SpellingsPage.Male">
      <apidata name="Male" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.RadioButton" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.SpellingsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.SpellingsPage.navigationHelper">
      <apidata name="navigationHelper" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.SpellingsPage" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Templates.SpellingsPage.NavigationHelper">
      <apidata name="NavigationHelper" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NavigationHelper" />
      <returns>
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.SpellingsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.SpellingsPage.NavigationHelper_LoadState(System.Object,AppStore.Common.LoadStateEventArgs)">
      <apidata name="NavigationHelper_LoadState" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:AppStore.Common.LoadStateEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.SpellingsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.SpellingsPage.NavigationHelper_SaveState(System.Object,AppStore.Common.SaveStateEventArgs)">
      <apidata name="NavigationHelper_SaveState" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:AppStore.Common.SaveStateEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.SpellingsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.SpellingsPage.Next">
      <apidata name="Next" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.SpellingsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.SpellingsPage.Next_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Next_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.SpellingsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.SpellingsPage.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedFrom" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.SpellingsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.SpellingsPage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedTo" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.SpellingsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.SpellingsPage.pageTitle">
      <apidata name="pageTitle" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.SpellingsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.SpellingsPage.player">
      <apidata name="player" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.MediaElement" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.SpellingsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.SpellingsPage.puzzle">
      <apidata name="puzzle" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.SpellingsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.SpellingsPage.PuzzleNumber">
      <apidata name="PuzzleNumber" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.SpellingsPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.SpellingsPage.Spell">
      <apidata name="Spell" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.SpellingsPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.SpellingsPage.Spell_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Spell_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.SpellingsPage" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.Templates.StartPage">
      <apidata name="StartPage" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="F:AppStore.Templates.StartPage.navigationHelper" />
        <element api="F:AppStore.Templates.StartPage.defaultViewModel" />
        <element api="F:AppStore.Templates.StartPage.removeParameter" />
        <element api="F:AppStore.Templates.StartPage.page" />
        <element api="F:AppStore.Templates.StartPage.LayoutRoot" />
        <element api="F:AppStore.Templates.StartPage.ContentRoot" />
        <element api="F:AppStore.Templates.StartPage.Start" />
        <element api="F:AppStore.Templates.StartPage.AppName" />
        <element api="F:AppStore.Templates.StartPage.AppAuthor" />
        <element api="F:AppStore.Templates.StartPage.AppLogo" />
        <element api="F:AppStore.Templates.StartPage.SecondaryTileCommandBar" />
        <element api="F:AppStore.Templates.StartPage.PinUnPinCommandButton" />
        <element api="F:AppStore.Templates.StartPage._contentLoaded" />
        <element api="M:AppStore.Templates.StartPage.#ctor" />
        <element api="M:AppStore.Templates.StartPage.NavigationHelper_LoadState(System.Object,AppStore.Common.LoadStateEventArgs)" />
        <element api="M:AppStore.Templates.StartPage.NavigationHelper_SaveState(System.Object,AppStore.Common.SaveStateEventArgs)" />
        <element api="M:AppStore.Templates.StartPage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.Templates.StartPage.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.Templates.StartPage.Start_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.Templates.StartPage.updateTile" />
        <element api="M:AppStore.Templates.StartPage.ToggleAppBarButton(System.Boolean)" />
        <element api="M:AppStore.Templates.StartPage.Init" />
        <element api="M:AppStore.Templates.StartPage.pinToAppBar_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.Templates.StartPage.GetElementRect(Windows.UI.Xaml.FrameworkElement)" />
        <element api="M:AppStore.Templates.StartPage.InitializeComponent" />
        <element api="M:AppStore.Templates.StartPage.Connect(System.Int32,System.Object)" />
        <element api="M:AppStore.Templates.StartPage.#cctor" />
        <element api="P:AppStore.Templates.StartPage.NavigationHelper" />
        <element api="P:AppStore.Templates.StartPage.DefaultViewModel" />
        <element api="M:Windows.UI.Xaml.Controls.Page.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
          <apidata name="OnNavigatingFrom" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IPageOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.TopAppBar">
          <apidata name="TopAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TopAppBar" />
          <setter name="set_TopAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.TopAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.NavigationCacheMode">
          <apidata name="NavigationCacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_NavigationCacheMode" />
          <setter name="set_NavigationCacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Navigation.NavigationCacheMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.NavigationCacheMode">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.BottomAppBar">
          <apidata name="BottomAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BottomAppBar" />
          <setter name="set_BottomAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.BottomAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.Frame">
          <apidata name="Frame" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Frame" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.Frame" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.Frame">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.UserControl.Content">
          <apidata name="Content" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Content" />
          <setter name="set_Content" />
          <returns>
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IUserControl.Content">
              <type api="T:Windows.UI.Xaml.Controls.IUserControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.ApplyTemplate">
          <apidata name="ApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.ApplyTemplate">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.Focus(Windows.UI.Xaml.FocusState)">
          <apidata name="Focus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.Focus(Windows.UI.Xaml.FocusState)">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerEntered" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerPressed" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerMoved" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerReleased" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerExited" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCaptureLost" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCanceled" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerWheelChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
          <apidata name="OnTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
          <apidata name="OnDoubleTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
          <apidata name="OnHolding" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
          <apidata name="OnRightTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
          <apidata name="OnManipulationStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
          <apidata name="OnManipulationInertiaStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
          <apidata name="OnManipulationStarted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
          <apidata name="OnManipulationDelta" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
          <apidata name="OnManipulationCompleted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnGotFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnLostFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDrop(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDrop(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.GetTemplateChild(System.String)">
          <apidata name="GetTemplateChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="childName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlProtected.GetTemplateChild(System.String)">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStyle">
          <apidata name="FontStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStyle" />
          <setter name="set_FontStyle" />
          <returns>
            <type api="T:Windows.UI.Text.FontStyle" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStyle">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStretch">
          <apidata name="FontStretch" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStretch" />
          <setter name="set_FontStretch" />
          <returns>
            <type api="T:Windows.UI.Text.FontStretch" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStretch">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontSize">
          <apidata name="FontSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontSize" />
          <setter name="set_FontSize" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontSize">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontFamily">
          <apidata name="FontFamily" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontFamily" />
          <setter name="set_FontFamily" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.FontFamily" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontFamily">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontWeight">
          <apidata name="FontWeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontWeight" />
          <setter name="set_FontWeight" />
          <returns>
            <type api="T:Windows.UI.Text.FontWeight" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontWeight">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.CharacterSpacing">
          <apidata name="CharacterSpacing" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CharacterSpacing" />
          <setter name="set_CharacterSpacing" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.CharacterSpacing">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderThickness">
          <apidata name="BorderThickness" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderThickness" />
          <setter name="set_BorderThickness" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderThickness">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderBrush">
          <apidata name="BorderBrush" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderBrush" />
          <setter name="set_BorderBrush" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderBrush">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Background">
          <apidata name="Background" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Background" />
          <setter name="set_Background" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Background">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Foreground">
          <apidata name="Foreground" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Foreground" />
          <setter name="set_Foreground" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Foreground">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.VerticalContentAlignment">
          <apidata name="VerticalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalContentAlignment" />
          <setter name="set_VerticalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.VerticalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Template">
          <apidata name="Template" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Template" />
          <setter name="set_Template" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.ControlTemplate" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Template">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabNavigation">
          <apidata name="TabNavigation" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabNavigation" />
          <setter name="set_TabNavigation" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.KeyboardNavigationMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabNavigation">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabIndex">
          <apidata name="TabIndex" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabIndex" />
          <setter name="set_TabIndex" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabIndex">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Padding">
          <apidata name="Padding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Padding" />
          <setter name="set_Padding" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Padding">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTabStop">
          <apidata name="IsTabStop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTabStop" />
          <setter name="set_IsTabStop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsTabStop">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsEnabled">
          <apidata name="IsEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsEnabled" />
          <setter name="set_IsEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.HorizontalContentAlignment">
          <apidata name="HorizontalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalContentAlignment" />
          <setter name="set_HorizontalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.HorizontalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FocusState">
          <apidata name="FocusState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_FocusState" />
          <returns>
            <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FocusState">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.DefaultStyleKey">
          <apidata name="DefaultStyleKey" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DefaultStyleKey" />
          <setter name="set_DefaultStyleKey" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControlProtected.DefaultStyleKey">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTextScaleFactorEnabled">
          <apidata name="IsTextScaleFactorEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTextScaleFactorEnabled" />
          <setter name="set_IsTextScaleFactorEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl2.IsTextScaleFactorEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.Controls.Control.IsEnabledChanged">
          <apidata name="IsEnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsEnabledChanged" />
          <remover name="remove_IsEnabledChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.Controls.IControl.IsEnabledChanged">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.FindName(System.String)">
          <apidata name="FindName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="name" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.FindName(System.String)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="binding" in="true">
              <type api="T:Windows.UI.Xaml.Data.BindingBase" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetBindingExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Data.BindingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement2.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.MeasureOverride(Windows.Foundation.Size)">
          <apidata name="MeasureOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.MeasureOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.ArrangeOverride(Windows.Foundation.Size)">
          <apidata name="ArrangeOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="finalSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.ArrangeOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.OnApplyTemplate">
          <apidata name="OnApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.OnApplyTemplate">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GoToElementStateCore(System.String,System.Boolean)">
          <apidata name="GoToElementStateCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="stateName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="useTransitions" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides2.GoToElementStateCore(System.String,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Margin">
          <apidata name="Margin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Margin" />
          <setter name="set_Margin" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Margin">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Language">
          <apidata name="Language" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Language" />
          <setter name="set_Language" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Language">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.HorizontalAlignment">
          <apidata name="HorizontalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalAlignment" />
          <setter name="set_HorizontalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.HorizontalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.FlowDirection">
          <apidata name="FlowDirection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FlowDirection" />
          <setter name="set_FlowDirection" />
          <returns>
            <type api="T:Windows.UI.Xaml.FlowDirection" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.FlowDirection">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.DataContext">
          <apidata name="DataContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DataContext" />
          <setter name="set_DataContext" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.DataContext">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.VerticalAlignment">
          <apidata name="VerticalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalAlignment" />
          <setter name="set_VerticalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.VerticalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxWidth">
          <apidata name="MaxWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxWidth" />
          <setter name="set_MaxWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxHeight">
          <apidata name="MaxHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxHeight" />
          <setter name="set_MaxHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Height">
          <apidata name="Height" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Height" />
          <setter name="set_Height" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Height">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinHeight">
          <apidata name="MinHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinHeight" />
          <setter name="set_MinHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Width">
          <apidata name="Width" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Width" />
          <setter name="set_Width" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Width">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Tag">
          <apidata name="Tag" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Tag" />
          <setter name="set_Tag" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Tag">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Style">
          <apidata name="Style" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Style" />
          <setter name="set_Style" />
          <returns>
            <type api="T:Windows.UI.Xaml.Style" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Style">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Resources">
          <apidata name="Resources" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Resources" />
          <setter name="set_Resources" />
          <returns>
            <type api="T:Windows.UI.Xaml.ResourceDictionary" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Resources">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Name">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinWidth">
          <apidata name="MinWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinWidth" />
          <setter name="set_MinWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualWidth">
          <apidata name="ActualWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.BaseUri">
          <apidata name="BaseUri" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_BaseUri" />
          <returns>
            <type api="T:System.Uri" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.BaseUri">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Parent">
          <apidata name="Parent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Parent" />
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Parent">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Triggers">
          <apidata name="Triggers" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Triggers" />
          <returns>
            <type api="T:Windows.UI.Xaml.TriggerCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Triggers">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualHeight">
          <apidata name="ActualHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.RequestedTheme">
          <apidata name="RequestedTheme" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestedTheme" />
          <setter name="set_RequestedTheme" />
          <returns>
            <type api="T:Windows.UI.Xaml.ElementTheme" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement2.RequestedTheme">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.LayoutUpdated">
          <apidata name="LayoutUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LayoutUpdated" />
          <remover name="remove_LayoutUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Object" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.LayoutUpdated">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Loaded">
          <apidata name="Loaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Loaded" />
          <remover name="remove_Loaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Loaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.SizeChanged">
          <apidata name="SizeChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_SizeChanged" />
          <remover name="remove_SizeChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.SizeChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.SizeChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.SizeChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Unloaded">
          <apidata name="Unloaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Unloaded" />
          <remover name="remove_Unloaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Unloaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.DataContextChanged">
          <apidata name="DataContextChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DataContextChanged" />
          <remover name="remove_DataContextChanged" />
          <eventhandler>
            <type api="T:Windows.Foundation.TypedEventHandler`2" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
                <type api="T:Windows.UI.Xaml.DataContextChangedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement2.DataContextChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Measure(Windows.Foundation.Size)">
          <apidata name="Measure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Measure(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Arrange(Windows.Foundation.Rect)">
          <apidata name="Arrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="finalRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Arrange(Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="CapturePointer" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="ReleasePointerCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCaptures">
          <apidata name="ReleasePointerCaptures" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="handledEventsToo" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
          <apidata name="RemoveHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
          <apidata name="TransformToVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="visual" in="true">
              <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Media.GeneralTransform" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateMeasure">
          <apidata name="InvalidateMeasure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateMeasure">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateArrange">
          <apidata name="InvalidateArrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateArrange">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.UpdateLayout">
          <apidata name="UpdateLayout" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.UpdateLayout">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CancelDirectManipulations">
          <apidata name="CancelDirectManipulations" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement2.CancelDirectManipulations">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnCreateAutomationPeer">
          <apidata name="OnCreateAutomationPeer" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:Windows.UI.Xaml.Automation.Peers.AutomationPeer" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnCreateAutomationPeer">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnDisconnectVisualChildren">
          <apidata name="OnDisconnectVisualChildren" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnDisconnectVisualChildren">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
          <apidata name="FindSubElementsForTouchTargeting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="point" in="true">
              <type api="T:Windows.Foundation.Point" ref="false" />
            </parameter>
            <parameter name="boundingRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:Windows.Foundation.Point" ref="false" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CompositeMode">
          <apidata name="CompositeMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CompositeMode" />
          <setter name="set_CompositeMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.ElementCompositeMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement2.CompositeMode">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.ManipulationMode">
          <apidata name="ManipulationMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_ManipulationMode" />
          <setter name="set_ManipulationMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.ManipulationModes" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.ManipulationMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsTapEnabled">
          <apidata name="IsTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTapEnabled" />
          <setter name="set_IsTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsRightTapEnabled">
          <apidata name="IsRightTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsRightTapEnabled" />
          <setter name="set_IsRightTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsRightTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHoldingEnabled">
          <apidata name="IsHoldingEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHoldingEnabled" />
          <setter name="set_IsHoldingEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHoldingEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHitTestVisible">
          <apidata name="IsHitTestVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHitTestVisible" />
          <setter name="set_IsHitTestVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHitTestVisible">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsDoubleTapEnabled">
          <apidata name="IsDoubleTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsDoubleTapEnabled" />
          <setter name="set_IsDoubleTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsDoubleTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Clip">
          <apidata name="Clip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Clip" />
          <setter name="set_Clip" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.RectangleGeometry" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Clip">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CacheMode">
          <apidata name="CacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CacheMode" />
          <setter name="set_CacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.CacheMode" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.CacheMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Opacity">
          <apidata name="Opacity" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Opacity" />
          <setter name="set_Opacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Opacity">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.AllowDrop">
          <apidata name="AllowDrop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowDrop" />
          <setter name="set_AllowDrop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.AllowDrop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Visibility">
          <apidata name="Visibility" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Visibility" />
          <setter name="set_Visibility" />
          <returns>
            <type api="T:Windows.UI.Xaml.Visibility" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Visibility">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.UseLayoutRounding">
          <apidata name="UseLayoutRounding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_UseLayoutRounding" />
          <setter name="set_UseLayoutRounding" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.UseLayoutRounding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Transitions">
          <apidata name="Transitions" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Transitions" />
          <setter name="set_Transitions" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Animation.TransitionCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Transitions">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransformOrigin">
          <apidata name="RenderTransformOrigin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransformOrigin" />
          <setter name="set_RenderTransformOrigin" />
          <returns>
            <type api="T:Windows.Foundation.Point" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransformOrigin">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransform">
          <apidata name="RenderTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransform" />
          <setter name="set_RenderTransform" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Transform" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransform">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Projection">
          <apidata name="Projection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Projection" />
          <setter name="set_Projection" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Projection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Projection">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.DesiredSize">
          <apidata name="DesiredSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DesiredSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.DesiredSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.PointerCaptures">
          <apidata name="PointerCaptures" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_PointerCaptures" />
          <returns>
            <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.PointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderSize">
          <apidata name="RenderSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_RenderSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DoubleTapped">
          <apidata name="DoubleTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DoubleTapped" />
          <remover name="remove_DoubleTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DoubleTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragEnter">
          <apidata name="DragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragEnter" />
          <remover name="remove_DragEnter" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragEnter">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragLeave">
          <apidata name="DragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragLeave" />
          <remover name="remove_DragLeave" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragLeave">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragOver">
          <apidata name="DragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragOver" />
          <remover name="remove_DragOver" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragOver">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Drop">
          <apidata name="Drop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Drop" />
          <remover name="remove_Drop" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Drop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.GotFocus">
          <apidata name="GotFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotFocus" />
          <remover name="remove_GotFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.GotFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Holding">
          <apidata name="Holding" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Holding" />
          <remover name="remove_Holding" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.HoldingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Holding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyDown">
          <apidata name="KeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyDown" />
          <remover name="remove_KeyDown" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyDown">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyUp">
          <apidata name="KeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyUp" />
          <remover name="remove_KeyUp" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyUp">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.LostFocus">
          <apidata name="LostFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostFocus" />
          <remover name="remove_LostFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.LostFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationCompleted">
          <apidata name="ManipulationCompleted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationCompleted" />
          <remover name="remove_ManipulationCompleted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationCompleted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationDelta">
          <apidata name="ManipulationDelta" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationDelta" />
          <remover name="remove_ManipulationDelta" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationDelta">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationInertiaStarting">
          <apidata name="ManipulationInertiaStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationInertiaStarting" />
          <remover name="remove_ManipulationInertiaStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationInertiaStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarted">
          <apidata name="ManipulationStarted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarted" />
          <remover name="remove_ManipulationStarted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarting">
          <apidata name="ManipulationStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarting" />
          <remover name="remove_ManipulationStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCanceled">
          <apidata name="PointerCanceled" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCanceled" />
          <remover name="remove_PointerCanceled" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCanceled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCaptureLost">
          <apidata name="PointerCaptureLost" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCaptureLost" />
          <remover name="remove_PointerCaptureLost" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCaptureLost">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerEntered">
          <apidata name="PointerEntered" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerEntered" />
          <remover name="remove_PointerEntered" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerEntered">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerExited">
          <apidata name="PointerExited" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerExited" />
          <remover name="remove_PointerExited" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerExited">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerMoved">
          <apidata name="PointerMoved" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerMoved" />
          <remover name="remove_PointerMoved" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerMoved">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerPressed">
          <apidata name="PointerPressed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerPressed" />
          <remover name="remove_PointerPressed" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerPressed">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerReleased">
          <apidata name="PointerReleased" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerReleased" />
          <remover name="remove_PointerReleased" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerReleased">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerWheelChanged">
          <apidata name="PointerWheelChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerWheelChanged" />
          <remover name="remove_PointerWheelChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerWheelChanged">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.RightTapped">
          <apidata name="RightTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_RightTapped" />
          <remover name="remove_RightTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.RightTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.RightTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Tapped">
          <apidata name="Tapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Tapped" />
          <remover name="remove_Tapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.TappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Tapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ReadLocalValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetAnimationBaseValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.DependencyObject.Dispatcher">
          <apidata name="Dispatcher" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Dispatcher" />
          <returns>
            <type api="T:Windows.UI.Core.CoreDispatcher" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IDependencyObject.Dispatcher">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.StartPage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.StartPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.StartPage.#cctor">
      <apidata name=".cctor" group="member" subgroup="constructor" />
      <memberdata visibility="private" static="true" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.StartPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.StartPage._contentLoaded">
      <apidata name="_contentLoaded" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.StartPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.StartPage.AppAuthor">
      <apidata name="AppAuthor" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.StartPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.StartPage.AppLogo">
      <apidata name="AppLogo" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Image" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.StartPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.StartPage.AppName">
      <apidata name="AppName" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.StartPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.StartPage.Connect(System.Int32,System.Object)">
      <apidata name="Connect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="connectionId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
          <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.StartPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.StartPage.ContentRoot">
      <apidata name="ContentRoot" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Grid" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.StartPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.StartPage.defaultViewModel">
      <apidata name="defaultViewModel" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.StartPage" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Templates.StartPage.DefaultViewModel">
      <apidata name="DefaultViewModel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultViewModel" />
      <returns>
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.StartPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.StartPage.GetElementRect(Windows.UI.Xaml.FrameworkElement)">
      <apidata name="GetElementRect" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.Rect" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.StartPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.StartPage.Init">
      <apidata name="Init" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.StartPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.StartPage.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.StartPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.StartPage.LayoutRoot">
      <apidata name="LayoutRoot" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Grid" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.StartPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.StartPage.navigationHelper">
      <apidata name="navigationHelper" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.StartPage" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Templates.StartPage.NavigationHelper">
      <apidata name="NavigationHelper" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NavigationHelper" />
      <returns>
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.StartPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.StartPage.NavigationHelper_LoadState(System.Object,AppStore.Common.LoadStateEventArgs)">
      <apidata name="NavigationHelper_LoadState" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:AppStore.Common.LoadStateEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.StartPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.StartPage.NavigationHelper_SaveState(System.Object,AppStore.Common.SaveStateEventArgs)">
      <apidata name="NavigationHelper_SaveState" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:AppStore.Common.SaveStateEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.StartPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.StartPage.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedFrom" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.StartPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.StartPage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedTo" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.StartPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.StartPage.page">
      <apidata name="page" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.StartPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.StartPage.pinToAppBar_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="pinToAppBar_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.StartPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.StartPage.PinUnPinCommandButton">
      <apidata name="PinUnPinCommandButton" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.AppBarButton" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.StartPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.StartPage.removeParameter">
      <apidata name="removeParameter" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.StartPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.StartPage.SecondaryTileCommandBar">
      <apidata name="SecondaryTileCommandBar" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.CommandBar" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.StartPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.StartPage.Start">
      <apidata name="Start" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.StartPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.StartPage.Start_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Start_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.StartPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.StartPage.ToggleAppBarButton(System.Boolean)">
      <apidata name="ToggleAppBarButton" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="showPinButton">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.StartPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.StartPage.updateTile">
      <apidata name="updateTile" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.StartPage" ref="true" />
      </containers>
    </api>
    <api id="T:AppStore.Templates.WordInfoPage">
      <apidata name="WordInfoPage" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="F:AppStore.Templates.WordInfoPage.navigationHelper" />
        <element api="F:AppStore.Templates.WordInfoPage.defaultViewModel" />
        <element api="F:AppStore.Templates.WordInfoPage.puzzle" />
        <element api="F:AppStore.Templates.WordInfoPage.LayoutRoot" />
        <element api="F:AppStore.Templates.WordInfoPage.ContentRoot" />
        <element api="F:AppStore.Templates.WordInfoPage.PuzzleNumber" />
        <element api="F:AppStore.Templates.WordInfoPage.Word" />
        <element api="F:AppStore.Templates.WordInfoPage.Enter" />
        <element api="F:AppStore.Templates.WordInfoPage.Answer" />
        <element api="F:AppStore.Templates.WordInfoPage.Back" />
        <element api="F:AppStore.Templates.WordInfoPage.Next" />
        <element api="F:AppStore.Templates.WordInfoPage.Response" />
        <element api="F:AppStore.Templates.WordInfoPage.OriginalWord" />
        <element api="F:AppStore.Templates.WordInfoPage.WordDescription" />
        <element api="F:AppStore.Templates.WordInfoPage.pageTitle" />
        <element api="F:AppStore.Templates.WordInfoPage._contentLoaded" />
        <element api="M:AppStore.Templates.WordInfoPage.#ctor" />
        <element api="M:AppStore.Templates.WordInfoPage.NavigationHelper_LoadState(System.Object,AppStore.Common.LoadStateEventArgs)" />
        <element api="M:AppStore.Templates.WordInfoPage.NavigationHelper_SaveState(System.Object,AppStore.Common.SaveStateEventArgs)" />
        <element api="M:AppStore.Templates.WordInfoPage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.Templates.WordInfoPage.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)" />
        <element api="M:AppStore.Templates.WordInfoPage.Back_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.Templates.WordInfoPage.Enter_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.Templates.WordInfoPage.Next_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)" />
        <element api="M:AppStore.Templates.WordInfoPage.Word_TextChanged(System.Object,Windows.UI.Xaml.Controls.TextChangedEventArgs)" />
        <element api="M:AppStore.Templates.WordInfoPage.InitializeComponent" />
        <element api="M:AppStore.Templates.WordInfoPage.Connect(System.Int32,System.Object)" />
        <element api="P:AppStore.Templates.WordInfoPage.NavigationHelper" />
        <element api="P:AppStore.Templates.WordInfoPage.DefaultViewModel" />
        <element api="M:Windows.UI.Xaml.Controls.Page.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
          <apidata name="OnNavigatingFrom" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatingFrom(Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IPageOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.TopAppBar">
          <apidata name="TopAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TopAppBar" />
          <setter name="set_TopAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.TopAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.NavigationCacheMode">
          <apidata name="NavigationCacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_NavigationCacheMode" />
          <setter name="set_NavigationCacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Navigation.NavigationCacheMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.NavigationCacheMode">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.BottomAppBar">
          <apidata name="BottomAppBar" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BottomAppBar" />
          <setter name="set_BottomAppBar" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.AppBar" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.BottomAppBar">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Page.Frame">
          <apidata name="Frame" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Frame" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.Frame" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IPage.Frame">
              <type api="T:Windows.UI.Xaml.Controls.IPage" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.UserControl.Content">
          <apidata name="Content" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Content" />
          <setter name="set_Content" />
          <returns>
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IUserControl.Content">
              <type api="T:Windows.UI.Xaml.Controls.IUserControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.UserControl" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.ApplyTemplate">
          <apidata name="ApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.ApplyTemplate">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.Focus(Windows.UI.Xaml.FocusState)">
          <apidata name="Focus" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControl.Focus(Windows.UI.Xaml.FocusState)">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerEntered" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerPressed" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerMoved" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerReleased" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerExited" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCaptureLost" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerCanceled" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
          <apidata name="OnPointerWheelChanged" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
          <apidata name="OnTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
          <apidata name="OnDoubleTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
          <apidata name="OnHolding" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
          <apidata name="OnRightTapped" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
          <apidata name="OnManipulationStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
          <apidata name="OnManipulationInertiaStarting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
          <apidata name="OnManipulationStarted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
          <apidata name="OnManipulationDelta" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
          <apidata name="OnManipulationCompleted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyUp" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
          <apidata name="OnKeyDown" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnGotFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnGotFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
          <apidata name="OnLostFocus" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnLostFocus(Windows.UI.Xaml.RoutedEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragEnter" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragEnter(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragLeave" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragLeave(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDragOver" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDragOver(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.OnDrop(Windows.UI.Xaml.DragEventArgs)">
          <apidata name="OnDrop" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="e" in="true">
              <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlOverrides.OnDrop(Windows.UI.Xaml.DragEventArgs)">
              <type api="T:Windows.UI.Xaml.Controls.IControlOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.Controls.Control.GetTemplateChild(System.String)">
          <apidata name="GetTemplateChild" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="childName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.Controls.IControlProtected.GetTemplateChild(System.String)">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStyle">
          <apidata name="FontStyle" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStyle" />
          <setter name="set_FontStyle" />
          <returns>
            <type api="T:Windows.UI.Text.FontStyle" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStyle">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontStretch">
          <apidata name="FontStretch" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontStretch" />
          <setter name="set_FontStretch" />
          <returns>
            <type api="T:Windows.UI.Text.FontStretch" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontStretch">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontSize">
          <apidata name="FontSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontSize" />
          <setter name="set_FontSize" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontSize">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontFamily">
          <apidata name="FontFamily" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontFamily" />
          <setter name="set_FontFamily" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.FontFamily" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontFamily">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FontWeight">
          <apidata name="FontWeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FontWeight" />
          <setter name="set_FontWeight" />
          <returns>
            <type api="T:Windows.UI.Text.FontWeight" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FontWeight">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.CharacterSpacing">
          <apidata name="CharacterSpacing" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CharacterSpacing" />
          <setter name="set_CharacterSpacing" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.CharacterSpacing">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderThickness">
          <apidata name="BorderThickness" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderThickness" />
          <setter name="set_BorderThickness" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderThickness">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.BorderBrush">
          <apidata name="BorderBrush" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_BorderBrush" />
          <setter name="set_BorderBrush" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.BorderBrush">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Background">
          <apidata name="Background" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Background" />
          <setter name="set_Background" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Background">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Foreground">
          <apidata name="Foreground" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Foreground" />
          <setter name="set_Foreground" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Brush" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Foreground">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.VerticalContentAlignment">
          <apidata name="VerticalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalContentAlignment" />
          <setter name="set_VerticalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.VerticalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Template">
          <apidata name="Template" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Template" />
          <setter name="set_Template" />
          <returns>
            <type api="T:Windows.UI.Xaml.Controls.ControlTemplate" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Template">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabNavigation">
          <apidata name="TabNavigation" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabNavigation" />
          <setter name="set_TabNavigation" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.KeyboardNavigationMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabNavigation">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.TabIndex">
          <apidata name="TabIndex" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_TabIndex" />
          <setter name="set_TabIndex" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.TabIndex">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.Padding">
          <apidata name="Padding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Padding" />
          <setter name="set_Padding" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.Padding">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTabStop">
          <apidata name="IsTabStop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTabStop" />
          <setter name="set_IsTabStop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsTabStop">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsEnabled">
          <apidata name="IsEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsEnabled" />
          <setter name="set_IsEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.IsEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.HorizontalContentAlignment">
          <apidata name="HorizontalContentAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalContentAlignment" />
          <setter name="set_HorizontalContentAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.HorizontalContentAlignment">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.FocusState">
          <apidata name="FocusState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_FocusState" />
          <returns>
            <type api="T:Windows.UI.Xaml.FocusState" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl.FocusState">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.DefaultStyleKey">
          <apidata name="DefaultStyleKey" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DefaultStyleKey" />
          <setter name="set_DefaultStyleKey" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControlProtected.DefaultStyleKey">
              <type api="T:Windows.UI.Xaml.Controls.IControlProtected" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.Controls.Control.IsTextScaleFactorEnabled">
          <apidata name="IsTextScaleFactorEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTextScaleFactorEnabled" />
          <setter name="set_IsTextScaleFactorEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.Controls.IControl2.IsTextScaleFactorEnabled">
              <type api="T:Windows.UI.Xaml.Controls.IControl2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.Controls.Control.IsEnabledChanged">
          <apidata name="IsEnabledChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_IsEnabledChanged" />
          <remover name="remove_IsEnabledChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.Controls.IControl.IsEnabledChanged">
              <type api="T:Windows.UI.Xaml.Controls.IControl" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml.Controls" />
            <type api="T:Windows.UI.Xaml.Controls.Control" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.FindName(System.String)">
          <apidata name="FindName" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="name" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.FindName(System.String)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
          <apidata name="SetBinding" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="binding" in="true">
              <type api="T:Windows.UI.Xaml.Data.BindingBase" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement.SetBinding(Windows.UI.Xaml.DependencyProperty,Windows.UI.Xaml.Data.BindingBase)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetBindingExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Data.BindingExpression" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElement2.GetBindingExpression(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.MeasureOverride(Windows.Foundation.Size)">
          <apidata name="MeasureOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.MeasureOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.ArrangeOverride(Windows.Foundation.Size)">
          <apidata name="ArrangeOverride" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="finalSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.ArrangeOverride(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.OnApplyTemplate">
          <apidata name="OnApplyTemplate" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides.OnApplyTemplate">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.FrameworkElement.GoToElementStateCore(System.String,System.Boolean)">
          <apidata name="GoToElementStateCore" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="stateName" in="true">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="useTransitions" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IFrameworkElementOverrides2.GoToElementStateCore(System.String,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IFrameworkElementOverrides2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Margin">
          <apidata name="Margin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Margin" />
          <setter name="set_Margin" />
          <returns>
            <type api="T:Windows.UI.Xaml.Thickness" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Margin">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Language">
          <apidata name="Language" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Language" />
          <setter name="set_Language" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Language">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.HorizontalAlignment">
          <apidata name="HorizontalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HorizontalAlignment" />
          <setter name="set_HorizontalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.HorizontalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.HorizontalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.FlowDirection">
          <apidata name="FlowDirection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_FlowDirection" />
          <setter name="set_FlowDirection" />
          <returns>
            <type api="T:Windows.UI.Xaml.FlowDirection" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.FlowDirection">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.DataContext">
          <apidata name="DataContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_DataContext" />
          <setter name="set_DataContext" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.DataContext">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.VerticalAlignment">
          <apidata name="VerticalAlignment" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_VerticalAlignment" />
          <setter name="set_VerticalAlignment" />
          <returns>
            <type api="T:Windows.UI.Xaml.VerticalAlignment" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.VerticalAlignment">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxWidth">
          <apidata name="MaxWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxWidth" />
          <setter name="set_MaxWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MaxHeight">
          <apidata name="MaxHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MaxHeight" />
          <setter name="set_MaxHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MaxHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Height">
          <apidata name="Height" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Height" />
          <setter name="set_Height" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Height">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinHeight">
          <apidata name="MinHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinHeight" />
          <setter name="set_MinHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Width">
          <apidata name="Width" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Width" />
          <setter name="set_Width" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Width">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Tag">
          <apidata name="Tag" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Tag" />
          <setter name="set_Tag" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Tag">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Style">
          <apidata name="Style" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Style" />
          <setter name="set_Style" />
          <returns>
            <type api="T:Windows.UI.Xaml.Style" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Style">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Resources">
          <apidata name="Resources" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Resources" />
          <setter name="set_Resources" />
          <returns>
            <type api="T:Windows.UI.Xaml.ResourceDictionary" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Resources">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Name">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.MinWidth">
          <apidata name="MinWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_MinWidth" />
          <setter name="set_MinWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.MinWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualWidth">
          <apidata name="ActualWidth" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualWidth" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualWidth">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.BaseUri">
          <apidata name="BaseUri" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_BaseUri" />
          <returns>
            <type api="T:System.Uri" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.BaseUri">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Parent">
          <apidata name="Parent" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Parent" />
          <returns>
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Parent">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.Triggers">
          <apidata name="Triggers" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Triggers" />
          <returns>
            <type api="T:Windows.UI.Xaml.TriggerCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.Triggers">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.ActualHeight">
          <apidata name="ActualHeight" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_ActualHeight" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement.ActualHeight">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.FrameworkElement.RequestedTheme">
          <apidata name="RequestedTheme" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestedTheme" />
          <setter name="set_RequestedTheme" />
          <returns>
            <type api="T:Windows.UI.Xaml.ElementTheme" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IFrameworkElement2.RequestedTheme">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.LayoutUpdated">
          <apidata name="LayoutUpdated" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LayoutUpdated" />
          <remover name="remove_LayoutUpdated" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Object" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.LayoutUpdated">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Loaded">
          <apidata name="Loaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Loaded" />
          <remover name="remove_Loaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Loaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.SizeChanged">
          <apidata name="SizeChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_SizeChanged" />
          <remover name="remove_SizeChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.SizeChangedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.SizeChangedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.SizeChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.Unloaded">
          <apidata name="Unloaded" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Unloaded" />
          <remover name="remove_Unloaded" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement.Unloaded">
              <type api="T:Windows.UI.Xaml.IFrameworkElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.FrameworkElement.DataContextChanged">
          <apidata name="DataContextChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DataContextChanged" />
          <remover name="remove_DataContextChanged" />
          <eventhandler>
            <type api="T:Windows.Foundation.TypedEventHandler`2" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
                <type api="T:Windows.UI.Xaml.DataContextChangedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <implements>
            <member api="E:Windows.UI.Xaml.IFrameworkElement2.DataContextChanged">
              <type api="T:Windows.UI.Xaml.IFrameworkElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.FrameworkElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Measure(Windows.Foundation.Size)">
          <apidata name="Measure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="availableSize" in="true">
              <type api="T:Windows.Foundation.Size" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Measure(Windows.Foundation.Size)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.Arrange(Windows.Foundation.Rect)">
          <apidata name="Arrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="finalRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.Arrange(Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="CapturePointer" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.CapturePointer(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
          <apidata name="ReleasePointerCapture" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="value" in="true">
              <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.ReleasePointerCaptures">
          <apidata name="ReleasePointerCaptures" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.ReleasePointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
          <apidata name="AddHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="handledEventsToo" in="true">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.AddHandler(Windows.UI.Xaml.RoutedEvent,System.Object,System.Boolean)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
          <apidata name="RemoveHandler" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="routedEvent" in="true">
              <type api="T:Windows.UI.Xaml.RoutedEvent" ref="true" />
            </parameter>
            <parameter name="handler" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.RemoveHandler(Windows.UI.Xaml.RoutedEvent,System.Object)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
          <apidata name="TransformToVisual" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="visual" in="true">
              <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Windows.UI.Xaml.Media.GeneralTransform" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.TransformToVisual(Windows.UI.Xaml.UIElement)">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateMeasure">
          <apidata name="InvalidateMeasure" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateMeasure">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.InvalidateArrange">
          <apidata name="InvalidateArrange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.InvalidateArrange">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.UpdateLayout">
          <apidata name="UpdateLayout" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement.UpdateLayout">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.CancelDirectManipulations">
          <apidata name="CancelDirectManipulations" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElement2.CancelDirectManipulations">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnCreateAutomationPeer">
          <apidata name="OnCreateAutomationPeer" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:Windows.UI.Xaml.Automation.Peers.AutomationPeer" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnCreateAutomationPeer">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.OnDisconnectVisualChildren">
          <apidata name="OnDisconnectVisualChildren" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.OnDisconnectVisualChildren">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.UIElement.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
          <apidata name="FindSubElementsForTouchTargeting" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="point" in="true">
              <type api="T:Windows.Foundation.Point" ref="false" />
            </parameter>
            <parameter name="boundingRect" in="true">
              <type api="T:Windows.Foundation.Rect" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:Windows.Foundation.Point" ref="false" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IUIElementOverrides.FindSubElementsForTouchTargeting(Windows.Foundation.Point,Windows.Foundation.Rect)">
              <type api="T:Windows.UI.Xaml.IUIElementOverrides" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CompositeMode">
          <apidata name="CompositeMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CompositeMode" />
          <setter name="set_CompositeMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.ElementCompositeMode" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement2.CompositeMode">
              <type api="T:Windows.UI.Xaml.IUIElement2" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.ManipulationMode">
          <apidata name="ManipulationMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_ManipulationMode" />
          <setter name="set_ManipulationMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Input.ManipulationModes" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.ManipulationMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsTapEnabled">
          <apidata name="IsTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsTapEnabled" />
          <setter name="set_IsTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsRightTapEnabled">
          <apidata name="IsRightTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsRightTapEnabled" />
          <setter name="set_IsRightTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsRightTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHoldingEnabled">
          <apidata name="IsHoldingEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHoldingEnabled" />
          <setter name="set_IsHoldingEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHoldingEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsHitTestVisible">
          <apidata name="IsHitTestVisible" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsHitTestVisible" />
          <setter name="set_IsHitTestVisible" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsHitTestVisible">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.IsDoubleTapEnabled">
          <apidata name="IsDoubleTapEnabled" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_IsDoubleTapEnabled" />
          <setter name="set_IsDoubleTapEnabled" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.IsDoubleTapEnabled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Clip">
          <apidata name="Clip" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Clip" />
          <setter name="set_Clip" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.RectangleGeometry" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Clip">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.CacheMode">
          <apidata name="CacheMode" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_CacheMode" />
          <setter name="set_CacheMode" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.CacheMode" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.CacheMode">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Opacity">
          <apidata name="Opacity" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Opacity" />
          <setter name="set_Opacity" />
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Opacity">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.AllowDrop">
          <apidata name="AllowDrop" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_AllowDrop" />
          <setter name="set_AllowDrop" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.AllowDrop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Visibility">
          <apidata name="Visibility" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Visibility" />
          <setter name="set_Visibility" />
          <returns>
            <type api="T:Windows.UI.Xaml.Visibility" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Visibility">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.UseLayoutRounding">
          <apidata name="UseLayoutRounding" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_UseLayoutRounding" />
          <setter name="set_UseLayoutRounding" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.UseLayoutRounding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Transitions">
          <apidata name="Transitions" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Transitions" />
          <setter name="set_Transitions" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Animation.TransitionCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Transitions">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransformOrigin">
          <apidata name="RenderTransformOrigin" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransformOrigin" />
          <setter name="set_RenderTransformOrigin" />
          <returns>
            <type api="T:Windows.Foundation.Point" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransformOrigin">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderTransform">
          <apidata name="RenderTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_RenderTransform" />
          <setter name="set_RenderTransform" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Transform" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderTransform">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.Projection">
          <apidata name="Projection" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Projection" />
          <setter name="set_Projection" />
          <returns>
            <type api="T:Windows.UI.Xaml.Media.Projection" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.Projection">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.DesiredSize">
          <apidata name="DesiredSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_DesiredSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.DesiredSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.PointerCaptures">
          <apidata name="PointerCaptures" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_PointerCaptures" />
          <returns>
            <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
              <specialization>
                <type api="T:Windows.UI.Xaml.Input.Pointer" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.PointerCaptures">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.UIElement.RenderSize">
          <apidata name="RenderSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_RenderSize" />
          <returns>
            <type api="T:Windows.Foundation.Size" ref="false" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IUIElement.RenderSize">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DoubleTapped">
          <apidata name="DoubleTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DoubleTapped" />
          <remover name="remove_DoubleTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DoubleTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragEnter">
          <apidata name="DragEnter" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragEnter" />
          <remover name="remove_DragEnter" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragEnter">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragLeave">
          <apidata name="DragLeave" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragLeave" />
          <remover name="remove_DragLeave" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragLeave">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.DragOver">
          <apidata name="DragOver" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_DragOver" />
          <remover name="remove_DragOver" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.DragOver">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Drop">
          <apidata name="Drop" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Drop" />
          <remover name="remove_Drop" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.DragEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.DragEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Drop">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.GotFocus">
          <apidata name="GotFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_GotFocus" />
          <remover name="remove_GotFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.GotFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Holding">
          <apidata name="Holding" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Holding" />
          <remover name="remove_Holding" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.HoldingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.HoldingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Holding">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyDown">
          <apidata name="KeyDown" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyDown" />
          <remover name="remove_KeyDown" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyDown">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.KeyUp">
          <apidata name="KeyUp" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_KeyUp" />
          <remover name="remove_KeyUp" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.KeyEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.KeyUp">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.LostFocus">
          <apidata name="LostFocus" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_LostFocus" />
          <remover name="remove_LostFocus" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.RoutedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.LostFocus">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationCompleted">
          <apidata name="ManipulationCompleted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationCompleted" />
          <remover name="remove_ManipulationCompleted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationCompleted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationDelta">
          <apidata name="ManipulationDelta" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationDelta" />
          <remover name="remove_ManipulationDelta" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationDelta">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationInertiaStarting">
          <apidata name="ManipulationInertiaStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationInertiaStarting" />
          <remover name="remove_ManipulationInertiaStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationInertiaStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarted">
          <apidata name="ManipulationStarted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarted" />
          <remover name="remove_ManipulationStarted" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarted">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.ManipulationStarting">
          <apidata name="ManipulationStarting" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_ManipulationStarting" />
          <remover name="remove_ManipulationStarting" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.ManipulationStarting">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCanceled">
          <apidata name="PointerCanceled" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCanceled" />
          <remover name="remove_PointerCanceled" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCanceled">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerCaptureLost">
          <apidata name="PointerCaptureLost" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerCaptureLost" />
          <remover name="remove_PointerCaptureLost" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerCaptureLost">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerEntered">
          <apidata name="PointerEntered" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerEntered" />
          <remover name="remove_PointerEntered" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerEntered">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerExited">
          <apidata name="PointerExited" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerExited" />
          <remover name="remove_PointerExited" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerExited">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerMoved">
          <apidata name="PointerMoved" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerMoved" />
          <remover name="remove_PointerMoved" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerMoved">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerPressed">
          <apidata name="PointerPressed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerPressed" />
          <remover name="remove_PointerPressed" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerPressed">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerReleased">
          <apidata name="PointerReleased" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerReleased" />
          <remover name="remove_PointerReleased" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerReleased">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.PointerWheelChanged">
          <apidata name="PointerWheelChanged" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_PointerWheelChanged" />
          <remover name="remove_PointerWheelChanged" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.PointerEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.PointerWheelChanged">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.RightTapped">
          <apidata name="RightTapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_RightTapped" />
          <remover name="remove_RightTapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.RightTappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.RightTappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.RightTapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="E:Windows.UI.Xaml.UIElement.Tapped">
          <apidata name="Tapped" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Tapped" />
          <remover name="remove_Tapped" />
          <eventhandler>
            <type api="T:Windows.UI.Xaml.Input.TappedEventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:Windows.UI.Xaml.Input.TappedRoutedEventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:Windows.UI.Xaml.IUIElement.Tapped">
              <type api="T:Windows.UI.Xaml.IUIElement" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.UIElement" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
          <apidata name="SetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
            <parameter name="value" in="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.SetValue(Windows.UI.Xaml.DependencyProperty,System.Object)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ClearValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ClearValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="ReadLocalValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.ReadLocalValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.UI.Xaml.DependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
          <apidata name="GetAnimationBaseValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="dp" in="true">
              <type api="T:Windows.UI.Xaml.DependencyProperty" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:Windows.UI.Xaml.IDependencyObject.GetAnimationBaseValue(Windows.UI.Xaml.DependencyProperty)">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.UI.Xaml.DependencyObject.Dispatcher">
          <apidata name="Dispatcher" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Dispatcher" />
          <returns>
            <type api="T:Windows.UI.Core.CoreDispatcher" ref="true" />
          </returns>
          <implements>
            <member api="P:Windows.UI.Xaml.IDependencyObject.Dispatcher">
              <type api="T:Windows.UI.Xaml.IDependencyObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Windows.UI.Xaml" />
            <type api="T:Windows.UI.Xaml.DependencyObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime" module="System.Runtime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.WordInfoPage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.WordInfoPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.WordInfoPage._contentLoaded">
      <apidata name="_contentLoaded" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.WordInfoPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.WordInfoPage.Answer">
      <apidata name="Answer" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.StackPanel" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.WordInfoPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.WordInfoPage.Back">
      <apidata name="Back" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.WordInfoPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.WordInfoPage.Back_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Back_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.WordInfoPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.WordInfoPage.Connect(System.Int32,System.Object)">
      <apidata name="Connect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="connectionId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Windows.UI.Xaml.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
          <type api="T:Windows.UI.Xaml.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.WordInfoPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.WordInfoPage.ContentRoot">
      <apidata name="ContentRoot" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Grid" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.WordInfoPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.WordInfoPage.defaultViewModel">
      <apidata name="defaultViewModel" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.WordInfoPage" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Templates.WordInfoPage.DefaultViewModel">
      <apidata name="DefaultViewModel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultViewModel" />
      <returns>
        <type api="T:AppStore.Common.ObservableDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.WordInfoPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.WordInfoPage.Enter">
      <apidata name="Enter" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.WordInfoPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.WordInfoPage.Enter_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Enter_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.WordInfoPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.WordInfoPage.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.WordInfoPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.WordInfoPage.LayoutRoot">
      <apidata name="LayoutRoot" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Grid" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.WordInfoPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.WordInfoPage.navigationHelper">
      <apidata name="navigationHelper" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.WordInfoPage" ref="true" />
      </containers>
    </api>
    <api id="P:AppStore.Templates.WordInfoPage.NavigationHelper">
      <apidata name="NavigationHelper" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NavigationHelper" />
      <returns>
        <type api="T:AppStore.Common.NavigationHelper" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.WordInfoPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.WordInfoPage.NavigationHelper_LoadState(System.Object,AppStore.Common.LoadStateEventArgs)">
      <apidata name="NavigationHelper_LoadState" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:AppStore.Common.LoadStateEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.WordInfoPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.WordInfoPage.NavigationHelper_SaveState(System.Object,AppStore.Common.SaveStateEventArgs)">
      <apidata name="NavigationHelper_SaveState" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:AppStore.Common.SaveStateEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.WordInfoPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.WordInfoPage.Next">
      <apidata name="Next" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.Button" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.WordInfoPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.WordInfoPage.Next_Click(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
      <apidata name="Next_Click" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.WordInfoPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.WordInfoPage.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedFrom" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedFrom(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.WordInfoPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.WordInfoPage.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
      <apidata name="OnNavigatedTo" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Windows.UI.Xaml.Controls.Page.OnNavigatedTo(Windows.UI.Xaml.Navigation.NavigationEventArgs)">
          <type api="T:Windows.UI.Xaml.Controls.Page" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Navigation.NavigationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.WordInfoPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.WordInfoPage.OriginalWord">
      <apidata name="OriginalWord" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.WordInfoPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.WordInfoPage.pageTitle">
      <apidata name="pageTitle" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.WordInfoPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.WordInfoPage.puzzle">
      <apidata name="puzzle" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:AppStore.Models.SpellingsModel" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.WordInfoPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.WordInfoPage.PuzzleNumber">
      <apidata name="PuzzleNumber" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.WordInfoPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.WordInfoPage.Response">
      <apidata name="Response" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.WordInfoPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.WordInfoPage.Word">
      <apidata name="Word" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBox" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.WordInfoPage" ref="true" />
      </containers>
    </api>
    <api id="M:AppStore.Templates.WordInfoPage.Word_TextChanged(System.Object,Windows.UI.Xaml.Controls.TextChangedEventArgs)">
      <apidata name="Word_TextChanged" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:Windows.UI.Xaml.Controls.TextChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.WordInfoPage" ref="true" />
      </containers>
    </api>
    <api id="F:AppStore.Templates.WordInfoPage.WordDescription">
      <apidata name="WordDescription" group="member" subgroup="field" />
      <memberdata visibility="private" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.UI.Xaml.Controls.TextBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="AppStore" module="AppStore" kind="WindowsApplication" />
        <namespace api="N:AppStore.Templates" />
        <type api="T:AppStore.Templates.WordInfoPage" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>